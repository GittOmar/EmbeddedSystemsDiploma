

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Aug 31 06:12:07 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,inline
    24                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,inline
    25                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1,group=2
    62                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Version 2.20
    84                           ; Generated 12/02/2020 GMT
    85                           ; 
    86                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4620 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000FE0                     bsr             equ	4064
   118   000FE9                     fsr0            equ	4073
   119   000FEA                     fsr0h           equ	4074
   120   000FE9                     fsr0l           equ	4073
   121   000FE1                     fsr1            equ	4065
   122   000FE2                     fsr1h           equ	4066
   123   000FE1                     fsr1l           equ	4065
   124   000FD9                     fsr2            equ	4057
   125   000FDA                     fsr2h           equ	4058
   126   000FD9                     fsr2l           equ	4057
   127   000FEF                     indf0           equ	4079
   128   000FE7                     indf1           equ	4071
   129   000FDF                     indf2           equ	4063
   130   000FF2                     intcon          equ	4082
   131   000000                     nvmcon          equ	0
   132   000FF9                     pcl             equ	4089
   133   000FFA                     pclath          equ	4090
   134   000FFB                     pclatu          equ	4091
   135   000FEB                     plusw0          equ	4075
   136   000FE3                     plusw1          equ	4067
   137   000FDB                     plusw2          equ	4059
   138   000FED                     postdec0        equ	4077
   139   000FE5                     postdec1        equ	4069
   140   000FDD                     postdec2        equ	4061
   141   000FEE                     postinc0        equ	4078
   142   000FE6                     postinc1        equ	4070
   143   000FDE                     postinc2        equ	4062
   144   000FEC                     preinc0         equ	4076
   145   000FE4                     preinc1         equ	4068
   146   000FDC                     preinc2         equ	4060
   147   000FF3                     prod            equ	4083
   148   000FF4                     prodh           equ	4084
   149   000FF3                     prodl           equ	4083
   150   000FD8                     status          equ	4056
   151   000FF5                     tablat          equ	4085
   152   000FF6                     tblptr          equ	4086
   153   000FF7                     tblptrh         equ	4087
   154   000FF6                     tblptrl         equ	4086
   155   000FF8                     tblptru         equ	4088
   156   000FFD                     tosl            equ	4093
   157   000FE8                     wreg            equ	4072
   158   000F80                     PORTA           equ	3968	;# 
   159   000F81                     PORTB           equ	3969	;# 
   160   000F82                     PORTC           equ	3970	;# 
   161   000F83                     PORTD           equ	3971	;# 
   162   000F84                     PORTE           equ	3972	;# 
   163   000F89                     LATA            equ	3977	;# 
   164   000F8A                     LATB            equ	3978	;# 
   165   000F8B                     LATC            equ	3979	;# 
   166   000F8C                     LATD            equ	3980	;# 
   167   000F8D                     LATE            equ	3981	;# 
   168   000F92                     TRISA           equ	3986	;# 
   169   000F92                     DDRA            equ	3986	;# 
   170   000F93                     TRISB           equ	3987	;# 
   171   000F93                     DDRB            equ	3987	;# 
   172   000F94                     TRISC           equ	3988	;# 
   173   000F94                     DDRC            equ	3988	;# 
   174   000F95                     TRISD           equ	3989	;# 
   175   000F95                     DDRD            equ	3989	;# 
   176   000F96                     TRISE           equ	3990	;# 
   177   000F96                     DDRE            equ	3990	;# 
   178   000F9B                     OSCTUNE         equ	3995	;# 
   179   000F9D                     PIE1            equ	3997	;# 
   180   000F9E                     PIR1            equ	3998	;# 
   181   000F9F                     IPR1            equ	3999	;# 
   182   000FA0                     PIE2            equ	4000	;# 
   183   000FA1                     PIR2            equ	4001	;# 
   184   000FA2                     IPR2            equ	4002	;# 
   185   000FA6                     EECON1          equ	4006	;# 
   186   000FA7                     EECON2          equ	4007	;# 
   187   000FA8                     EEDATA          equ	4008	;# 
   188   000FA9                     EEADR           equ	4009	;# 
   189   000FAA                     EEADRH          equ	4010	;# 
   190   000FAB                     RCSTA           equ	4011	;# 
   191   000FAB                     RCSTA1          equ	4011	;# 
   192   000FAC                     TXSTA           equ	4012	;# 
   193   000FAC                     TXSTA1          equ	4012	;# 
   194   000FAD                     TXREG           equ	4013	;# 
   195   000FAD                     TXREG1          equ	4013	;# 
   196   000FAE                     RCREG           equ	4014	;# 
   197   000FAE                     RCREG1          equ	4014	;# 
   198   000FAF                     SPBRG           equ	4015	;# 
   199   000FAF                     SPBRG1          equ	4015	;# 
   200   000FB0                     SPBRGH          equ	4016	;# 
   201   000FB1                     T3CON           equ	4017	;# 
   202   000FB2                     TMR3            equ	4018	;# 
   203   000FB2                     TMR3L           equ	4018	;# 
   204   000FB3                     TMR3H           equ	4019	;# 
   205   000FB4                     CMCON           equ	4020	;# 
   206   000FB5                     CVRCON          equ	4021	;# 
   207   000FB6                     ECCP1AS         equ	4022	;# 
   208   000FB7                     PWM1CON         equ	4023	;# 
   209   000FB8                     BAUDCON         equ	4024	;# 
   210   000FB8                     BAUDCTL         equ	4024	;# 
   211   000FBA                     CCP2CON         equ	4026	;# 
   212   000FBB                     CCPR2           equ	4027	;# 
   213   000FBB                     CCPR2L          equ	4027	;# 
   214   000FBC                     CCPR2H          equ	4028	;# 
   215   000FBD                     CCP1CON         equ	4029	;# 
   216   000FBE                     CCPR1           equ	4030	;# 
   217   000FBE                     CCPR1L          equ	4030	;# 
   218   000FBF                     CCPR1H          equ	4031	;# 
   219   000FC0                     ADCON2          equ	4032	;# 
   220   000FC1                     ADCON1          equ	4033	;# 
   221   000FC2                     ADCON0          equ	4034	;# 
   222   000FC3                     ADRES           equ	4035	;# 
   223   000FC3                     ADRESL          equ	4035	;# 
   224   000FC4                     ADRESH          equ	4036	;# 
   225   000FC5                     SSPCON2         equ	4037	;# 
   226   000FC6                     SSPCON1         equ	4038	;# 
   227   000FC7                     SSPSTAT         equ	4039	;# 
   228   000FC8                     SSPADD          equ	4040	;# 
   229   000FC9                     SSPBUF          equ	4041	;# 
   230   000FCA                     T2CON           equ	4042	;# 
   231   000FCB                     PR2             equ	4043	;# 
   232   000FCB                     MEMCON          equ	4043	;# 
   233   000FCC                     TMR2            equ	4044	;# 
   234   000FCD                     T1CON           equ	4045	;# 
   235   000FCE                     TMR1            equ	4046	;# 
   236   000FCE                     TMR1L           equ	4046	;# 
   237   000FCF                     TMR1H           equ	4047	;# 
   238   000FD0                     RCON            equ	4048	;# 
   239   000FD1                     WDTCON          equ	4049	;# 
   240   000FD2                     HLVDCON         equ	4050	;# 
   241   000FD2                     LVDCON          equ	4050	;# 
   242   000FD3                     OSCCON          equ	4051	;# 
   243   000FD5                     T0CON           equ	4053	;# 
   244   000FD6                     TMR0            equ	4054	;# 
   245   000FD6                     TMR0L           equ	4054	;# 
   246   000FD7                     TMR0H           equ	4055	;# 
   247   000FD8                     STATUS          equ	4056	;# 
   248   000FD9                     FSR2            equ	4057	;# 
   249   000FD9                     FSR2L           equ	4057	;# 
   250   000FDA                     FSR2H           equ	4058	;# 
   251   000FDB                     PLUSW2          equ	4059	;# 
   252   000FDC                     PREINC2         equ	4060	;# 
   253   000FDD                     POSTDEC2        equ	4061	;# 
   254   000FDE                     POSTINC2        equ	4062	;# 
   255   000FDF                     INDF2           equ	4063	;# 
   256   000FE0                     BSR             equ	4064	;# 
   257   000FE1                     FSR1            equ	4065	;# 
   258   000FE1                     FSR1L           equ	4065	;# 
   259   000FE2                     FSR1H           equ	4066	;# 
   260   000FE3                     PLUSW1          equ	4067	;# 
   261   000FE4                     PREINC1         equ	4068	;# 
   262   000FE5                     POSTDEC1        equ	4069	;# 
   263   000FE6                     POSTINC1        equ	4070	;# 
   264   000FE7                     INDF1           equ	4071	;# 
   265   000FE8                     WREG            equ	4072	;# 
   266   000FE9                     FSR0            equ	4073	;# 
   267   000FE9                     FSR0L           equ	4073	;# 
   268   000FEA                     FSR0H           equ	4074	;# 
   269   000FEB                     PLUSW0          equ	4075	;# 
   270   000FEC                     PREINC0         equ	4076	;# 
   271   000FED                     POSTDEC0        equ	4077	;# 
   272   000FEE                     POSTINC0        equ	4078	;# 
   273   000FEF                     INDF0           equ	4079	;# 
   274   000FF0                     INTCON3         equ	4080	;# 
   275   000FF1                     INTCON2         equ	4081	;# 
   276   000FF2                     INTCON          equ	4082	;# 
   277   000FF3                     PROD            equ	4083	;# 
   278   000FF3                     PRODL           equ	4083	;# 
   279   000FF4                     PRODH           equ	4084	;# 
   280   000FF5                     TABLAT          equ	4085	;# 
   281   000FF6                     TBLPTR          equ	4086	;# 
   282   000FF6                     TBLPTRL         equ	4086	;# 
   283   000FF7                     TBLPTRH         equ	4087	;# 
   284   000FF8                     TBLPTRU         equ	4088	;# 
   285   000FF9                     PCLAT           equ	4089	;# 
   286   000FF9                     PC              equ	4089	;# 
   287   000FF9                     PCL             equ	4089	;# 
   288   000FFA                     PCLATH          equ	4090	;# 
   289   000FFB                     PCLATU          equ	4091	;# 
   290   000FFC                     STKPTR          equ	4092	;# 
   291   000FFD                     TOS             equ	4093	;# 
   292   000FFD                     TOSL            equ	4093	;# 
   293   000FFE                     TOSH            equ	4094	;# 
   294   000FFF                     TOSU            equ	4095	;# 
   295   000F80                     PORTA           equ	3968	;# 
   296   000F81                     PORTB           equ	3969	;# 
   297   000F82                     PORTC           equ	3970	;# 
   298   000F83                     PORTD           equ	3971	;# 
   299   000F84                     PORTE           equ	3972	;# 
   300   000F89                     LATA            equ	3977	;# 
   301   000F8A                     LATB            equ	3978	;# 
   302   000F8B                     LATC            equ	3979	;# 
   303   000F8C                     LATD            equ	3980	;# 
   304   000F8D                     LATE            equ	3981	;# 
   305   000F92                     TRISA           equ	3986	;# 
   306   000F92                     DDRA            equ	3986	;# 
   307   000F93                     TRISB           equ	3987	;# 
   308   000F93                     DDRB            equ	3987	;# 
   309   000F94                     TRISC           equ	3988	;# 
   310   000F94                     DDRC            equ	3988	;# 
   311   000F95                     TRISD           equ	3989	;# 
   312   000F95                     DDRD            equ	3989	;# 
   313   000F96                     TRISE           equ	3990	;# 
   314   000F96                     DDRE            equ	3990	;# 
   315   000F9B                     OSCTUNE         equ	3995	;# 
   316   000F9D                     PIE1            equ	3997	;# 
   317   000F9E                     PIR1            equ	3998	;# 
   318   000F9F                     IPR1            equ	3999	;# 
   319   000FA0                     PIE2            equ	4000	;# 
   320   000FA1                     PIR2            equ	4001	;# 
   321   000FA2                     IPR2            equ	4002	;# 
   322   000FA6                     EECON1          equ	4006	;# 
   323   000FA7                     EECON2          equ	4007	;# 
   324   000FA8                     EEDATA          equ	4008	;# 
   325   000FA9                     EEADR           equ	4009	;# 
   326   000FAA                     EEADRH          equ	4010	;# 
   327   000FAB                     RCSTA           equ	4011	;# 
   328   000FAB                     RCSTA1          equ	4011	;# 
   329   000FAC                     TXSTA           equ	4012	;# 
   330   000FAC                     TXSTA1          equ	4012	;# 
   331   000FAD                     TXREG           equ	4013	;# 
   332   000FAD                     TXREG1          equ	4013	;# 
   333   000FAE                     RCREG           equ	4014	;# 
   334   000FAE                     RCREG1          equ	4014	;# 
   335   000FAF                     SPBRG           equ	4015	;# 
   336   000FAF                     SPBRG1          equ	4015	;# 
   337   000FB0                     SPBRGH          equ	4016	;# 
   338   000FB1                     T3CON           equ	4017	;# 
   339   000FB2                     TMR3            equ	4018	;# 
   340   000FB2                     TMR3L           equ	4018	;# 
   341   000FB3                     TMR3H           equ	4019	;# 
   342   000FB4                     CMCON           equ	4020	;# 
   343   000FB5                     CVRCON          equ	4021	;# 
   344   000FB6                     ECCP1AS         equ	4022	;# 
   345   000FB7                     PWM1CON         equ	4023	;# 
   346   000FB8                     BAUDCON         equ	4024	;# 
   347   000FB8                     BAUDCTL         equ	4024	;# 
   348   000FBA                     CCP2CON         equ	4026	;# 
   349   000FBB                     CCPR2           equ	4027	;# 
   350   000FBB                     CCPR2L          equ	4027	;# 
   351   000FBC                     CCPR2H          equ	4028	;# 
   352   000FBD                     CCP1CON         equ	4029	;# 
   353   000FBE                     CCPR1           equ	4030	;# 
   354   000FBE                     CCPR1L          equ	4030	;# 
   355   000FBF                     CCPR1H          equ	4031	;# 
   356   000FC0                     ADCON2          equ	4032	;# 
   357   000FC1                     ADCON1          equ	4033	;# 
   358   000FC2                     ADCON0          equ	4034	;# 
   359   000FC3                     ADRES           equ	4035	;# 
   360   000FC3                     ADRESL          equ	4035	;# 
   361   000FC4                     ADRESH          equ	4036	;# 
   362   000FC5                     SSPCON2         equ	4037	;# 
   363   000FC6                     SSPCON1         equ	4038	;# 
   364   000FC7                     SSPSTAT         equ	4039	;# 
   365   000FC8                     SSPADD          equ	4040	;# 
   366   000FC9                     SSPBUF          equ	4041	;# 
   367   000FCA                     T2CON           equ	4042	;# 
   368   000FCB                     PR2             equ	4043	;# 
   369   000FCB                     MEMCON          equ	4043	;# 
   370   000FCC                     TMR2            equ	4044	;# 
   371   000FCD                     T1CON           equ	4045	;# 
   372   000FCE                     TMR1            equ	4046	;# 
   373   000FCE                     TMR1L           equ	4046	;# 
   374   000FCF                     TMR1H           equ	4047	;# 
   375   000FD0                     RCON            equ	4048	;# 
   376   000FD1                     WDTCON          equ	4049	;# 
   377   000FD2                     HLVDCON         equ	4050	;# 
   378   000FD2                     LVDCON          equ	4050	;# 
   379   000FD3                     OSCCON          equ	4051	;# 
   380   000FD5                     T0CON           equ	4053	;# 
   381   000FD6                     TMR0            equ	4054	;# 
   382   000FD6                     TMR0L           equ	4054	;# 
   383   000FD7                     TMR0H           equ	4055	;# 
   384   000FD8                     STATUS          equ	4056	;# 
   385   000FD9                     FSR2            equ	4057	;# 
   386   000FD9                     FSR2L           equ	4057	;# 
   387   000FDA                     FSR2H           equ	4058	;# 
   388   000FDB                     PLUSW2          equ	4059	;# 
   389   000FDC                     PREINC2         equ	4060	;# 
   390   000FDD                     POSTDEC2        equ	4061	;# 
   391   000FDE                     POSTINC2        equ	4062	;# 
   392   000FDF                     INDF2           equ	4063	;# 
   393   000FE0                     BSR             equ	4064	;# 
   394   000FE1                     FSR1            equ	4065	;# 
   395   000FE1                     FSR1L           equ	4065	;# 
   396   000FE2                     FSR1H           equ	4066	;# 
   397   000FE3                     PLUSW1          equ	4067	;# 
   398   000FE4                     PREINC1         equ	4068	;# 
   399   000FE5                     POSTDEC1        equ	4069	;# 
   400   000FE6                     POSTINC1        equ	4070	;# 
   401   000FE7                     INDF1           equ	4071	;# 
   402   000FE8                     WREG            equ	4072	;# 
   403   000FE9                     FSR0            equ	4073	;# 
   404   000FE9                     FSR0L           equ	4073	;# 
   405   000FEA                     FSR0H           equ	4074	;# 
   406   000FEB                     PLUSW0          equ	4075	;# 
   407   000FEC                     PREINC0         equ	4076	;# 
   408   000FED                     POSTDEC0        equ	4077	;# 
   409   000FEE                     POSTINC0        equ	4078	;# 
   410   000FEF                     INDF0           equ	4079	;# 
   411   000FF0                     INTCON3         equ	4080	;# 
   412   000FF1                     INTCON2         equ	4081	;# 
   413   000FF2                     INTCON          equ	4082	;# 
   414   000FF3                     PROD            equ	4083	;# 
   415   000FF3                     PRODL           equ	4083	;# 
   416   000FF4                     PRODH           equ	4084	;# 
   417   000FF5                     TABLAT          equ	4085	;# 
   418   000FF6                     TBLPTR          equ	4086	;# 
   419   000FF6                     TBLPTRL         equ	4086	;# 
   420   000FF7                     TBLPTRH         equ	4087	;# 
   421   000FF8                     TBLPTRU         equ	4088	;# 
   422   000FF9                     PCLAT           equ	4089	;# 
   423   000FF9                     PC              equ	4089	;# 
   424   000FF9                     PCL             equ	4089	;# 
   425   000FFA                     PCLATH          equ	4090	;# 
   426   000FFB                     PCLATU          equ	4091	;# 
   427   000FFC                     STKPTR          equ	4092	;# 
   428   000FFD                     TOS             equ	4093	;# 
   429   000FFD                     TOSL            equ	4093	;# 
   430   000FFE                     TOSH            equ	4094	;# 
   431   000FFF                     TOSU            equ	4095	;# 
   432   000F80                     PORTA           equ	3968	;# 
   433   000F81                     PORTB           equ	3969	;# 
   434   000F82                     PORTC           equ	3970	;# 
   435   000F83                     PORTD           equ	3971	;# 
   436   000F84                     PORTE           equ	3972	;# 
   437   000F89                     LATA            equ	3977	;# 
   438   000F8A                     LATB            equ	3978	;# 
   439   000F8B                     LATC            equ	3979	;# 
   440   000F8C                     LATD            equ	3980	;# 
   441   000F8D                     LATE            equ	3981	;# 
   442   000F92                     TRISA           equ	3986	;# 
   443   000F92                     DDRA            equ	3986	;# 
   444   000F93                     TRISB           equ	3987	;# 
   445   000F93                     DDRB            equ	3987	;# 
   446   000F94                     TRISC           equ	3988	;# 
   447   000F94                     DDRC            equ	3988	;# 
   448   000F95                     TRISD           equ	3989	;# 
   449   000F95                     DDRD            equ	3989	;# 
   450   000F96                     TRISE           equ	3990	;# 
   451   000F96                     DDRE            equ	3990	;# 
   452   000F9B                     OSCTUNE         equ	3995	;# 
   453   000F9D                     PIE1            equ	3997	;# 
   454   000F9E                     PIR1            equ	3998	;# 
   455   000F9F                     IPR1            equ	3999	;# 
   456   000FA0                     PIE2            equ	4000	;# 
   457   000FA1                     PIR2            equ	4001	;# 
   458   000FA2                     IPR2            equ	4002	;# 
   459   000FA6                     EECON1          equ	4006	;# 
   460   000FA7                     EECON2          equ	4007	;# 
   461   000FA8                     EEDATA          equ	4008	;# 
   462   000FA9                     EEADR           equ	4009	;# 
   463   000FAA                     EEADRH          equ	4010	;# 
   464   000FAB                     RCSTA           equ	4011	;# 
   465   000FAB                     RCSTA1          equ	4011	;# 
   466   000FAC                     TXSTA           equ	4012	;# 
   467   000FAC                     TXSTA1          equ	4012	;# 
   468   000FAD                     TXREG           equ	4013	;# 
   469   000FAD                     TXREG1          equ	4013	;# 
   470   000FAE                     RCREG           equ	4014	;# 
   471   000FAE                     RCREG1          equ	4014	;# 
   472   000FAF                     SPBRG           equ	4015	;# 
   473   000FAF                     SPBRG1          equ	4015	;# 
   474   000FB0                     SPBRGH          equ	4016	;# 
   475   000FB1                     T3CON           equ	4017	;# 
   476   000FB2                     TMR3            equ	4018	;# 
   477   000FB2                     TMR3L           equ	4018	;# 
   478   000FB3                     TMR3H           equ	4019	;# 
   479   000FB4                     CMCON           equ	4020	;# 
   480   000FB5                     CVRCON          equ	4021	;# 
   481   000FB6                     ECCP1AS         equ	4022	;# 
   482   000FB7                     PWM1CON         equ	4023	;# 
   483   000FB8                     BAUDCON         equ	4024	;# 
   484   000FB8                     BAUDCTL         equ	4024	;# 
   485   000FBA                     CCP2CON         equ	4026	;# 
   486   000FBB                     CCPR2           equ	4027	;# 
   487   000FBB                     CCPR2L          equ	4027	;# 
   488   000FBC                     CCPR2H          equ	4028	;# 
   489   000FBD                     CCP1CON         equ	4029	;# 
   490   000FBE                     CCPR1           equ	4030	;# 
   491   000FBE                     CCPR1L          equ	4030	;# 
   492   000FBF                     CCPR1H          equ	4031	;# 
   493   000FC0                     ADCON2          equ	4032	;# 
   494   000FC1                     ADCON1          equ	4033	;# 
   495   000FC2                     ADCON0          equ	4034	;# 
   496   000FC3                     ADRES           equ	4035	;# 
   497   000FC3                     ADRESL          equ	4035	;# 
   498   000FC4                     ADRESH          equ	4036	;# 
   499   000FC5                     SSPCON2         equ	4037	;# 
   500   000FC6                     SSPCON1         equ	4038	;# 
   501   000FC7                     SSPSTAT         equ	4039	;# 
   502   000FC8                     SSPADD          equ	4040	;# 
   503   000FC9                     SSPBUF          equ	4041	;# 
   504   000FCA                     T2CON           equ	4042	;# 
   505   000FCB                     PR2             equ	4043	;# 
   506   000FCB                     MEMCON          equ	4043	;# 
   507   000FCC                     TMR2            equ	4044	;# 
   508   000FCD                     T1CON           equ	4045	;# 
   509   000FCE                     TMR1            equ	4046	;# 
   510   000FCE                     TMR1L           equ	4046	;# 
   511   000FCF                     TMR1H           equ	4047	;# 
   512   000FD0                     RCON            equ	4048	;# 
   513   000FD1                     WDTCON          equ	4049	;# 
   514   000FD2                     HLVDCON         equ	4050	;# 
   515   000FD2                     LVDCON          equ	4050	;# 
   516   000FD3                     OSCCON          equ	4051	;# 
   517   000FD5                     T0CON           equ	4053	;# 
   518   000FD6                     TMR0            equ	4054	;# 
   519   000FD6                     TMR0L           equ	4054	;# 
   520   000FD7                     TMR0H           equ	4055	;# 
   521   000FD8                     STATUS          equ	4056	;# 
   522   000FD9                     FSR2            equ	4057	;# 
   523   000FD9                     FSR2L           equ	4057	;# 
   524   000FDA                     FSR2H           equ	4058	;# 
   525   000FDB                     PLUSW2          equ	4059	;# 
   526   000FDC                     PREINC2         equ	4060	;# 
   527   000FDD                     POSTDEC2        equ	4061	;# 
   528   000FDE                     POSTINC2        equ	4062	;# 
   529   000FDF                     INDF2           equ	4063	;# 
   530   000FE0                     BSR             equ	4064	;# 
   531   000FE1                     FSR1            equ	4065	;# 
   532   000FE1                     FSR1L           equ	4065	;# 
   533   000FE2                     FSR1H           equ	4066	;# 
   534   000FE3                     PLUSW1          equ	4067	;# 
   535   000FE4                     PREINC1         equ	4068	;# 
   536   000FE5                     POSTDEC1        equ	4069	;# 
   537   000FE6                     POSTINC1        equ	4070	;# 
   538   000FE7                     INDF1           equ	4071	;# 
   539   000FE8                     WREG            equ	4072	;# 
   540   000FE9                     FSR0            equ	4073	;# 
   541   000FE9                     FSR0L           equ	4073	;# 
   542   000FEA                     FSR0H           equ	4074	;# 
   543   000FEB                     PLUSW0          equ	4075	;# 
   544   000FEC                     PREINC0         equ	4076	;# 
   545   000FED                     POSTDEC0        equ	4077	;# 
   546   000FEE                     POSTINC0        equ	4078	;# 
   547   000FEF                     INDF0           equ	4079	;# 
   548   000FF0                     INTCON3         equ	4080	;# 
   549   000FF1                     INTCON2         equ	4081	;# 
   550   000FF2                     INTCON          equ	4082	;# 
   551   000FF3                     PROD            equ	4083	;# 
   552   000FF3                     PRODL           equ	4083	;# 
   553   000FF4                     PRODH           equ	4084	;# 
   554   000FF5                     TABLAT          equ	4085	;# 
   555   000FF6                     TBLPTR          equ	4086	;# 
   556   000FF6                     TBLPTRL         equ	4086	;# 
   557   000FF7                     TBLPTRH         equ	4087	;# 
   558   000FF8                     TBLPTRU         equ	4088	;# 
   559   000FF9                     PCLAT           equ	4089	;# 
   560   000FF9                     PC              equ	4089	;# 
   561   000FF9                     PCL             equ	4089	;# 
   562   000FFA                     PCLATH          equ	4090	;# 
   563   000FFB                     PCLATU          equ	4091	;# 
   564   000FFC                     STKPTR          equ	4092	;# 
   565   000FFD                     TOS             equ	4093	;# 
   566   000FFD                     TOSL            equ	4093	;# 
   567   000FFE                     TOSH            equ	4094	;# 
   568   000FFF                     TOSU            equ	4095	;# 
   569   000F80                     PORTA           equ	3968	;# 
   570   000F81                     PORTB           equ	3969	;# 
   571   000F82                     PORTC           equ	3970	;# 
   572   000F83                     PORTD           equ	3971	;# 
   573   000F84                     PORTE           equ	3972	;# 
   574   000F89                     LATA            equ	3977	;# 
   575   000F8A                     LATB            equ	3978	;# 
   576   000F8B                     LATC            equ	3979	;# 
   577   000F8C                     LATD            equ	3980	;# 
   578   000F8D                     LATE            equ	3981	;# 
   579   000F92                     TRISA           equ	3986	;# 
   580   000F92                     DDRA            equ	3986	;# 
   581   000F93                     TRISB           equ	3987	;# 
   582   000F93                     DDRB            equ	3987	;# 
   583   000F94                     TRISC           equ	3988	;# 
   584   000F94                     DDRC            equ	3988	;# 
   585   000F95                     TRISD           equ	3989	;# 
   586   000F95                     DDRD            equ	3989	;# 
   587   000F96                     TRISE           equ	3990	;# 
   588   000F96                     DDRE            equ	3990	;# 
   589   000F9B                     OSCTUNE         equ	3995	;# 
   590   000F9D                     PIE1            equ	3997	;# 
   591   000F9E                     PIR1            equ	3998	;# 
   592   000F9F                     IPR1            equ	3999	;# 
   593   000FA0                     PIE2            equ	4000	;# 
   594   000FA1                     PIR2            equ	4001	;# 
   595   000FA2                     IPR2            equ	4002	;# 
   596   000FA6                     EECON1          equ	4006	;# 
   597   000FA7                     EECON2          equ	4007	;# 
   598   000FA8                     EEDATA          equ	4008	;# 
   599   000FA9                     EEADR           equ	4009	;# 
   600   000FAA                     EEADRH          equ	4010	;# 
   601   000FAB                     RCSTA           equ	4011	;# 
   602   000FAB                     RCSTA1          equ	4011	;# 
   603   000FAC                     TXSTA           equ	4012	;# 
   604   000FAC                     TXSTA1          equ	4012	;# 
   605   000FAD                     TXREG           equ	4013	;# 
   606   000FAD                     TXREG1          equ	4013	;# 
   607   000FAE                     RCREG           equ	4014	;# 
   608   000FAE                     RCREG1          equ	4014	;# 
   609   000FAF                     SPBRG           equ	4015	;# 
   610   000FAF                     SPBRG1          equ	4015	;# 
   611   000FB0                     SPBRGH          equ	4016	;# 
   612   000FB1                     T3CON           equ	4017	;# 
   613   000FB2                     TMR3            equ	4018	;# 
   614   000FB2                     TMR3L           equ	4018	;# 
   615   000FB3                     TMR3H           equ	4019	;# 
   616   000FB4                     CMCON           equ	4020	;# 
   617   000FB5                     CVRCON          equ	4021	;# 
   618   000FB6                     ECCP1AS         equ	4022	;# 
   619   000FB7                     PWM1CON         equ	4023	;# 
   620   000FB8                     BAUDCON         equ	4024	;# 
   621   000FB8                     BAUDCTL         equ	4024	;# 
   622   000FBA                     CCP2CON         equ	4026	;# 
   623   000FBB                     CCPR2           equ	4027	;# 
   624   000FBB                     CCPR2L          equ	4027	;# 
   625   000FBC                     CCPR2H          equ	4028	;# 
   626   000FBD                     CCP1CON         equ	4029	;# 
   627   000FBE                     CCPR1           equ	4030	;# 
   628   000FBE                     CCPR1L          equ	4030	;# 
   629   000FBF                     CCPR1H          equ	4031	;# 
   630   000FC0                     ADCON2          equ	4032	;# 
   631   000FC1                     ADCON1          equ	4033	;# 
   632   000FC2                     ADCON0          equ	4034	;# 
   633   000FC3                     ADRES           equ	4035	;# 
   634   000FC3                     ADRESL          equ	4035	;# 
   635   000FC4                     ADRESH          equ	4036	;# 
   636   000FC5                     SSPCON2         equ	4037	;# 
   637   000FC6                     SSPCON1         equ	4038	;# 
   638   000FC7                     SSPSTAT         equ	4039	;# 
   639   000FC8                     SSPADD          equ	4040	;# 
   640   000FC9                     SSPBUF          equ	4041	;# 
   641   000FCA                     T2CON           equ	4042	;# 
   642   000FCB                     PR2             equ	4043	;# 
   643   000FCB                     MEMCON          equ	4043	;# 
   644   000FCC                     TMR2            equ	4044	;# 
   645   000FCD                     T1CON           equ	4045	;# 
   646   000FCE                     TMR1            equ	4046	;# 
   647   000FCE                     TMR1L           equ	4046	;# 
   648   000FCF                     TMR1H           equ	4047	;# 
   649   000FD0                     RCON            equ	4048	;# 
   650   000FD1                     WDTCON          equ	4049	;# 
   651   000FD2                     HLVDCON         equ	4050	;# 
   652   000FD2                     LVDCON          equ	4050	;# 
   653   000FD3                     OSCCON          equ	4051	;# 
   654   000FD5                     T0CON           equ	4053	;# 
   655   000FD6                     TMR0            equ	4054	;# 
   656   000FD6                     TMR0L           equ	4054	;# 
   657   000FD7                     TMR0H           equ	4055	;# 
   658   000FD8                     STATUS          equ	4056	;# 
   659   000FD9                     FSR2            equ	4057	;# 
   660   000FD9                     FSR2L           equ	4057	;# 
   661   000FDA                     FSR2H           equ	4058	;# 
   662   000FDB                     PLUSW2          equ	4059	;# 
   663   000FDC                     PREINC2         equ	4060	;# 
   664   000FDD                     POSTDEC2        equ	4061	;# 
   665   000FDE                     POSTINC2        equ	4062	;# 
   666   000FDF                     INDF2           equ	4063	;# 
   667   000FE0                     BSR             equ	4064	;# 
   668   000FE1                     FSR1            equ	4065	;# 
   669   000FE1                     FSR1L           equ	4065	;# 
   670   000FE2                     FSR1H           equ	4066	;# 
   671   000FE3                     PLUSW1          equ	4067	;# 
   672   000FE4                     PREINC1         equ	4068	;# 
   673   000FE5                     POSTDEC1        equ	4069	;# 
   674   000FE6                     POSTINC1        equ	4070	;# 
   675   000FE7                     INDF1           equ	4071	;# 
   676   000FE8                     WREG            equ	4072	;# 
   677   000FE9                     FSR0            equ	4073	;# 
   678   000FE9                     FSR0L           equ	4073	;# 
   679   000FEA                     FSR0H           equ	4074	;# 
   680   000FEB                     PLUSW0          equ	4075	;# 
   681   000FEC                     PREINC0         equ	4076	;# 
   682   000FED                     POSTDEC0        equ	4077	;# 
   683   000FEE                     POSTINC0        equ	4078	;# 
   684   000FEF                     INDF0           equ	4079	;# 
   685   000FF0                     INTCON3         equ	4080	;# 
   686   000FF1                     INTCON2         equ	4081	;# 
   687   000FF2                     INTCON          equ	4082	;# 
   688   000FF3                     PROD            equ	4083	;# 
   689   000FF3                     PRODL           equ	4083	;# 
   690   000FF4                     PRODH           equ	4084	;# 
   691   000FF5                     TABLAT          equ	4085	;# 
   692   000FF6                     TBLPTR          equ	4086	;# 
   693   000FF6                     TBLPTRL         equ	4086	;# 
   694   000FF7                     TBLPTRH         equ	4087	;# 
   695   000FF8                     TBLPTRU         equ	4088	;# 
   696   000FF9                     PCLAT           equ	4089	;# 
   697   000FF9                     PC              equ	4089	;# 
   698   000FF9                     PCL             equ	4089	;# 
   699   000FFA                     PCLATH          equ	4090	;# 
   700   000FFB                     PCLATU          equ	4091	;# 
   701   000FFC                     STKPTR          equ	4092	;# 
   702   000FFD                     TOS             equ	4093	;# 
   703   000FFD                     TOSL            equ	4093	;# 
   704   000FFE                     TOSH            equ	4094	;# 
   705   000FFF                     TOSU            equ	4095	;# 
   706   000F80                     PORTA           equ	3968	;# 
   707   000F81                     PORTB           equ	3969	;# 
   708   000F82                     PORTC           equ	3970	;# 
   709   000F83                     PORTD           equ	3971	;# 
   710   000F84                     PORTE           equ	3972	;# 
   711   000F89                     LATA            equ	3977	;# 
   712   000F8A                     LATB            equ	3978	;# 
   713   000F8B                     LATC            equ	3979	;# 
   714   000F8C                     LATD            equ	3980	;# 
   715   000F8D                     LATE            equ	3981	;# 
   716   000F92                     TRISA           equ	3986	;# 
   717   000F92                     DDRA            equ	3986	;# 
   718   000F93                     TRISB           equ	3987	;# 
   719   000F93                     DDRB            equ	3987	;# 
   720   000F94                     TRISC           equ	3988	;# 
   721   000F94                     DDRC            equ	3988	;# 
   722   000F95                     TRISD           equ	3989	;# 
   723   000F95                     DDRD            equ	3989	;# 
   724   000F96                     TRISE           equ	3990	;# 
   725   000F96                     DDRE            equ	3990	;# 
   726   000F9B                     OSCTUNE         equ	3995	;# 
   727   000F9D                     PIE1            equ	3997	;# 
   728   000F9E                     PIR1            equ	3998	;# 
   729   000F9F                     IPR1            equ	3999	;# 
   730   000FA0                     PIE2            equ	4000	;# 
   731   000FA1                     PIR2            equ	4001	;# 
   732   000FA2                     IPR2            equ	4002	;# 
   733   000FA6                     EECON1          equ	4006	;# 
   734   000FA7                     EECON2          equ	4007	;# 
   735   000FA8                     EEDATA          equ	4008	;# 
   736   000FA9                     EEADR           equ	4009	;# 
   737   000FAA                     EEADRH          equ	4010	;# 
   738   000FAB                     RCSTA           equ	4011	;# 
   739   000FAB                     RCSTA1          equ	4011	;# 
   740   000FAC                     TXSTA           equ	4012	;# 
   741   000FAC                     TXSTA1          equ	4012	;# 
   742   000FAD                     TXREG           equ	4013	;# 
   743   000FAD                     TXREG1          equ	4013	;# 
   744   000FAE                     RCREG           equ	4014	;# 
   745   000FAE                     RCREG1          equ	4014	;# 
   746   000FAF                     SPBRG           equ	4015	;# 
   747   000FAF                     SPBRG1          equ	4015	;# 
   748   000FB0                     SPBRGH          equ	4016	;# 
   749   000FB1                     T3CON           equ	4017	;# 
   750   000FB2                     TMR3            equ	4018	;# 
   751   000FB2                     TMR3L           equ	4018	;# 
   752   000FB3                     TMR3H           equ	4019	;# 
   753   000FB4                     CMCON           equ	4020	;# 
   754   000FB5                     CVRCON          equ	4021	;# 
   755   000FB6                     ECCP1AS         equ	4022	;# 
   756   000FB7                     PWM1CON         equ	4023	;# 
   757   000FB8                     BAUDCON         equ	4024	;# 
   758   000FB8                     BAUDCTL         equ	4024	;# 
   759   000FBA                     CCP2CON         equ	4026	;# 
   760   000FBB                     CCPR2           equ	4027	;# 
   761   000FBB                     CCPR2L          equ	4027	;# 
   762   000FBC                     CCPR2H          equ	4028	;# 
   763   000FBD                     CCP1CON         equ	4029	;# 
   764   000FBE                     CCPR1           equ	4030	;# 
   765   000FBE                     CCPR1L          equ	4030	;# 
   766   000FBF                     CCPR1H          equ	4031	;# 
   767   000FC0                     ADCON2          equ	4032	;# 
   768   000FC1                     ADCON1          equ	4033	;# 
   769   000FC2                     ADCON0          equ	4034	;# 
   770   000FC3                     ADRES           equ	4035	;# 
   771   000FC3                     ADRESL          equ	4035	;# 
   772   000FC4                     ADRESH          equ	4036	;# 
   773   000FC5                     SSPCON2         equ	4037	;# 
   774   000FC6                     SSPCON1         equ	4038	;# 
   775   000FC7                     SSPSTAT         equ	4039	;# 
   776   000FC8                     SSPADD          equ	4040	;# 
   777   000FC9                     SSPBUF          equ	4041	;# 
   778   000FCA                     T2CON           equ	4042	;# 
   779   000FCB                     PR2             equ	4043	;# 
   780   000FCB                     MEMCON          equ	4043	;# 
   781   000FCC                     TMR2            equ	4044	;# 
   782   000FCD                     T1CON           equ	4045	;# 
   783   000FCE                     TMR1            equ	4046	;# 
   784   000FCE                     TMR1L           equ	4046	;# 
   785   000FCF                     TMR1H           equ	4047	;# 
   786   000FD0                     RCON            equ	4048	;# 
   787   000FD1                     WDTCON          equ	4049	;# 
   788   000FD2                     HLVDCON         equ	4050	;# 
   789   000FD2                     LVDCON          equ	4050	;# 
   790   000FD3                     OSCCON          equ	4051	;# 
   791   000FD5                     T0CON           equ	4053	;# 
   792   000FD6                     TMR0            equ	4054	;# 
   793   000FD6                     TMR0L           equ	4054	;# 
   794   000FD7                     TMR0H           equ	4055	;# 
   795   000FD8                     STATUS          equ	4056	;# 
   796   000FD9                     FSR2            equ	4057	;# 
   797   000FD9                     FSR2L           equ	4057	;# 
   798   000FDA                     FSR2H           equ	4058	;# 
   799   000FDB                     PLUSW2          equ	4059	;# 
   800   000FDC                     PREINC2         equ	4060	;# 
   801   000FDD                     POSTDEC2        equ	4061	;# 
   802   000FDE                     POSTINC2        equ	4062	;# 
   803   000FDF                     INDF2           equ	4063	;# 
   804   000FE0                     BSR             equ	4064	;# 
   805   000FE1                     FSR1            equ	4065	;# 
   806   000FE1                     FSR1L           equ	4065	;# 
   807   000FE2                     FSR1H           equ	4066	;# 
   808   000FE3                     PLUSW1          equ	4067	;# 
   809   000FE4                     PREINC1         equ	4068	;# 
   810   000FE5                     POSTDEC1        equ	4069	;# 
   811   000FE6                     POSTINC1        equ	4070	;# 
   812   000FE7                     INDF1           equ	4071	;# 
   813   000FE8                     WREG            equ	4072	;# 
   814   000FE9                     FSR0            equ	4073	;# 
   815   000FE9                     FSR0L           equ	4073	;# 
   816   000FEA                     FSR0H           equ	4074	;# 
   817   000FEB                     PLUSW0          equ	4075	;# 
   818   000FEC                     PREINC0         equ	4076	;# 
   819   000FED                     POSTDEC0        equ	4077	;# 
   820   000FEE                     POSTINC0        equ	4078	;# 
   821   000FEF                     INDF0           equ	4079	;# 
   822   000FF0                     INTCON3         equ	4080	;# 
   823   000FF1                     INTCON2         equ	4081	;# 
   824   000FF2                     INTCON          equ	4082	;# 
   825   000FF3                     PROD            equ	4083	;# 
   826   000FF3                     PRODL           equ	4083	;# 
   827   000FF4                     PRODH           equ	4084	;# 
   828   000FF5                     TABLAT          equ	4085	;# 
   829   000FF6                     TBLPTR          equ	4086	;# 
   830   000FF6                     TBLPTRL         equ	4086	;# 
   831   000FF7                     TBLPTRH         equ	4087	;# 
   832   000FF8                     TBLPTRU         equ	4088	;# 
   833   000FF9                     PCLAT           equ	4089	;# 
   834   000FF9                     PC              equ	4089	;# 
   835   000FF9                     PCL             equ	4089	;# 
   836   000FFA                     PCLATH          equ	4090	;# 
   837   000FFB                     PCLATU          equ	4091	;# 
   838   000FFC                     STKPTR          equ	4092	;# 
   839   000FFD                     TOS             equ	4093	;# 
   840   000FFD                     TOSL            equ	4093	;# 
   841   000FFE                     TOSH            equ	4094	;# 
   842   000FFF                     TOSU            equ	4095	;# 
   843   000F80                     PORTA           equ	3968	;# 
   844   000F81                     PORTB           equ	3969	;# 
   845   000F82                     PORTC           equ	3970	;# 
   846   000F83                     PORTD           equ	3971	;# 
   847   000F84                     PORTE           equ	3972	;# 
   848   000F89                     LATA            equ	3977	;# 
   849   000F8A                     LATB            equ	3978	;# 
   850   000F8B                     LATC            equ	3979	;# 
   851   000F8C                     LATD            equ	3980	;# 
   852   000F8D                     LATE            equ	3981	;# 
   853   000F92                     TRISA           equ	3986	;# 
   854   000F92                     DDRA            equ	3986	;# 
   855   000F93                     TRISB           equ	3987	;# 
   856   000F93                     DDRB            equ	3987	;# 
   857   000F94                     TRISC           equ	3988	;# 
   858   000F94                     DDRC            equ	3988	;# 
   859   000F95                     TRISD           equ	3989	;# 
   860   000F95                     DDRD            equ	3989	;# 
   861   000F96                     TRISE           equ	3990	;# 
   862   000F96                     DDRE            equ	3990	;# 
   863   000F9B                     OSCTUNE         equ	3995	;# 
   864   000F9D                     PIE1            equ	3997	;# 
   865   000F9E                     PIR1            equ	3998	;# 
   866   000F9F                     IPR1            equ	3999	;# 
   867   000FA0                     PIE2            equ	4000	;# 
   868   000FA1                     PIR2            equ	4001	;# 
   869   000FA2                     IPR2            equ	4002	;# 
   870   000FA6                     EECON1          equ	4006	;# 
   871   000FA7                     EECON2          equ	4007	;# 
   872   000FA8                     EEDATA          equ	4008	;# 
   873   000FA9                     EEADR           equ	4009	;# 
   874   000FAA                     EEADRH          equ	4010	;# 
   875   000FAB                     RCSTA           equ	4011	;# 
   876   000FAB                     RCSTA1          equ	4011	;# 
   877   000FAC                     TXSTA           equ	4012	;# 
   878   000FAC                     TXSTA1          equ	4012	;# 
   879   000FAD                     TXREG           equ	4013	;# 
   880   000FAD                     TXREG1          equ	4013	;# 
   881   000FAE                     RCREG           equ	4014	;# 
   882   000FAE                     RCREG1          equ	4014	;# 
   883   000FAF                     SPBRG           equ	4015	;# 
   884   000FAF                     SPBRG1          equ	4015	;# 
   885   000FB0                     SPBRGH          equ	4016	;# 
   886   000FB1                     T3CON           equ	4017	;# 
   887   000FB2                     TMR3            equ	4018	;# 
   888   000FB2                     TMR3L           equ	4018	;# 
   889   000FB3                     TMR3H           equ	4019	;# 
   890   000FB4                     CMCON           equ	4020	;# 
   891   000FB5                     CVRCON          equ	4021	;# 
   892   000FB6                     ECCP1AS         equ	4022	;# 
   893   000FB7                     PWM1CON         equ	4023	;# 
   894   000FB8                     BAUDCON         equ	4024	;# 
   895   000FB8                     BAUDCTL         equ	4024	;# 
   896   000FBA                     CCP2CON         equ	4026	;# 
   897   000FBB                     CCPR2           equ	4027	;# 
   898   000FBB                     CCPR2L          equ	4027	;# 
   899   000FBC                     CCPR2H          equ	4028	;# 
   900   000FBD                     CCP1CON         equ	4029	;# 
   901   000FBE                     CCPR1           equ	4030	;# 
   902   000FBE                     CCPR1L          equ	4030	;# 
   903   000FBF                     CCPR1H          equ	4031	;# 
   904   000FC0                     ADCON2          equ	4032	;# 
   905   000FC1                     ADCON1          equ	4033	;# 
   906   000FC2                     ADCON0          equ	4034	;# 
   907   000FC3                     ADRES           equ	4035	;# 
   908   000FC3                     ADRESL          equ	4035	;# 
   909   000FC4                     ADRESH          equ	4036	;# 
   910   000FC5                     SSPCON2         equ	4037	;# 
   911   000FC6                     SSPCON1         equ	4038	;# 
   912   000FC7                     SSPSTAT         equ	4039	;# 
   913   000FC8                     SSPADD          equ	4040	;# 
   914   000FC9                     SSPBUF          equ	4041	;# 
   915   000FCA                     T2CON           equ	4042	;# 
   916   000FCB                     PR2             equ	4043	;# 
   917   000FCB                     MEMCON          equ	4043	;# 
   918   000FCC                     TMR2            equ	4044	;# 
   919   000FCD                     T1CON           equ	4045	;# 
   920   000FCE                     TMR1            equ	4046	;# 
   921   000FCE                     TMR1L           equ	4046	;# 
   922   000FCF                     TMR1H           equ	4047	;# 
   923   000FD0                     RCON            equ	4048	;# 
   924   000FD1                     WDTCON          equ	4049	;# 
   925   000FD2                     HLVDCON         equ	4050	;# 
   926   000FD2                     LVDCON          equ	4050	;# 
   927   000FD3                     OSCCON          equ	4051	;# 
   928   000FD5                     T0CON           equ	4053	;# 
   929   000FD6                     TMR0            equ	4054	;# 
   930   000FD6                     TMR0L           equ	4054	;# 
   931   000FD7                     TMR0H           equ	4055	;# 
   932   000FD8                     STATUS          equ	4056	;# 
   933   000FD9                     FSR2            equ	4057	;# 
   934   000FD9                     FSR2L           equ	4057	;# 
   935   000FDA                     FSR2H           equ	4058	;# 
   936   000FDB                     PLUSW2          equ	4059	;# 
   937   000FDC                     PREINC2         equ	4060	;# 
   938   000FDD                     POSTDEC2        equ	4061	;# 
   939   000FDE                     POSTINC2        equ	4062	;# 
   940   000FDF                     INDF2           equ	4063	;# 
   941   000FE0                     BSR             equ	4064	;# 
   942   000FE1                     FSR1            equ	4065	;# 
   943   000FE1                     FSR1L           equ	4065	;# 
   944   000FE2                     FSR1H           equ	4066	;# 
   945   000FE3                     PLUSW1          equ	4067	;# 
   946   000FE4                     PREINC1         equ	4068	;# 
   947   000FE5                     POSTDEC1        equ	4069	;# 
   948   000FE6                     POSTINC1        equ	4070	;# 
   949   000FE7                     INDF1           equ	4071	;# 
   950   000FE8                     WREG            equ	4072	;# 
   951   000FE9                     FSR0            equ	4073	;# 
   952   000FE9                     FSR0L           equ	4073	;# 
   953   000FEA                     FSR0H           equ	4074	;# 
   954   000FEB                     PLUSW0          equ	4075	;# 
   955   000FEC                     PREINC0         equ	4076	;# 
   956   000FED                     POSTDEC0        equ	4077	;# 
   957   000FEE                     POSTINC0        equ	4078	;# 
   958   000FEF                     INDF0           equ	4079	;# 
   959   000FF0                     INTCON3         equ	4080	;# 
   960   000FF1                     INTCON2         equ	4081	;# 
   961   000FF2                     INTCON          equ	4082	;# 
   962   000FF3                     PROD            equ	4083	;# 
   963   000FF3                     PRODL           equ	4083	;# 
   964   000FF4                     PRODH           equ	4084	;# 
   965   000FF5                     TABLAT          equ	4085	;# 
   966   000FF6                     TBLPTR          equ	4086	;# 
   967   000FF6                     TBLPTRL         equ	4086	;# 
   968   000FF7                     TBLPTRH         equ	4087	;# 
   969   000FF8                     TBLPTRU         equ	4088	;# 
   970   000FF9                     PCLAT           equ	4089	;# 
   971   000FF9                     PC              equ	4089	;# 
   972   000FF9                     PCL             equ	4089	;# 
   973   000FFA                     PCLATH          equ	4090	;# 
   974   000FFB                     PCLATU          equ	4091	;# 
   975   000FFC                     STKPTR          equ	4092	;# 
   976   000FFD                     TOS             equ	4093	;# 
   977   000FFD                     TOSL            equ	4093	;# 
   978   000FFE                     TOSH            equ	4094	;# 
   979   000FFF                     TOSU            equ	4095	;# 
   980   000F80                     PORTA           equ	3968	;# 
   981   000F81                     PORTB           equ	3969	;# 
   982   000F82                     PORTC           equ	3970	;# 
   983   000F83                     PORTD           equ	3971	;# 
   984   000F84                     PORTE           equ	3972	;# 
   985   000F89                     LATA            equ	3977	;# 
   986   000F8A                     LATB            equ	3978	;# 
   987   000F8B                     LATC            equ	3979	;# 
   988   000F8C                     LATD            equ	3980	;# 
   989   000F8D                     LATE            equ	3981	;# 
   990   000F92                     TRISA           equ	3986	;# 
   991   000F92                     DDRA            equ	3986	;# 
   992   000F93                     TRISB           equ	3987	;# 
   993   000F93                     DDRB            equ	3987	;# 
   994   000F94                     TRISC           equ	3988	;# 
   995   000F94                     DDRC            equ	3988	;# 
   996   000F95                     TRISD           equ	3989	;# 
   997   000F95                     DDRD            equ	3989	;# 
   998   000F96                     TRISE           equ	3990	;# 
   999   000F96                     DDRE            equ	3990	;# 
  1000   000F9B                     OSCTUNE         equ	3995	;# 
  1001   000F9D                     PIE1            equ	3997	;# 
  1002   000F9E                     PIR1            equ	3998	;# 
  1003   000F9F                     IPR1            equ	3999	;# 
  1004   000FA0                     PIE2            equ	4000	;# 
  1005   000FA1                     PIR2            equ	4001	;# 
  1006   000FA2                     IPR2            equ	4002	;# 
  1007   000FA6                     EECON1          equ	4006	;# 
  1008   000FA7                     EECON2          equ	4007	;# 
  1009   000FA8                     EEDATA          equ	4008	;# 
  1010   000FA9                     EEADR           equ	4009	;# 
  1011   000FAA                     EEADRH          equ	4010	;# 
  1012   000FAB                     RCSTA           equ	4011	;# 
  1013   000FAB                     RCSTA1          equ	4011	;# 
  1014   000FAC                     TXSTA           equ	4012	;# 
  1015   000FAC                     TXSTA1          equ	4012	;# 
  1016   000FAD                     TXREG           equ	4013	;# 
  1017   000FAD                     TXREG1          equ	4013	;# 
  1018   000FAE                     RCREG           equ	4014	;# 
  1019   000FAE                     RCREG1          equ	4014	;# 
  1020   000FAF                     SPBRG           equ	4015	;# 
  1021   000FAF                     SPBRG1          equ	4015	;# 
  1022   000FB0                     SPBRGH          equ	4016	;# 
  1023   000FB1                     T3CON           equ	4017	;# 
  1024   000FB2                     TMR3            equ	4018	;# 
  1025   000FB2                     TMR3L           equ	4018	;# 
  1026   000FB3                     TMR3H           equ	4019	;# 
  1027   000FB4                     CMCON           equ	4020	;# 
  1028   000FB5                     CVRCON          equ	4021	;# 
  1029   000FB6                     ECCP1AS         equ	4022	;# 
  1030   000FB7                     PWM1CON         equ	4023	;# 
  1031   000FB8                     BAUDCON         equ	4024	;# 
  1032   000FB8                     BAUDCTL         equ	4024	;# 
  1033   000FBA                     CCP2CON         equ	4026	;# 
  1034   000FBB                     CCPR2           equ	4027	;# 
  1035   000FBB                     CCPR2L          equ	4027	;# 
  1036   000FBC                     CCPR2H          equ	4028	;# 
  1037   000FBD                     CCP1CON         equ	4029	;# 
  1038   000FBE                     CCPR1           equ	4030	;# 
  1039   000FBE                     CCPR1L          equ	4030	;# 
  1040   000FBF                     CCPR1H          equ	4031	;# 
  1041   000FC0                     ADCON2          equ	4032	;# 
  1042   000FC1                     ADCON1          equ	4033	;# 
  1043   000FC2                     ADCON0          equ	4034	;# 
  1044   000FC3                     ADRES           equ	4035	;# 
  1045   000FC3                     ADRESL          equ	4035	;# 
  1046   000FC4                     ADRESH          equ	4036	;# 
  1047   000FC5                     SSPCON2         equ	4037	;# 
  1048   000FC6                     SSPCON1         equ	4038	;# 
  1049   000FC7                     SSPSTAT         equ	4039	;# 
  1050   000FC8                     SSPADD          equ	4040	;# 
  1051   000FC9                     SSPBUF          equ	4041	;# 
  1052   000FCA                     T2CON           equ	4042	;# 
  1053   000FCB                     PR2             equ	4043	;# 
  1054   000FCB                     MEMCON          equ	4043	;# 
  1055   000FCC                     TMR2            equ	4044	;# 
  1056   000FCD                     T1CON           equ	4045	;# 
  1057   000FCE                     TMR1            equ	4046	;# 
  1058   000FCE                     TMR1L           equ	4046	;# 
  1059   000FCF                     TMR1H           equ	4047	;# 
  1060   000FD0                     RCON            equ	4048	;# 
  1061   000FD1                     WDTCON          equ	4049	;# 
  1062   000FD2                     HLVDCON         equ	4050	;# 
  1063   000FD2                     LVDCON          equ	4050	;# 
  1064   000FD3                     OSCCON          equ	4051	;# 
  1065   000FD5                     T0CON           equ	4053	;# 
  1066   000FD6                     TMR0            equ	4054	;# 
  1067   000FD6                     TMR0L           equ	4054	;# 
  1068   000FD7                     TMR0H           equ	4055	;# 
  1069   000FD8                     STATUS          equ	4056	;# 
  1070   000FD9                     FSR2            equ	4057	;# 
  1071   000FD9                     FSR2L           equ	4057	;# 
  1072   000FDA                     FSR2H           equ	4058	;# 
  1073   000FDB                     PLUSW2          equ	4059	;# 
  1074   000FDC                     PREINC2         equ	4060	;# 
  1075   000FDD                     POSTDEC2        equ	4061	;# 
  1076   000FDE                     POSTINC2        equ	4062	;# 
  1077   000FDF                     INDF2           equ	4063	;# 
  1078   000FE0                     BSR             equ	4064	;# 
  1079   000FE1                     FSR1            equ	4065	;# 
  1080   000FE1                     FSR1L           equ	4065	;# 
  1081   000FE2                     FSR1H           equ	4066	;# 
  1082   000FE3                     PLUSW1          equ	4067	;# 
  1083   000FE4                     PREINC1         equ	4068	;# 
  1084   000FE5                     POSTDEC1        equ	4069	;# 
  1085   000FE6                     POSTINC1        equ	4070	;# 
  1086   000FE7                     INDF1           equ	4071	;# 
  1087   000FE8                     WREG            equ	4072	;# 
  1088   000FE9                     FSR0            equ	4073	;# 
  1089   000FE9                     FSR0L           equ	4073	;# 
  1090   000FEA                     FSR0H           equ	4074	;# 
  1091   000FEB                     PLUSW0          equ	4075	;# 
  1092   000FEC                     PREINC0         equ	4076	;# 
  1093   000FED                     POSTDEC0        equ	4077	;# 
  1094   000FEE                     POSTINC0        equ	4078	;# 
  1095   000FEF                     INDF0           equ	4079	;# 
  1096   000FF0                     INTCON3         equ	4080	;# 
  1097   000FF1                     INTCON2         equ	4081	;# 
  1098   000FF2                     INTCON          equ	4082	;# 
  1099   000FF3                     PROD            equ	4083	;# 
  1100   000FF3                     PRODL           equ	4083	;# 
  1101   000FF4                     PRODH           equ	4084	;# 
  1102   000FF5                     TABLAT          equ	4085	;# 
  1103   000FF6                     TBLPTR          equ	4086	;# 
  1104   000FF6                     TBLPTRL         equ	4086	;# 
  1105   000FF7                     TBLPTRH         equ	4087	;# 
  1106   000FF8                     TBLPTRU         equ	4088	;# 
  1107   000FF9                     PCLAT           equ	4089	;# 
  1108   000FF9                     PC              equ	4089	;# 
  1109   000FF9                     PCL             equ	4089	;# 
  1110   000FFA                     PCLATH          equ	4090	;# 
  1111   000FFB                     PCLATU          equ	4091	;# 
  1112   000FFC                     STKPTR          equ	4092	;# 
  1113   000FFD                     TOS             equ	4093	;# 
  1114   000FFD                     TOSL            equ	4093	;# 
  1115   000FFE                     TOSH            equ	4094	;# 
  1116   000FFF                     TOSU            equ	4095	;# 
  1117   000F80                     PORTA           equ	3968	;# 
  1118   000F81                     PORTB           equ	3969	;# 
  1119   000F82                     PORTC           equ	3970	;# 
  1120   000F83                     PORTD           equ	3971	;# 
  1121   000F84                     PORTE           equ	3972	;# 
  1122   000F89                     LATA            equ	3977	;# 
  1123   000F8A                     LATB            equ	3978	;# 
  1124   000F8B                     LATC            equ	3979	;# 
  1125   000F8C                     LATD            equ	3980	;# 
  1126   000F8D                     LATE            equ	3981	;# 
  1127   000F92                     TRISA           equ	3986	;# 
  1128   000F92                     DDRA            equ	3986	;# 
  1129   000F93                     TRISB           equ	3987	;# 
  1130   000F93                     DDRB            equ	3987	;# 
  1131   000F94                     TRISC           equ	3988	;# 
  1132   000F94                     DDRC            equ	3988	;# 
  1133   000F95                     TRISD           equ	3989	;# 
  1134   000F95                     DDRD            equ	3989	;# 
  1135   000F96                     TRISE           equ	3990	;# 
  1136   000F96                     DDRE            equ	3990	;# 
  1137   000F9B                     OSCTUNE         equ	3995	;# 
  1138   000F9D                     PIE1            equ	3997	;# 
  1139   000F9E                     PIR1            equ	3998	;# 
  1140   000F9F                     IPR1            equ	3999	;# 
  1141   000FA0                     PIE2            equ	4000	;# 
  1142   000FA1                     PIR2            equ	4001	;# 
  1143   000FA2                     IPR2            equ	4002	;# 
  1144   000FA6                     EECON1          equ	4006	;# 
  1145   000FA7                     EECON2          equ	4007	;# 
  1146   000FA8                     EEDATA          equ	4008	;# 
  1147   000FA9                     EEADR           equ	4009	;# 
  1148   000FAA                     EEADRH          equ	4010	;# 
  1149   000FAB                     RCSTA           equ	4011	;# 
  1150   000FAB                     RCSTA1          equ	4011	;# 
  1151   000FAC                     TXSTA           equ	4012	;# 
  1152   000FAC                     TXSTA1          equ	4012	;# 
  1153   000FAD                     TXREG           equ	4013	;# 
  1154   000FAD                     TXREG1          equ	4013	;# 
  1155   000FAE                     RCREG           equ	4014	;# 
  1156   000FAE                     RCREG1          equ	4014	;# 
  1157   000FAF                     SPBRG           equ	4015	;# 
  1158   000FAF                     SPBRG1          equ	4015	;# 
  1159   000FB0                     SPBRGH          equ	4016	;# 
  1160   000FB1                     T3CON           equ	4017	;# 
  1161   000FB2                     TMR3            equ	4018	;# 
  1162   000FB2                     TMR3L           equ	4018	;# 
  1163   000FB3                     TMR3H           equ	4019	;# 
  1164   000FB4                     CMCON           equ	4020	;# 
  1165   000FB5                     CVRCON          equ	4021	;# 
  1166   000FB6                     ECCP1AS         equ	4022	;# 
  1167   000FB7                     PWM1CON         equ	4023	;# 
  1168   000FB8                     BAUDCON         equ	4024	;# 
  1169   000FB8                     BAUDCTL         equ	4024	;# 
  1170   000FBA                     CCP2CON         equ	4026	;# 
  1171   000FBB                     CCPR2           equ	4027	;# 
  1172   000FBB                     CCPR2L          equ	4027	;# 
  1173   000FBC                     CCPR2H          equ	4028	;# 
  1174   000FBD                     CCP1CON         equ	4029	;# 
  1175   000FBE                     CCPR1           equ	4030	;# 
  1176   000FBE                     CCPR1L          equ	4030	;# 
  1177   000FBF                     CCPR1H          equ	4031	;# 
  1178   000FC0                     ADCON2          equ	4032	;# 
  1179   000FC1                     ADCON1          equ	4033	;# 
  1180   000FC2                     ADCON0          equ	4034	;# 
  1181   000FC3                     ADRES           equ	4035	;# 
  1182   000FC3                     ADRESL          equ	4035	;# 
  1183   000FC4                     ADRESH          equ	4036	;# 
  1184   000FC5                     SSPCON2         equ	4037	;# 
  1185   000FC6                     SSPCON1         equ	4038	;# 
  1186   000FC7                     SSPSTAT         equ	4039	;# 
  1187   000FC8                     SSPADD          equ	4040	;# 
  1188   000FC9                     SSPBUF          equ	4041	;# 
  1189   000FCA                     T2CON           equ	4042	;# 
  1190   000FCB                     PR2             equ	4043	;# 
  1191   000FCB                     MEMCON          equ	4043	;# 
  1192   000FCC                     TMR2            equ	4044	;# 
  1193   000FCD                     T1CON           equ	4045	;# 
  1194   000FCE                     TMR1            equ	4046	;# 
  1195   000FCE                     TMR1L           equ	4046	;# 
  1196   000FCF                     TMR1H           equ	4047	;# 
  1197   000FD0                     RCON            equ	4048	;# 
  1198   000FD1                     WDTCON          equ	4049	;# 
  1199   000FD2                     HLVDCON         equ	4050	;# 
  1200   000FD2                     LVDCON          equ	4050	;# 
  1201   000FD3                     OSCCON          equ	4051	;# 
  1202   000FD5                     T0CON           equ	4053	;# 
  1203   000FD6                     TMR0            equ	4054	;# 
  1204   000FD6                     TMR0L           equ	4054	;# 
  1205   000FD7                     TMR0H           equ	4055	;# 
  1206   000FD8                     STATUS          equ	4056	;# 
  1207   000FD9                     FSR2            equ	4057	;# 
  1208   000FD9                     FSR2L           equ	4057	;# 
  1209   000FDA                     FSR2H           equ	4058	;# 
  1210   000FDB                     PLUSW2          equ	4059	;# 
  1211   000FDC                     PREINC2         equ	4060	;# 
  1212   000FDD                     POSTDEC2        equ	4061	;# 
  1213   000FDE                     POSTINC2        equ	4062	;# 
  1214   000FDF                     INDF2           equ	4063	;# 
  1215   000FE0                     BSR             equ	4064	;# 
  1216   000FE1                     FSR1            equ	4065	;# 
  1217   000FE1                     FSR1L           equ	4065	;# 
  1218   000FE2                     FSR1H           equ	4066	;# 
  1219   000FE3                     PLUSW1          equ	4067	;# 
  1220   000FE4                     PREINC1         equ	4068	;# 
  1221   000FE5                     POSTDEC1        equ	4069	;# 
  1222   000FE6                     POSTINC1        equ	4070	;# 
  1223   000FE7                     INDF1           equ	4071	;# 
  1224   000FE8                     WREG            equ	4072	;# 
  1225   000FE9                     FSR0            equ	4073	;# 
  1226   000FE9                     FSR0L           equ	4073	;# 
  1227   000FEA                     FSR0H           equ	4074	;# 
  1228   000FEB                     PLUSW0          equ	4075	;# 
  1229   000FEC                     PREINC0         equ	4076	;# 
  1230   000FED                     POSTDEC0        equ	4077	;# 
  1231   000FEE                     POSTINC0        equ	4078	;# 
  1232   000FEF                     INDF0           equ	4079	;# 
  1233   000FF0                     INTCON3         equ	4080	;# 
  1234   000FF1                     INTCON2         equ	4081	;# 
  1235   000FF2                     INTCON          equ	4082	;# 
  1236   000FF3                     PROD            equ	4083	;# 
  1237   000FF3                     PRODL           equ	4083	;# 
  1238   000FF4                     PRODH           equ	4084	;# 
  1239   000FF5                     TABLAT          equ	4085	;# 
  1240   000FF6                     TBLPTR          equ	4086	;# 
  1241   000FF6                     TBLPTRL         equ	4086	;# 
  1242   000FF7                     TBLPTRH         equ	4087	;# 
  1243   000FF8                     TBLPTRU         equ	4088	;# 
  1244   000FF9                     PCLAT           equ	4089	;# 
  1245   000FF9                     PC              equ	4089	;# 
  1246   000FF9                     PCL             equ	4089	;# 
  1247   000FFA                     PCLATH          equ	4090	;# 
  1248   000FFB                     PCLATU          equ	4091	;# 
  1249   000FFC                     STKPTR          equ	4092	;# 
  1250   000FFD                     TOS             equ	4093	;# 
  1251   000FFD                     TOSL            equ	4093	;# 
  1252   000FFE                     TOSH            equ	4094	;# 
  1253   000FFF                     TOSU            equ	4095	;# 
  1254   000F80                     PORTA           equ	3968	;# 
  1255   000F81                     PORTB           equ	3969	;# 
  1256   000F82                     PORTC           equ	3970	;# 
  1257   000F83                     PORTD           equ	3971	;# 
  1258   000F84                     PORTE           equ	3972	;# 
  1259   000F89                     LATA            equ	3977	;# 
  1260   000F8A                     LATB            equ	3978	;# 
  1261   000F8B                     LATC            equ	3979	;# 
  1262   000F8C                     LATD            equ	3980	;# 
  1263   000F8D                     LATE            equ	3981	;# 
  1264   000F92                     TRISA           equ	3986	;# 
  1265   000F92                     DDRA            equ	3986	;# 
  1266   000F93                     TRISB           equ	3987	;# 
  1267   000F93                     DDRB            equ	3987	;# 
  1268   000F94                     TRISC           equ	3988	;# 
  1269   000F94                     DDRC            equ	3988	;# 
  1270   000F95                     TRISD           equ	3989	;# 
  1271   000F95                     DDRD            equ	3989	;# 
  1272   000F96                     TRISE           equ	3990	;# 
  1273   000F96                     DDRE            equ	3990	;# 
  1274   000F9B                     OSCTUNE         equ	3995	;# 
  1275   000F9D                     PIE1            equ	3997	;# 
  1276   000F9E                     PIR1            equ	3998	;# 
  1277   000F9F                     IPR1            equ	3999	;# 
  1278   000FA0                     PIE2            equ	4000	;# 
  1279   000FA1                     PIR2            equ	4001	;# 
  1280   000FA2                     IPR2            equ	4002	;# 
  1281   000FA6                     EECON1          equ	4006	;# 
  1282   000FA7                     EECON2          equ	4007	;# 
  1283   000FA8                     EEDATA          equ	4008	;# 
  1284   000FA9                     EEADR           equ	4009	;# 
  1285   000FAA                     EEADRH          equ	4010	;# 
  1286   000FAB                     RCSTA           equ	4011	;# 
  1287   000FAB                     RCSTA1          equ	4011	;# 
  1288   000FAC                     TXSTA           equ	4012	;# 
  1289   000FAC                     TXSTA1          equ	4012	;# 
  1290   000FAD                     TXREG           equ	4013	;# 
  1291   000FAD                     TXREG1          equ	4013	;# 
  1292   000FAE                     RCREG           equ	4014	;# 
  1293   000FAE                     RCREG1          equ	4014	;# 
  1294   000FAF                     SPBRG           equ	4015	;# 
  1295   000FAF                     SPBRG1          equ	4015	;# 
  1296   000FB0                     SPBRGH          equ	4016	;# 
  1297   000FB1                     T3CON           equ	4017	;# 
  1298   000FB2                     TMR3            equ	4018	;# 
  1299   000FB2                     TMR3L           equ	4018	;# 
  1300   000FB3                     TMR3H           equ	4019	;# 
  1301   000FB4                     CMCON           equ	4020	;# 
  1302   000FB5                     CVRCON          equ	4021	;# 
  1303   000FB6                     ECCP1AS         equ	4022	;# 
  1304   000FB7                     PWM1CON         equ	4023	;# 
  1305   000FB8                     BAUDCON         equ	4024	;# 
  1306   000FB8                     BAUDCTL         equ	4024	;# 
  1307   000FBA                     CCP2CON         equ	4026	;# 
  1308   000FBB                     CCPR2           equ	4027	;# 
  1309   000FBB                     CCPR2L          equ	4027	;# 
  1310   000FBC                     CCPR2H          equ	4028	;# 
  1311   000FBD                     CCP1CON         equ	4029	;# 
  1312   000FBE                     CCPR1           equ	4030	;# 
  1313   000FBE                     CCPR1L          equ	4030	;# 
  1314   000FBF                     CCPR1H          equ	4031	;# 
  1315   000FC0                     ADCON2          equ	4032	;# 
  1316   000FC1                     ADCON1          equ	4033	;# 
  1317   000FC2                     ADCON0          equ	4034	;# 
  1318   000FC3                     ADRES           equ	4035	;# 
  1319   000FC3                     ADRESL          equ	4035	;# 
  1320   000FC4                     ADRESH          equ	4036	;# 
  1321   000FC5                     SSPCON2         equ	4037	;# 
  1322   000FC6                     SSPCON1         equ	4038	;# 
  1323   000FC7                     SSPSTAT         equ	4039	;# 
  1324   000FC8                     SSPADD          equ	4040	;# 
  1325   000FC9                     SSPBUF          equ	4041	;# 
  1326   000FCA                     T2CON           equ	4042	;# 
  1327   000FCB                     PR2             equ	4043	;# 
  1328   000FCB                     MEMCON          equ	4043	;# 
  1329   000FCC                     TMR2            equ	4044	;# 
  1330   000FCD                     T1CON           equ	4045	;# 
  1331   000FCE                     TMR1            equ	4046	;# 
  1332   000FCE                     TMR1L           equ	4046	;# 
  1333   000FCF                     TMR1H           equ	4047	;# 
  1334   000FD0                     RCON            equ	4048	;# 
  1335   000FD1                     WDTCON          equ	4049	;# 
  1336   000FD2                     HLVDCON         equ	4050	;# 
  1337   000FD2                     LVDCON          equ	4050	;# 
  1338   000FD3                     OSCCON          equ	4051	;# 
  1339   000FD5                     T0CON           equ	4053	;# 
  1340   000FD6                     TMR0            equ	4054	;# 
  1341   000FD6                     TMR0L           equ	4054	;# 
  1342   000FD7                     TMR0H           equ	4055	;# 
  1343   000FD8                     STATUS          equ	4056	;# 
  1344   000FD9                     FSR2            equ	4057	;# 
  1345   000FD9                     FSR2L           equ	4057	;# 
  1346   000FDA                     FSR2H           equ	4058	;# 
  1347   000FDB                     PLUSW2          equ	4059	;# 
  1348   000FDC                     PREINC2         equ	4060	;# 
  1349   000FDD                     POSTDEC2        equ	4061	;# 
  1350   000FDE                     POSTINC2        equ	4062	;# 
  1351   000FDF                     INDF2           equ	4063	;# 
  1352   000FE0                     BSR             equ	4064	;# 
  1353   000FE1                     FSR1            equ	4065	;# 
  1354   000FE1                     FSR1L           equ	4065	;# 
  1355   000FE2                     FSR1H           equ	4066	;# 
  1356   000FE3                     PLUSW1          equ	4067	;# 
  1357   000FE4                     PREINC1         equ	4068	;# 
  1358   000FE5                     POSTDEC1        equ	4069	;# 
  1359   000FE6                     POSTINC1        equ	4070	;# 
  1360   000FE7                     INDF1           equ	4071	;# 
  1361   000FE8                     WREG            equ	4072	;# 
  1362   000FE9                     FSR0            equ	4073	;# 
  1363   000FE9                     FSR0L           equ	4073	;# 
  1364   000FEA                     FSR0H           equ	4074	;# 
  1365   000FEB                     PLUSW0          equ	4075	;# 
  1366   000FEC                     PREINC0         equ	4076	;# 
  1367   000FED                     POSTDEC0        equ	4077	;# 
  1368   000FEE                     POSTINC0        equ	4078	;# 
  1369   000FEF                     INDF0           equ	4079	;# 
  1370   000FF0                     INTCON3         equ	4080	;# 
  1371   000FF1                     INTCON2         equ	4081	;# 
  1372   000FF2                     INTCON          equ	4082	;# 
  1373   000FF3                     PROD            equ	4083	;# 
  1374   000FF3                     PRODL           equ	4083	;# 
  1375   000FF4                     PRODH           equ	4084	;# 
  1376   000FF5                     TABLAT          equ	4085	;# 
  1377   000FF6                     TBLPTR          equ	4086	;# 
  1378   000FF6                     TBLPTRL         equ	4086	;# 
  1379   000FF7                     TBLPTRH         equ	4087	;# 
  1380   000FF8                     TBLPTRU         equ	4088	;# 
  1381   000FF9                     PCLAT           equ	4089	;# 
  1382   000FF9                     PC              equ	4089	;# 
  1383   000FF9                     PCL             equ	4089	;# 
  1384   000FFA                     PCLATH          equ	4090	;# 
  1385   000FFB                     PCLATU          equ	4091	;# 
  1386   000FFC                     STKPTR          equ	4092	;# 
  1387   000FFD                     TOS             equ	4093	;# 
  1388   000FFD                     TOSL            equ	4093	;# 
  1389   000FFE                     TOSH            equ	4094	;# 
  1390   000FFF                     TOSU            equ	4095	;# 
  1391   000F80                     PORTA           equ	3968	;# 
  1392   000F81                     PORTB           equ	3969	;# 
  1393   000F82                     PORTC           equ	3970	;# 
  1394   000F83                     PORTD           equ	3971	;# 
  1395   000F84                     PORTE           equ	3972	;# 
  1396   000F89                     LATA            equ	3977	;# 
  1397   000F8A                     LATB            equ	3978	;# 
  1398   000F8B                     LATC            equ	3979	;# 
  1399   000F8C                     LATD            equ	3980	;# 
  1400   000F8D                     LATE            equ	3981	;# 
  1401   000F92                     TRISA           equ	3986	;# 
  1402   000F92                     DDRA            equ	3986	;# 
  1403   000F93                     TRISB           equ	3987	;# 
  1404   000F93                     DDRB            equ	3987	;# 
  1405   000F94                     TRISC           equ	3988	;# 
  1406   000F94                     DDRC            equ	3988	;# 
  1407   000F95                     TRISD           equ	3989	;# 
  1408   000F95                     DDRD            equ	3989	;# 
  1409   000F96                     TRISE           equ	3990	;# 
  1410   000F96                     DDRE            equ	3990	;# 
  1411   000F9B                     OSCTUNE         equ	3995	;# 
  1412   000F9D                     PIE1            equ	3997	;# 
  1413   000F9E                     PIR1            equ	3998	;# 
  1414   000F9F                     IPR1            equ	3999	;# 
  1415   000FA0                     PIE2            equ	4000	;# 
  1416   000FA1                     PIR2            equ	4001	;# 
  1417   000FA2                     IPR2            equ	4002	;# 
  1418   000FA6                     EECON1          equ	4006	;# 
  1419   000FA7                     EECON2          equ	4007	;# 
  1420   000FA8                     EEDATA          equ	4008	;# 
  1421   000FA9                     EEADR           equ	4009	;# 
  1422   000FAA                     EEADRH          equ	4010	;# 
  1423   000FAB                     RCSTA           equ	4011	;# 
  1424   000FAB                     RCSTA1          equ	4011	;# 
  1425   000FAC                     TXSTA           equ	4012	;# 
  1426   000FAC                     TXSTA1          equ	4012	;# 
  1427   000FAD                     TXREG           equ	4013	;# 
  1428   000FAD                     TXREG1          equ	4013	;# 
  1429   000FAE                     RCREG           equ	4014	;# 
  1430   000FAE                     RCREG1          equ	4014	;# 
  1431   000FAF                     SPBRG           equ	4015	;# 
  1432   000FAF                     SPBRG1          equ	4015	;# 
  1433   000FB0                     SPBRGH          equ	4016	;# 
  1434   000FB1                     T3CON           equ	4017	;# 
  1435   000FB2                     TMR3            equ	4018	;# 
  1436   000FB2                     TMR3L           equ	4018	;# 
  1437   000FB3                     TMR3H           equ	4019	;# 
  1438   000FB4                     CMCON           equ	4020	;# 
  1439   000FB5                     CVRCON          equ	4021	;# 
  1440   000FB6                     ECCP1AS         equ	4022	;# 
  1441   000FB7                     PWM1CON         equ	4023	;# 
  1442   000FB8                     BAUDCON         equ	4024	;# 
  1443   000FB8                     BAUDCTL         equ	4024	;# 
  1444   000FBA                     CCP2CON         equ	4026	;# 
  1445   000FBB                     CCPR2           equ	4027	;# 
  1446   000FBB                     CCPR2L          equ	4027	;# 
  1447   000FBC                     CCPR2H          equ	4028	;# 
  1448   000FBD                     CCP1CON         equ	4029	;# 
  1449   000FBE                     CCPR1           equ	4030	;# 
  1450   000FBE                     CCPR1L          equ	4030	;# 
  1451   000FBF                     CCPR1H          equ	4031	;# 
  1452   000FC0                     ADCON2          equ	4032	;# 
  1453   000FC1                     ADCON1          equ	4033	;# 
  1454   000FC2                     ADCON0          equ	4034	;# 
  1455   000FC3                     ADRES           equ	4035	;# 
  1456   000FC3                     ADRESL          equ	4035	;# 
  1457   000FC4                     ADRESH          equ	4036	;# 
  1458   000FC5                     SSPCON2         equ	4037	;# 
  1459   000FC6                     SSPCON1         equ	4038	;# 
  1460   000FC7                     SSPSTAT         equ	4039	;# 
  1461   000FC8                     SSPADD          equ	4040	;# 
  1462   000FC9                     SSPBUF          equ	4041	;# 
  1463   000FCA                     T2CON           equ	4042	;# 
  1464   000FCB                     PR2             equ	4043	;# 
  1465   000FCB                     MEMCON          equ	4043	;# 
  1466   000FCC                     TMR2            equ	4044	;# 
  1467   000FCD                     T1CON           equ	4045	;# 
  1468   000FCE                     TMR1            equ	4046	;# 
  1469   000FCE                     TMR1L           equ	4046	;# 
  1470   000FCF                     TMR1H           equ	4047	;# 
  1471   000FD0                     RCON            equ	4048	;# 
  1472   000FD1                     WDTCON          equ	4049	;# 
  1473   000FD2                     HLVDCON         equ	4050	;# 
  1474   000FD2                     LVDCON          equ	4050	;# 
  1475   000FD3                     OSCCON          equ	4051	;# 
  1476   000FD5                     T0CON           equ	4053	;# 
  1477   000FD6                     TMR0            equ	4054	;# 
  1478   000FD6                     TMR0L           equ	4054	;# 
  1479   000FD7                     TMR0H           equ	4055	;# 
  1480   000FD8                     STATUS          equ	4056	;# 
  1481   000FD9                     FSR2            equ	4057	;# 
  1482   000FD9                     FSR2L           equ	4057	;# 
  1483   000FDA                     FSR2H           equ	4058	;# 
  1484   000FDB                     PLUSW2          equ	4059	;# 
  1485   000FDC                     PREINC2         equ	4060	;# 
  1486   000FDD                     POSTDEC2        equ	4061	;# 
  1487   000FDE                     POSTINC2        equ	4062	;# 
  1488   000FDF                     INDF2           equ	4063	;# 
  1489   000FE0                     BSR             equ	4064	;# 
  1490   000FE1                     FSR1            equ	4065	;# 
  1491   000FE1                     FSR1L           equ	4065	;# 
  1492   000FE2                     FSR1H           equ	4066	;# 
  1493   000FE3                     PLUSW1          equ	4067	;# 
  1494   000FE4                     PREINC1         equ	4068	;# 
  1495   000FE5                     POSTDEC1        equ	4069	;# 
  1496   000FE6                     POSTINC1        equ	4070	;# 
  1497   000FE7                     INDF1           equ	4071	;# 
  1498   000FE8                     WREG            equ	4072	;# 
  1499   000FE9                     FSR0            equ	4073	;# 
  1500   000FE9                     FSR0L           equ	4073	;# 
  1501   000FEA                     FSR0H           equ	4074	;# 
  1502   000FEB                     PLUSW0          equ	4075	;# 
  1503   000FEC                     PREINC0         equ	4076	;# 
  1504   000FED                     POSTDEC0        equ	4077	;# 
  1505   000FEE                     POSTINC0        equ	4078	;# 
  1506   000FEF                     INDF0           equ	4079	;# 
  1507   000FF0                     INTCON3         equ	4080	;# 
  1508   000FF1                     INTCON2         equ	4081	;# 
  1509   000FF2                     INTCON          equ	4082	;# 
  1510   000FF3                     PROD            equ	4083	;# 
  1511   000FF3                     PRODL           equ	4083	;# 
  1512   000FF4                     PRODH           equ	4084	;# 
  1513   000FF5                     TABLAT          equ	4085	;# 
  1514   000FF6                     TBLPTR          equ	4086	;# 
  1515   000FF6                     TBLPTRL         equ	4086	;# 
  1516   000FF7                     TBLPTRH         equ	4087	;# 
  1517   000FF8                     TBLPTRU         equ	4088	;# 
  1518   000FF9                     PCLAT           equ	4089	;# 
  1519   000FF9                     PC              equ	4089	;# 
  1520   000FF9                     PCL             equ	4089	;# 
  1521   000FFA                     PCLATH          equ	4090	;# 
  1522   000FFB                     PCLATU          equ	4091	;# 
  1523   000FFC                     STKPTR          equ	4092	;# 
  1524   000FFD                     TOS             equ	4093	;# 
  1525   000FFD                     TOSL            equ	4093	;# 
  1526   000FFE                     TOSH            equ	4094	;# 
  1527   000FFF                     TOSU            equ	4095	;# 
  1528   000F80                     PORTA           equ	3968	;# 
  1529   000F81                     PORTB           equ	3969	;# 
  1530   000F82                     PORTC           equ	3970	;# 
  1531   000F83                     PORTD           equ	3971	;# 
  1532   000F84                     PORTE           equ	3972	;# 
  1533   000F89                     LATA            equ	3977	;# 
  1534   000F8A                     LATB            equ	3978	;# 
  1535   000F8B                     LATC            equ	3979	;# 
  1536   000F8C                     LATD            equ	3980	;# 
  1537   000F8D                     LATE            equ	3981	;# 
  1538   000F92                     TRISA           equ	3986	;# 
  1539   000F92                     DDRA            equ	3986	;# 
  1540   000F93                     TRISB           equ	3987	;# 
  1541   000F93                     DDRB            equ	3987	;# 
  1542   000F94                     TRISC           equ	3988	;# 
  1543   000F94                     DDRC            equ	3988	;# 
  1544   000F95                     TRISD           equ	3989	;# 
  1545   000F95                     DDRD            equ	3989	;# 
  1546   000F96                     TRISE           equ	3990	;# 
  1547   000F96                     DDRE            equ	3990	;# 
  1548   000F9B                     OSCTUNE         equ	3995	;# 
  1549   000F9D                     PIE1            equ	3997	;# 
  1550   000F9E                     PIR1            equ	3998	;# 
  1551   000F9F                     IPR1            equ	3999	;# 
  1552   000FA0                     PIE2            equ	4000	;# 
  1553   000FA1                     PIR2            equ	4001	;# 
  1554   000FA2                     IPR2            equ	4002	;# 
  1555   000FA6                     EECON1          equ	4006	;# 
  1556   000FA7                     EECON2          equ	4007	;# 
  1557   000FA8                     EEDATA          equ	4008	;# 
  1558   000FA9                     EEADR           equ	4009	;# 
  1559   000FAA                     EEADRH          equ	4010	;# 
  1560   000FAB                     RCSTA           equ	4011	;# 
  1561   000FAB                     RCSTA1          equ	4011	;# 
  1562   000FAC                     TXSTA           equ	4012	;# 
  1563   000FAC                     TXSTA1          equ	4012	;# 
  1564   000FAD                     TXREG           equ	4013	;# 
  1565   000FAD                     TXREG1          equ	4013	;# 
  1566   000FAE                     RCREG           equ	4014	;# 
  1567   000FAE                     RCREG1          equ	4014	;# 
  1568   000FAF                     SPBRG           equ	4015	;# 
  1569   000FAF                     SPBRG1          equ	4015	;# 
  1570   000FB0                     SPBRGH          equ	4016	;# 
  1571   000FB1                     T3CON           equ	4017	;# 
  1572   000FB2                     TMR3            equ	4018	;# 
  1573   000FB2                     TMR3L           equ	4018	;# 
  1574   000FB3                     TMR3H           equ	4019	;# 
  1575   000FB4                     CMCON           equ	4020	;# 
  1576   000FB5                     CVRCON          equ	4021	;# 
  1577   000FB6                     ECCP1AS         equ	4022	;# 
  1578   000FB7                     PWM1CON         equ	4023	;# 
  1579   000FB8                     BAUDCON         equ	4024	;# 
  1580   000FB8                     BAUDCTL         equ	4024	;# 
  1581   000FBA                     CCP2CON         equ	4026	;# 
  1582   000FBB                     CCPR2           equ	4027	;# 
  1583   000FBB                     CCPR2L          equ	4027	;# 
  1584   000FBC                     CCPR2H          equ	4028	;# 
  1585   000FBD                     CCP1CON         equ	4029	;# 
  1586   000FBE                     CCPR1           equ	4030	;# 
  1587   000FBE                     CCPR1L          equ	4030	;# 
  1588   000FBF                     CCPR1H          equ	4031	;# 
  1589   000FC0                     ADCON2          equ	4032	;# 
  1590   000FC1                     ADCON1          equ	4033	;# 
  1591   000FC2                     ADCON0          equ	4034	;# 
  1592   000FC3                     ADRES           equ	4035	;# 
  1593   000FC3                     ADRESL          equ	4035	;# 
  1594   000FC4                     ADRESH          equ	4036	;# 
  1595   000FC5                     SSPCON2         equ	4037	;# 
  1596   000FC6                     SSPCON1         equ	4038	;# 
  1597   000FC7                     SSPSTAT         equ	4039	;# 
  1598   000FC8                     SSPADD          equ	4040	;# 
  1599   000FC9                     SSPBUF          equ	4041	;# 
  1600   000FCA                     T2CON           equ	4042	;# 
  1601   000FCB                     PR2             equ	4043	;# 
  1602   000FCB                     MEMCON          equ	4043	;# 
  1603   000FCC                     TMR2            equ	4044	;# 
  1604   000FCD                     T1CON           equ	4045	;# 
  1605   000FCE                     TMR1            equ	4046	;# 
  1606   000FCE                     TMR1L           equ	4046	;# 
  1607   000FCF                     TMR1H           equ	4047	;# 
  1608   000FD0                     RCON            equ	4048	;# 
  1609   000FD1                     WDTCON          equ	4049	;# 
  1610   000FD2                     HLVDCON         equ	4050	;# 
  1611   000FD2                     LVDCON          equ	4050	;# 
  1612   000FD3                     OSCCON          equ	4051	;# 
  1613   000FD5                     T0CON           equ	4053	;# 
  1614   000FD6                     TMR0            equ	4054	;# 
  1615   000FD6                     TMR0L           equ	4054	;# 
  1616   000FD7                     TMR0H           equ	4055	;# 
  1617   000FD8                     STATUS          equ	4056	;# 
  1618   000FD9                     FSR2            equ	4057	;# 
  1619   000FD9                     FSR2L           equ	4057	;# 
  1620   000FDA                     FSR2H           equ	4058	;# 
  1621   000FDB                     PLUSW2          equ	4059	;# 
  1622   000FDC                     PREINC2         equ	4060	;# 
  1623   000FDD                     POSTDEC2        equ	4061	;# 
  1624   000FDE                     POSTINC2        equ	4062	;# 
  1625   000FDF                     INDF2           equ	4063	;# 
  1626   000FE0                     BSR             equ	4064	;# 
  1627   000FE1                     FSR1            equ	4065	;# 
  1628   000FE1                     FSR1L           equ	4065	;# 
  1629   000FE2                     FSR1H           equ	4066	;# 
  1630   000FE3                     PLUSW1          equ	4067	;# 
  1631   000FE4                     PREINC1         equ	4068	;# 
  1632   000FE5                     POSTDEC1        equ	4069	;# 
  1633   000FE6                     POSTINC1        equ	4070	;# 
  1634   000FE7                     INDF1           equ	4071	;# 
  1635   000FE8                     WREG            equ	4072	;# 
  1636   000FE9                     FSR0            equ	4073	;# 
  1637   000FE9                     FSR0L           equ	4073	;# 
  1638   000FEA                     FSR0H           equ	4074	;# 
  1639   000FEB                     PLUSW0          equ	4075	;# 
  1640   000FEC                     PREINC0         equ	4076	;# 
  1641   000FED                     POSTDEC0        equ	4077	;# 
  1642   000FEE                     POSTINC0        equ	4078	;# 
  1643   000FEF                     INDF0           equ	4079	;# 
  1644   000FF0                     INTCON3         equ	4080	;# 
  1645   000FF1                     INTCON2         equ	4081	;# 
  1646   000FF2                     INTCON          equ	4082	;# 
  1647   000FF3                     PROD            equ	4083	;# 
  1648   000FF3                     PRODL           equ	4083	;# 
  1649   000FF4                     PRODH           equ	4084	;# 
  1650   000FF5                     TABLAT          equ	4085	;# 
  1651   000FF6                     TBLPTR          equ	4086	;# 
  1652   000FF6                     TBLPTRL         equ	4086	;# 
  1653   000FF7                     TBLPTRH         equ	4087	;# 
  1654   000FF8                     TBLPTRU         equ	4088	;# 
  1655   000FF9                     PCLAT           equ	4089	;# 
  1656   000FF9                     PC              equ	4089	;# 
  1657   000FF9                     PCL             equ	4089	;# 
  1658   000FFA                     PCLATH          equ	4090	;# 
  1659   000FFB                     PCLATU          equ	4091	;# 
  1660   000FFC                     STKPTR          equ	4092	;# 
  1661   000FFD                     TOS             equ	4093	;# 
  1662   000FFD                     TOSL            equ	4093	;# 
  1663   000FFE                     TOSH            equ	4094	;# 
  1664   000FFF                     TOSU            equ	4095	;# 
  1665   000F80                     PORTA           equ	3968	;# 
  1666   000F81                     PORTB           equ	3969	;# 
  1667   000F82                     PORTC           equ	3970	;# 
  1668   000F83                     PORTD           equ	3971	;# 
  1669   000F84                     PORTE           equ	3972	;# 
  1670   000F89                     LATA            equ	3977	;# 
  1671   000F8A                     LATB            equ	3978	;# 
  1672   000F8B                     LATC            equ	3979	;# 
  1673   000F8C                     LATD            equ	3980	;# 
  1674   000F8D                     LATE            equ	3981	;# 
  1675   000F92                     TRISA           equ	3986	;# 
  1676   000F92                     DDRA            equ	3986	;# 
  1677   000F93                     TRISB           equ	3987	;# 
  1678   000F93                     DDRB            equ	3987	;# 
  1679   000F94                     TRISC           equ	3988	;# 
  1680   000F94                     DDRC            equ	3988	;# 
  1681   000F95                     TRISD           equ	3989	;# 
  1682   000F95                     DDRD            equ	3989	;# 
  1683   000F96                     TRISE           equ	3990	;# 
  1684   000F96                     DDRE            equ	3990	;# 
  1685   000F9B                     OSCTUNE         equ	3995	;# 
  1686   000F9D                     PIE1            equ	3997	;# 
  1687   000F9E                     PIR1            equ	3998	;# 
  1688   000F9F                     IPR1            equ	3999	;# 
  1689   000FA0                     PIE2            equ	4000	;# 
  1690   000FA1                     PIR2            equ	4001	;# 
  1691   000FA2                     IPR2            equ	4002	;# 
  1692   000FA6                     EECON1          equ	4006	;# 
  1693   000FA7                     EECON2          equ	4007	;# 
  1694   000FA8                     EEDATA          equ	4008	;# 
  1695   000FA9                     EEADR           equ	4009	;# 
  1696   000FAA                     EEADRH          equ	4010	;# 
  1697   000FAB                     RCSTA           equ	4011	;# 
  1698   000FAB                     RCSTA1          equ	4011	;# 
  1699   000FAC                     TXSTA           equ	4012	;# 
  1700   000FAC                     TXSTA1          equ	4012	;# 
  1701   000FAD                     TXREG           equ	4013	;# 
  1702   000FAD                     TXREG1          equ	4013	;# 
  1703   000FAE                     RCREG           equ	4014	;# 
  1704   000FAE                     RCREG1          equ	4014	;# 
  1705   000FAF                     SPBRG           equ	4015	;# 
  1706   000FAF                     SPBRG1          equ	4015	;# 
  1707   000FB0                     SPBRGH          equ	4016	;# 
  1708   000FB1                     T3CON           equ	4017	;# 
  1709   000FB2                     TMR3            equ	4018	;# 
  1710   000FB2                     TMR3L           equ	4018	;# 
  1711   000FB3                     TMR3H           equ	4019	;# 
  1712   000FB4                     CMCON           equ	4020	;# 
  1713   000FB5                     CVRCON          equ	4021	;# 
  1714   000FB6                     ECCP1AS         equ	4022	;# 
  1715   000FB7                     PWM1CON         equ	4023	;# 
  1716   000FB8                     BAUDCON         equ	4024	;# 
  1717   000FB8                     BAUDCTL         equ	4024	;# 
  1718   000FBA                     CCP2CON         equ	4026	;# 
  1719   000FBB                     CCPR2           equ	4027	;# 
  1720   000FBB                     CCPR2L          equ	4027	;# 
  1721   000FBC                     CCPR2H          equ	4028	;# 
  1722   000FBD                     CCP1CON         equ	4029	;# 
  1723   000FBE                     CCPR1           equ	4030	;# 
  1724   000FBE                     CCPR1L          equ	4030	;# 
  1725   000FBF                     CCPR1H          equ	4031	;# 
  1726   000FC0                     ADCON2          equ	4032	;# 
  1727   000FC1                     ADCON1          equ	4033	;# 
  1728   000FC2                     ADCON0          equ	4034	;# 
  1729   000FC3                     ADRES           equ	4035	;# 
  1730   000FC3                     ADRESL          equ	4035	;# 
  1731   000FC4                     ADRESH          equ	4036	;# 
  1732   000FC5                     SSPCON2         equ	4037	;# 
  1733   000FC6                     SSPCON1         equ	4038	;# 
  1734   000FC7                     SSPSTAT         equ	4039	;# 
  1735   000FC8                     SSPADD          equ	4040	;# 
  1736   000FC9                     SSPBUF          equ	4041	;# 
  1737   000FCA                     T2CON           equ	4042	;# 
  1738   000FCB                     PR2             equ	4043	;# 
  1739   000FCB                     MEMCON          equ	4043	;# 
  1740   000FCC                     TMR2            equ	4044	;# 
  1741   000FCD                     T1CON           equ	4045	;# 
  1742   000FCE                     TMR1            equ	4046	;# 
  1743   000FCE                     TMR1L           equ	4046	;# 
  1744   000FCF                     TMR1H           equ	4047	;# 
  1745   000FD0                     RCON            equ	4048	;# 
  1746   000FD1                     WDTCON          equ	4049	;# 
  1747   000FD2                     HLVDCON         equ	4050	;# 
  1748   000FD2                     LVDCON          equ	4050	;# 
  1749   000FD3                     OSCCON          equ	4051	;# 
  1750   000FD5                     T0CON           equ	4053	;# 
  1751   000FD6                     TMR0            equ	4054	;# 
  1752   000FD6                     TMR0L           equ	4054	;# 
  1753   000FD7                     TMR0H           equ	4055	;# 
  1754   000FD8                     STATUS          equ	4056	;# 
  1755   000FD9                     FSR2            equ	4057	;# 
  1756   000FD9                     FSR2L           equ	4057	;# 
  1757   000FDA                     FSR2H           equ	4058	;# 
  1758   000FDB                     PLUSW2          equ	4059	;# 
  1759   000FDC                     PREINC2         equ	4060	;# 
  1760   000FDD                     POSTDEC2        equ	4061	;# 
  1761   000FDE                     POSTINC2        equ	4062	;# 
  1762   000FDF                     INDF2           equ	4063	;# 
  1763   000FE0                     BSR             equ	4064	;# 
  1764   000FE1                     FSR1            equ	4065	;# 
  1765   000FE1                     FSR1L           equ	4065	;# 
  1766   000FE2                     FSR1H           equ	4066	;# 
  1767   000FE3                     PLUSW1          equ	4067	;# 
  1768   000FE4                     PREINC1         equ	4068	;# 
  1769   000FE5                     POSTDEC1        equ	4069	;# 
  1770   000FE6                     POSTINC1        equ	4070	;# 
  1771   000FE7                     INDF1           equ	4071	;# 
  1772   000FE8                     WREG            equ	4072	;# 
  1773   000FE9                     FSR0            equ	4073	;# 
  1774   000FE9                     FSR0L           equ	4073	;# 
  1775   000FEA                     FSR0H           equ	4074	;# 
  1776   000FEB                     PLUSW0          equ	4075	;# 
  1777   000FEC                     PREINC0         equ	4076	;# 
  1778   000FED                     POSTDEC0        equ	4077	;# 
  1779   000FEE                     POSTINC0        equ	4078	;# 
  1780   000FEF                     INDF0           equ	4079	;# 
  1781   000FF0                     INTCON3         equ	4080	;# 
  1782   000FF1                     INTCON2         equ	4081	;# 
  1783   000FF2                     INTCON          equ	4082	;# 
  1784   000FF3                     PROD            equ	4083	;# 
  1785   000FF3                     PRODL           equ	4083	;# 
  1786   000FF4                     PRODH           equ	4084	;# 
  1787   000FF5                     TABLAT          equ	4085	;# 
  1788   000FF6                     TBLPTR          equ	4086	;# 
  1789   000FF6                     TBLPTRL         equ	4086	;# 
  1790   000FF7                     TBLPTRH         equ	4087	;# 
  1791   000FF8                     TBLPTRU         equ	4088	;# 
  1792   000FF9                     PCLAT           equ	4089	;# 
  1793   000FF9                     PC              equ	4089	;# 
  1794   000FF9                     PCL             equ	4089	;# 
  1795   000FFA                     PCLATH          equ	4090	;# 
  1796   000FFB                     PCLATU          equ	4091	;# 
  1797   000FFC                     STKPTR          equ	4092	;# 
  1798   000FFD                     TOS             equ	4093	;# 
  1799   000FFD                     TOSL            equ	4093	;# 
  1800   000FFE                     TOSH            equ	4094	;# 
  1801   000FFF                     TOSU            equ	4095	;# 
  1802   000F80                     PORTA           equ	3968	;# 
  1803   000F81                     PORTB           equ	3969	;# 
  1804   000F82                     PORTC           equ	3970	;# 
  1805   000F83                     PORTD           equ	3971	;# 
  1806   000F84                     PORTE           equ	3972	;# 
  1807   000F89                     LATA            equ	3977	;# 
  1808   000F8A                     LATB            equ	3978	;# 
  1809   000F8B                     LATC            equ	3979	;# 
  1810   000F8C                     LATD            equ	3980	;# 
  1811   000F8D                     LATE            equ	3981	;# 
  1812   000F92                     TRISA           equ	3986	;# 
  1813   000F92                     DDRA            equ	3986	;# 
  1814   000F93                     TRISB           equ	3987	;# 
  1815   000F93                     DDRB            equ	3987	;# 
  1816   000F94                     TRISC           equ	3988	;# 
  1817   000F94                     DDRC            equ	3988	;# 
  1818   000F95                     TRISD           equ	3989	;# 
  1819   000F95                     DDRD            equ	3989	;# 
  1820   000F96                     TRISE           equ	3990	;# 
  1821   000F96                     DDRE            equ	3990	;# 
  1822   000F9B                     OSCTUNE         equ	3995	;# 
  1823   000F9D                     PIE1            equ	3997	;# 
  1824   000F9E                     PIR1            equ	3998	;# 
  1825   000F9F                     IPR1            equ	3999	;# 
  1826   000FA0                     PIE2            equ	4000	;# 
  1827   000FA1                     PIR2            equ	4001	;# 
  1828   000FA2                     IPR2            equ	4002	;# 
  1829   000FA6                     EECON1          equ	4006	;# 
  1830   000FA7                     EECON2          equ	4007	;# 
  1831   000FA8                     EEDATA          equ	4008	;# 
  1832   000FA9                     EEADR           equ	4009	;# 
  1833   000FAA                     EEADRH          equ	4010	;# 
  1834   000FAB                     RCSTA           equ	4011	;# 
  1835   000FAB                     RCSTA1          equ	4011	;# 
  1836   000FAC                     TXSTA           equ	4012	;# 
  1837   000FAC                     TXSTA1          equ	4012	;# 
  1838   000FAD                     TXREG           equ	4013	;# 
  1839   000FAD                     TXREG1          equ	4013	;# 
  1840   000FAE                     RCREG           equ	4014	;# 
  1841   000FAE                     RCREG1          equ	4014	;# 
  1842   000FAF                     SPBRG           equ	4015	;# 
  1843   000FAF                     SPBRG1          equ	4015	;# 
  1844   000FB0                     SPBRGH          equ	4016	;# 
  1845   000FB1                     T3CON           equ	4017	;# 
  1846   000FB2                     TMR3            equ	4018	;# 
  1847   000FB2                     TMR3L           equ	4018	;# 
  1848   000FB3                     TMR3H           equ	4019	;# 
  1849   000FB4                     CMCON           equ	4020	;# 
  1850   000FB5                     CVRCON          equ	4021	;# 
  1851   000FB6                     ECCP1AS         equ	4022	;# 
  1852   000FB7                     PWM1CON         equ	4023	;# 
  1853   000FB8                     BAUDCON         equ	4024	;# 
  1854   000FB8                     BAUDCTL         equ	4024	;# 
  1855   000FBA                     CCP2CON         equ	4026	;# 
  1856   000FBB                     CCPR2           equ	4027	;# 
  1857   000FBB                     CCPR2L          equ	4027	;# 
  1858   000FBC                     CCPR2H          equ	4028	;# 
  1859   000FBD                     CCP1CON         equ	4029	;# 
  1860   000FBE                     CCPR1           equ	4030	;# 
  1861   000FBE                     CCPR1L          equ	4030	;# 
  1862   000FBF                     CCPR1H          equ	4031	;# 
  1863   000FC0                     ADCON2          equ	4032	;# 
  1864   000FC1                     ADCON1          equ	4033	;# 
  1865   000FC2                     ADCON0          equ	4034	;# 
  1866   000FC3                     ADRES           equ	4035	;# 
  1867   000FC3                     ADRESL          equ	4035	;# 
  1868   000FC4                     ADRESH          equ	4036	;# 
  1869   000FC5                     SSPCON2         equ	4037	;# 
  1870   000FC6                     SSPCON1         equ	4038	;# 
  1871   000FC7                     SSPSTAT         equ	4039	;# 
  1872   000FC8                     SSPADD          equ	4040	;# 
  1873   000FC9                     SSPBUF          equ	4041	;# 
  1874   000FCA                     T2CON           equ	4042	;# 
  1875   000FCB                     PR2             equ	4043	;# 
  1876   000FCB                     MEMCON          equ	4043	;# 
  1877   000FCC                     TMR2            equ	4044	;# 
  1878   000FCD                     T1CON           equ	4045	;# 
  1879   000FCE                     TMR1            equ	4046	;# 
  1880   000FCE                     TMR1L           equ	4046	;# 
  1881   000FCF                     TMR1H           equ	4047	;# 
  1882   000FD0                     RCON            equ	4048	;# 
  1883   000FD1                     WDTCON          equ	4049	;# 
  1884   000FD2                     HLVDCON         equ	4050	;# 
  1885   000FD2                     LVDCON          equ	4050	;# 
  1886   000FD3                     OSCCON          equ	4051	;# 
  1887   000FD5                     T0CON           equ	4053	;# 
  1888   000FD6                     TMR0            equ	4054	;# 
  1889   000FD6                     TMR0L           equ	4054	;# 
  1890   000FD7                     TMR0H           equ	4055	;# 
  1891   000FD8                     STATUS          equ	4056	;# 
  1892   000FD9                     FSR2            equ	4057	;# 
  1893   000FD9                     FSR2L           equ	4057	;# 
  1894   000FDA                     FSR2H           equ	4058	;# 
  1895   000FDB                     PLUSW2          equ	4059	;# 
  1896   000FDC                     PREINC2         equ	4060	;# 
  1897   000FDD                     POSTDEC2        equ	4061	;# 
  1898   000FDE                     POSTINC2        equ	4062	;# 
  1899   000FDF                     INDF2           equ	4063	;# 
  1900   000FE0                     BSR             equ	4064	;# 
  1901   000FE1                     FSR1            equ	4065	;# 
  1902   000FE1                     FSR1L           equ	4065	;# 
  1903   000FE2                     FSR1H           equ	4066	;# 
  1904   000FE3                     PLUSW1          equ	4067	;# 
  1905   000FE4                     PREINC1         equ	4068	;# 
  1906   000FE5                     POSTDEC1        equ	4069	;# 
  1907   000FE6                     POSTINC1        equ	4070	;# 
  1908   000FE7                     INDF1           equ	4071	;# 
  1909   000FE8                     WREG            equ	4072	;# 
  1910   000FE9                     FSR0            equ	4073	;# 
  1911   000FE9                     FSR0L           equ	4073	;# 
  1912   000FEA                     FSR0H           equ	4074	;# 
  1913   000FEB                     PLUSW0          equ	4075	;# 
  1914   000FEC                     PREINC0         equ	4076	;# 
  1915   000FED                     POSTDEC0        equ	4077	;# 
  1916   000FEE                     POSTINC0        equ	4078	;# 
  1917   000FEF                     INDF0           equ	4079	;# 
  1918   000FF0                     INTCON3         equ	4080	;# 
  1919   000FF1                     INTCON2         equ	4081	;# 
  1920   000FF2                     INTCON          equ	4082	;# 
  1921   000FF3                     PROD            equ	4083	;# 
  1922   000FF3                     PRODL           equ	4083	;# 
  1923   000FF4                     PRODH           equ	4084	;# 
  1924   000FF5                     TABLAT          equ	4085	;# 
  1925   000FF6                     TBLPTR          equ	4086	;# 
  1926   000FF6                     TBLPTRL         equ	4086	;# 
  1927   000FF7                     TBLPTRH         equ	4087	;# 
  1928   000FF8                     TBLPTRU         equ	4088	;# 
  1929   000FF9                     PCLAT           equ	4089	;# 
  1930   000FF9                     PC              equ	4089	;# 
  1931   000FF9                     PCL             equ	4089	;# 
  1932   000FFA                     PCLATH          equ	4090	;# 
  1933   000FFB                     PCLATU          equ	4091	;# 
  1934   000FFC                     STKPTR          equ	4092	;# 
  1935   000FFD                     TOS             equ	4093	;# 
  1936   000FFD                     TOSL            equ	4093	;# 
  1937   000FFE                     TOSH            equ	4094	;# 
  1938   000FFF                     TOSU            equ	4095	;# 
  1939   000F80                     PORTA           equ	3968	;# 
  1940   000F81                     PORTB           equ	3969	;# 
  1941   000F82                     PORTC           equ	3970	;# 
  1942   000F83                     PORTD           equ	3971	;# 
  1943   000F84                     PORTE           equ	3972	;# 
  1944   000F89                     LATA            equ	3977	;# 
  1945   000F8A                     LATB            equ	3978	;# 
  1946   000F8B                     LATC            equ	3979	;# 
  1947   000F8C                     LATD            equ	3980	;# 
  1948   000F8D                     LATE            equ	3981	;# 
  1949   000F92                     TRISA           equ	3986	;# 
  1950   000F92                     DDRA            equ	3986	;# 
  1951   000F93                     TRISB           equ	3987	;# 
  1952   000F93                     DDRB            equ	3987	;# 
  1953   000F94                     TRISC           equ	3988	;# 
  1954   000F94                     DDRC            equ	3988	;# 
  1955   000F95                     TRISD           equ	3989	;# 
  1956   000F95                     DDRD            equ	3989	;# 
  1957   000F96                     TRISE           equ	3990	;# 
  1958   000F96                     DDRE            equ	3990	;# 
  1959   000F9B                     OSCTUNE         equ	3995	;# 
  1960   000F9D                     PIE1            equ	3997	;# 
  1961   000F9E                     PIR1            equ	3998	;# 
  1962   000F9F                     IPR1            equ	3999	;# 
  1963   000FA0                     PIE2            equ	4000	;# 
  1964   000FA1                     PIR2            equ	4001	;# 
  1965   000FA2                     IPR2            equ	4002	;# 
  1966   000FA6                     EECON1          equ	4006	;# 
  1967   000FA7                     EECON2          equ	4007	;# 
  1968   000FA8                     EEDATA          equ	4008	;# 
  1969   000FA9                     EEADR           equ	4009	;# 
  1970   000FAA                     EEADRH          equ	4010	;# 
  1971   000FAB                     RCSTA           equ	4011	;# 
  1972   000FAB                     RCSTA1          equ	4011	;# 
  1973   000FAC                     TXSTA           equ	4012	;# 
  1974   000FAC                     TXSTA1          equ	4012	;# 
  1975   000FAD                     TXREG           equ	4013	;# 
  1976   000FAD                     TXREG1          equ	4013	;# 
  1977   000FAE                     RCREG           equ	4014	;# 
  1978   000FAE                     RCREG1          equ	4014	;# 
  1979   000FAF                     SPBRG           equ	4015	;# 
  1980   000FAF                     SPBRG1          equ	4015	;# 
  1981   000FB0                     SPBRGH          equ	4016	;# 
  1982   000FB1                     T3CON           equ	4017	;# 
  1983   000FB2                     TMR3            equ	4018	;# 
  1984   000FB2                     TMR3L           equ	4018	;# 
  1985   000FB3                     TMR3H           equ	4019	;# 
  1986   000FB4                     CMCON           equ	4020	;# 
  1987   000FB5                     CVRCON          equ	4021	;# 
  1988   000FB6                     ECCP1AS         equ	4022	;# 
  1989   000FB7                     PWM1CON         equ	4023	;# 
  1990   000FB8                     BAUDCON         equ	4024	;# 
  1991   000FB8                     BAUDCTL         equ	4024	;# 
  1992   000FBA                     CCP2CON         equ	4026	;# 
  1993   000FBB                     CCPR2           equ	4027	;# 
  1994   000FBB                     CCPR2L          equ	4027	;# 
  1995   000FBC                     CCPR2H          equ	4028	;# 
  1996   000FBD                     CCP1CON         equ	4029	;# 
  1997   000FBE                     CCPR1           equ	4030	;# 
  1998   000FBE                     CCPR1L          equ	4030	;# 
  1999   000FBF                     CCPR1H          equ	4031	;# 
  2000   000FC0                     ADCON2          equ	4032	;# 
  2001   000FC1                     ADCON1          equ	4033	;# 
  2002   000FC2                     ADCON0          equ	4034	;# 
  2003   000FC3                     ADRES           equ	4035	;# 
  2004   000FC3                     ADRESL          equ	4035	;# 
  2005   000FC4                     ADRESH          equ	4036	;# 
  2006   000FC5                     SSPCON2         equ	4037	;# 
  2007   000FC6                     SSPCON1         equ	4038	;# 
  2008   000FC7                     SSPSTAT         equ	4039	;# 
  2009   000FC8                     SSPADD          equ	4040	;# 
  2010   000FC9                     SSPBUF          equ	4041	;# 
  2011   000FCA                     T2CON           equ	4042	;# 
  2012   000FCB                     PR2             equ	4043	;# 
  2013   000FCB                     MEMCON          equ	4043	;# 
  2014   000FCC                     TMR2            equ	4044	;# 
  2015   000FCD                     T1CON           equ	4045	;# 
  2016   000FCE                     TMR1            equ	4046	;# 
  2017   000FCE                     TMR1L           equ	4046	;# 
  2018   000FCF                     TMR1H           equ	4047	;# 
  2019   000FD0                     RCON            equ	4048	;# 
  2020   000FD1                     WDTCON          equ	4049	;# 
  2021   000FD2                     HLVDCON         equ	4050	;# 
  2022   000FD2                     LVDCON          equ	4050	;# 
  2023   000FD3                     OSCCON          equ	4051	;# 
  2024   000FD5                     T0CON           equ	4053	;# 
  2025   000FD6                     TMR0            equ	4054	;# 
  2026   000FD6                     TMR0L           equ	4054	;# 
  2027   000FD7                     TMR0H           equ	4055	;# 
  2028   000FD8                     STATUS          equ	4056	;# 
  2029   000FD9                     FSR2            equ	4057	;# 
  2030   000FD9                     FSR2L           equ	4057	;# 
  2031   000FDA                     FSR2H           equ	4058	;# 
  2032   000FDB                     PLUSW2          equ	4059	;# 
  2033   000FDC                     PREINC2         equ	4060	;# 
  2034   000FDD                     POSTDEC2        equ	4061	;# 
  2035   000FDE                     POSTINC2        equ	4062	;# 
  2036   000FDF                     INDF2           equ	4063	;# 
  2037   000FE0                     BSR             equ	4064	;# 
  2038   000FE1                     FSR1            equ	4065	;# 
  2039   000FE1                     FSR1L           equ	4065	;# 
  2040   000FE2                     FSR1H           equ	4066	;# 
  2041   000FE3                     PLUSW1          equ	4067	;# 
  2042   000FE4                     PREINC1         equ	4068	;# 
  2043   000FE5                     POSTDEC1        equ	4069	;# 
  2044   000FE6                     POSTINC1        equ	4070	;# 
  2045   000FE7                     INDF1           equ	4071	;# 
  2046   000FE8                     WREG            equ	4072	;# 
  2047   000FE9                     FSR0            equ	4073	;# 
  2048   000FE9                     FSR0L           equ	4073	;# 
  2049   000FEA                     FSR0H           equ	4074	;# 
  2050   000FEB                     PLUSW0          equ	4075	;# 
  2051   000FEC                     PREINC0         equ	4076	;# 
  2052   000FED                     POSTDEC0        equ	4077	;# 
  2053   000FEE                     POSTINC0        equ	4078	;# 
  2054   000FEF                     INDF0           equ	4079	;# 
  2055   000FF0                     INTCON3         equ	4080	;# 
  2056   000FF1                     INTCON2         equ	4081	;# 
  2057   000FF2                     INTCON          equ	4082	;# 
  2058   000FF3                     PROD            equ	4083	;# 
  2059   000FF3                     PRODL           equ	4083	;# 
  2060   000FF4                     PRODH           equ	4084	;# 
  2061   000FF5                     TABLAT          equ	4085	;# 
  2062   000FF6                     TBLPTR          equ	4086	;# 
  2063   000FF6                     TBLPTRL         equ	4086	;# 
  2064   000FF7                     TBLPTRH         equ	4087	;# 
  2065   000FF8                     TBLPTRU         equ	4088	;# 
  2066   000FF9                     PCLAT           equ	4089	;# 
  2067   000FF9                     PC              equ	4089	;# 
  2068   000FF9                     PCL             equ	4089	;# 
  2069   000FFA                     PCLATH          equ	4090	;# 
  2070   000FFB                     PCLATU          equ	4091	;# 
  2071   000FFC                     STKPTR          equ	4092	;# 
  2072   000FFD                     TOS             equ	4093	;# 
  2073   000FFD                     TOSL            equ	4093	;# 
  2074   000FFE                     TOSH            equ	4094	;# 
  2075   000FFF                     TOSU            equ	4095	;# 
  2076   000F80                     PORTA           equ	3968	;# 
  2077   000F81                     PORTB           equ	3969	;# 
  2078   000F82                     PORTC           equ	3970	;# 
  2079   000F83                     PORTD           equ	3971	;# 
  2080   000F84                     PORTE           equ	3972	;# 
  2081   000F89                     LATA            equ	3977	;# 
  2082   000F8A                     LATB            equ	3978	;# 
  2083   000F8B                     LATC            equ	3979	;# 
  2084   000F8C                     LATD            equ	3980	;# 
  2085   000F8D                     LATE            equ	3981	;# 
  2086   000F92                     TRISA           equ	3986	;# 
  2087   000F92                     DDRA            equ	3986	;# 
  2088   000F93                     TRISB           equ	3987	;# 
  2089   000F93                     DDRB            equ	3987	;# 
  2090   000F94                     TRISC           equ	3988	;# 
  2091   000F94                     DDRC            equ	3988	;# 
  2092   000F95                     TRISD           equ	3989	;# 
  2093   000F95                     DDRD            equ	3989	;# 
  2094   000F96                     TRISE           equ	3990	;# 
  2095   000F96                     DDRE            equ	3990	;# 
  2096   000F9B                     OSCTUNE         equ	3995	;# 
  2097   000F9D                     PIE1            equ	3997	;# 
  2098   000F9E                     PIR1            equ	3998	;# 
  2099   000F9F                     IPR1            equ	3999	;# 
  2100   000FA0                     PIE2            equ	4000	;# 
  2101   000FA1                     PIR2            equ	4001	;# 
  2102   000FA2                     IPR2            equ	4002	;# 
  2103   000FA6                     EECON1          equ	4006	;# 
  2104   000FA7                     EECON2          equ	4007	;# 
  2105   000FA8                     EEDATA          equ	4008	;# 
  2106   000FA9                     EEADR           equ	4009	;# 
  2107   000FAA                     EEADRH          equ	4010	;# 
  2108   000FAB                     RCSTA           equ	4011	;# 
  2109   000FAB                     RCSTA1          equ	4011	;# 
  2110   000FAC                     TXSTA           equ	4012	;# 
  2111   000FAC                     TXSTA1          equ	4012	;# 
  2112   000FAD                     TXREG           equ	4013	;# 
  2113   000FAD                     TXREG1          equ	4013	;# 
  2114   000FAE                     RCREG           equ	4014	;# 
  2115   000FAE                     RCREG1          equ	4014	;# 
  2116   000FAF                     SPBRG           equ	4015	;# 
  2117   000FAF                     SPBRG1          equ	4015	;# 
  2118   000FB0                     SPBRGH          equ	4016	;# 
  2119   000FB1                     T3CON           equ	4017	;# 
  2120   000FB2                     TMR3            equ	4018	;# 
  2121   000FB2                     TMR3L           equ	4018	;# 
  2122   000FB3                     TMR3H           equ	4019	;# 
  2123   000FB4                     CMCON           equ	4020	;# 
  2124   000FB5                     CVRCON          equ	4021	;# 
  2125   000FB6                     ECCP1AS         equ	4022	;# 
  2126   000FB7                     PWM1CON         equ	4023	;# 
  2127   000FB8                     BAUDCON         equ	4024	;# 
  2128   000FB8                     BAUDCTL         equ	4024	;# 
  2129   000FBA                     CCP2CON         equ	4026	;# 
  2130   000FBB                     CCPR2           equ	4027	;# 
  2131   000FBB                     CCPR2L          equ	4027	;# 
  2132   000FBC                     CCPR2H          equ	4028	;# 
  2133   000FBD                     CCP1CON         equ	4029	;# 
  2134   000FBE                     CCPR1           equ	4030	;# 
  2135   000FBE                     CCPR1L          equ	4030	;# 
  2136   000FBF                     CCPR1H          equ	4031	;# 
  2137   000FC0                     ADCON2          equ	4032	;# 
  2138   000FC1                     ADCON1          equ	4033	;# 
  2139   000FC2                     ADCON0          equ	4034	;# 
  2140   000FC3                     ADRES           equ	4035	;# 
  2141   000FC3                     ADRESL          equ	4035	;# 
  2142   000FC4                     ADRESH          equ	4036	;# 
  2143   000FC5                     SSPCON2         equ	4037	;# 
  2144   000FC6                     SSPCON1         equ	4038	;# 
  2145   000FC7                     SSPSTAT         equ	4039	;# 
  2146   000FC8                     SSPADD          equ	4040	;# 
  2147   000FC9                     SSPBUF          equ	4041	;# 
  2148   000FCA                     T2CON           equ	4042	;# 
  2149   000FCB                     PR2             equ	4043	;# 
  2150   000FCB                     MEMCON          equ	4043	;# 
  2151   000FCC                     TMR2            equ	4044	;# 
  2152   000FCD                     T1CON           equ	4045	;# 
  2153   000FCE                     TMR1            equ	4046	;# 
  2154   000FCE                     TMR1L           equ	4046	;# 
  2155   000FCF                     TMR1H           equ	4047	;# 
  2156   000FD0                     RCON            equ	4048	;# 
  2157   000FD1                     WDTCON          equ	4049	;# 
  2158   000FD2                     HLVDCON         equ	4050	;# 
  2159   000FD2                     LVDCON          equ	4050	;# 
  2160   000FD3                     OSCCON          equ	4051	;# 
  2161   000FD5                     T0CON           equ	4053	;# 
  2162   000FD6                     TMR0            equ	4054	;# 
  2163   000FD6                     TMR0L           equ	4054	;# 
  2164   000FD7                     TMR0H           equ	4055	;# 
  2165   000FD8                     STATUS          equ	4056	;# 
  2166   000FD9                     FSR2            equ	4057	;# 
  2167   000FD9                     FSR2L           equ	4057	;# 
  2168   000FDA                     FSR2H           equ	4058	;# 
  2169   000FDB                     PLUSW2          equ	4059	;# 
  2170   000FDC                     PREINC2         equ	4060	;# 
  2171   000FDD                     POSTDEC2        equ	4061	;# 
  2172   000FDE                     POSTINC2        equ	4062	;# 
  2173   000FDF                     INDF2           equ	4063	;# 
  2174   000FE0                     BSR             equ	4064	;# 
  2175   000FE1                     FSR1            equ	4065	;# 
  2176   000FE1                     FSR1L           equ	4065	;# 
  2177   000FE2                     FSR1H           equ	4066	;# 
  2178   000FE3                     PLUSW1          equ	4067	;# 
  2179   000FE4                     PREINC1         equ	4068	;# 
  2180   000FE5                     POSTDEC1        equ	4069	;# 
  2181   000FE6                     POSTINC1        equ	4070	;# 
  2182   000FE7                     INDF1           equ	4071	;# 
  2183   000FE8                     WREG            equ	4072	;# 
  2184   000FE9                     FSR0            equ	4073	;# 
  2185   000FE9                     FSR0L           equ	4073	;# 
  2186   000FEA                     FSR0H           equ	4074	;# 
  2187   000FEB                     PLUSW0          equ	4075	;# 
  2188   000FEC                     PREINC0         equ	4076	;# 
  2189   000FED                     POSTDEC0        equ	4077	;# 
  2190   000FEE                     POSTINC0        equ	4078	;# 
  2191   000FEF                     INDF0           equ	4079	;# 
  2192   000FF0                     INTCON3         equ	4080	;# 
  2193   000FF1                     INTCON2         equ	4081	;# 
  2194   000FF2                     INTCON          equ	4082	;# 
  2195   000FF3                     PROD            equ	4083	;# 
  2196   000FF3                     PRODL           equ	4083	;# 
  2197   000FF4                     PRODH           equ	4084	;# 
  2198   000FF5                     TABLAT          equ	4085	;# 
  2199   000FF6                     TBLPTR          equ	4086	;# 
  2200   000FF6                     TBLPTRL         equ	4086	;# 
  2201   000FF7                     TBLPTRH         equ	4087	;# 
  2202   000FF8                     TBLPTRU         equ	4088	;# 
  2203   000FF9                     PCLAT           equ	4089	;# 
  2204   000FF9                     PC              equ	4089	;# 
  2205   000FF9                     PCL             equ	4089	;# 
  2206   000FFA                     PCLATH          equ	4090	;# 
  2207   000FFB                     PCLATU          equ	4091	;# 
  2208   000FFC                     STKPTR          equ	4092	;# 
  2209   000FFD                     TOS             equ	4093	;# 
  2210   000FFD                     TOSL            equ	4093	;# 
  2211   000FFE                     TOSH            equ	4094	;# 
  2212   000FFF                     TOSU            equ	4095	;# 
  2213   000F80                     PORTA           equ	3968	;# 
  2214   000F81                     PORTB           equ	3969	;# 
  2215   000F82                     PORTC           equ	3970	;# 
  2216   000F83                     PORTD           equ	3971	;# 
  2217   000F84                     PORTE           equ	3972	;# 
  2218   000F89                     LATA            equ	3977	;# 
  2219   000F8A                     LATB            equ	3978	;# 
  2220   000F8B                     LATC            equ	3979	;# 
  2221   000F8C                     LATD            equ	3980	;# 
  2222   000F8D                     LATE            equ	3981	;# 
  2223   000F92                     TRISA           equ	3986	;# 
  2224   000F92                     DDRA            equ	3986	;# 
  2225   000F93                     TRISB           equ	3987	;# 
  2226   000F93                     DDRB            equ	3987	;# 
  2227   000F94                     TRISC           equ	3988	;# 
  2228   000F94                     DDRC            equ	3988	;# 
  2229   000F95                     TRISD           equ	3989	;# 
  2230   000F95                     DDRD            equ	3989	;# 
  2231   000F96                     TRISE           equ	3990	;# 
  2232   000F96                     DDRE            equ	3990	;# 
  2233   000F9B                     OSCTUNE         equ	3995	;# 
  2234   000F9D                     PIE1            equ	3997	;# 
  2235   000F9E                     PIR1            equ	3998	;# 
  2236   000F9F                     IPR1            equ	3999	;# 
  2237   000FA0                     PIE2            equ	4000	;# 
  2238   000FA1                     PIR2            equ	4001	;# 
  2239   000FA2                     IPR2            equ	4002	;# 
  2240   000FA6                     EECON1          equ	4006	;# 
  2241   000FA7                     EECON2          equ	4007	;# 
  2242   000FA8                     EEDATA          equ	4008	;# 
  2243   000FA9                     EEADR           equ	4009	;# 
  2244   000FAA                     EEADRH          equ	4010	;# 
  2245   000FAB                     RCSTA           equ	4011	;# 
  2246   000FAB                     RCSTA1          equ	4011	;# 
  2247   000FAC                     TXSTA           equ	4012	;# 
  2248   000FAC                     TXSTA1          equ	4012	;# 
  2249   000FAD                     TXREG           equ	4013	;# 
  2250   000FAD                     TXREG1          equ	4013	;# 
  2251   000FAE                     RCREG           equ	4014	;# 
  2252   000FAE                     RCREG1          equ	4014	;# 
  2253   000FAF                     SPBRG           equ	4015	;# 
  2254   000FAF                     SPBRG1          equ	4015	;# 
  2255   000FB0                     SPBRGH          equ	4016	;# 
  2256   000FB1                     T3CON           equ	4017	;# 
  2257   000FB2                     TMR3            equ	4018	;# 
  2258   000FB2                     TMR3L           equ	4018	;# 
  2259   000FB3                     TMR3H           equ	4019	;# 
  2260   000FB4                     CMCON           equ	4020	;# 
  2261   000FB5                     CVRCON          equ	4021	;# 
  2262   000FB6                     ECCP1AS         equ	4022	;# 
  2263   000FB7                     PWM1CON         equ	4023	;# 
  2264   000FB8                     BAUDCON         equ	4024	;# 
  2265   000FB8                     BAUDCTL         equ	4024	;# 
  2266   000FBA                     CCP2CON         equ	4026	;# 
  2267   000FBB                     CCPR2           equ	4027	;# 
  2268   000FBB                     CCPR2L          equ	4027	;# 
  2269   000FBC                     CCPR2H          equ	4028	;# 
  2270   000FBD                     CCP1CON         equ	4029	;# 
  2271   000FBE                     CCPR1           equ	4030	;# 
  2272   000FBE                     CCPR1L          equ	4030	;# 
  2273   000FBF                     CCPR1H          equ	4031	;# 
  2274   000FC0                     ADCON2          equ	4032	;# 
  2275   000FC1                     ADCON1          equ	4033	;# 
  2276   000FC2                     ADCON0          equ	4034	;# 
  2277   000FC3                     ADRES           equ	4035	;# 
  2278   000FC3                     ADRESL          equ	4035	;# 
  2279   000FC4                     ADRESH          equ	4036	;# 
  2280   000FC5                     SSPCON2         equ	4037	;# 
  2281   000FC6                     SSPCON1         equ	4038	;# 
  2282   000FC7                     SSPSTAT         equ	4039	;# 
  2283   000FC8                     SSPADD          equ	4040	;# 
  2284   000FC9                     SSPBUF          equ	4041	;# 
  2285   000FCA                     T2CON           equ	4042	;# 
  2286   000FCB                     PR2             equ	4043	;# 
  2287   000FCB                     MEMCON          equ	4043	;# 
  2288   000FCC                     TMR2            equ	4044	;# 
  2289   000FCD                     T1CON           equ	4045	;# 
  2290   000FCE                     TMR1            equ	4046	;# 
  2291   000FCE                     TMR1L           equ	4046	;# 
  2292   000FCF                     TMR1H           equ	4047	;# 
  2293   000FD0                     RCON            equ	4048	;# 
  2294   000FD1                     WDTCON          equ	4049	;# 
  2295   000FD2                     HLVDCON         equ	4050	;# 
  2296   000FD2                     LVDCON          equ	4050	;# 
  2297   000FD3                     OSCCON          equ	4051	;# 
  2298   000FD5                     T0CON           equ	4053	;# 
  2299   000FD6                     TMR0            equ	4054	;# 
  2300   000FD6                     TMR0L           equ	4054	;# 
  2301   000FD7                     TMR0H           equ	4055	;# 
  2302   000FD8                     STATUS          equ	4056	;# 
  2303   000FD9                     FSR2            equ	4057	;# 
  2304   000FD9                     FSR2L           equ	4057	;# 
  2305   000FDA                     FSR2H           equ	4058	;# 
  2306   000FDB                     PLUSW2          equ	4059	;# 
  2307   000FDC                     PREINC2         equ	4060	;# 
  2308   000FDD                     POSTDEC2        equ	4061	;# 
  2309   000FDE                     POSTINC2        equ	4062	;# 
  2310   000FDF                     INDF2           equ	4063	;# 
  2311   000FE0                     BSR             equ	4064	;# 
  2312   000FE1                     FSR1            equ	4065	;# 
  2313   000FE1                     FSR1L           equ	4065	;# 
  2314   000FE2                     FSR1H           equ	4066	;# 
  2315   000FE3                     PLUSW1          equ	4067	;# 
  2316   000FE4                     PREINC1         equ	4068	;# 
  2317   000FE5                     POSTDEC1        equ	4069	;# 
  2318   000FE6                     POSTINC1        equ	4070	;# 
  2319   000FE7                     INDF1           equ	4071	;# 
  2320   000FE8                     WREG            equ	4072	;# 
  2321   000FE9                     FSR0            equ	4073	;# 
  2322   000FE9                     FSR0L           equ	4073	;# 
  2323   000FEA                     FSR0H           equ	4074	;# 
  2324   000FEB                     PLUSW0          equ	4075	;# 
  2325   000FEC                     PREINC0         equ	4076	;# 
  2326   000FED                     POSTDEC0        equ	4077	;# 
  2327   000FEE                     POSTINC0        equ	4078	;# 
  2328   000FEF                     INDF0           equ	4079	;# 
  2329   000FF0                     INTCON3         equ	4080	;# 
  2330   000FF1                     INTCON2         equ	4081	;# 
  2331   000FF2                     INTCON          equ	4082	;# 
  2332   000FF3                     PROD            equ	4083	;# 
  2333   000FF3                     PRODL           equ	4083	;# 
  2334   000FF4                     PRODH           equ	4084	;# 
  2335   000FF5                     TABLAT          equ	4085	;# 
  2336   000FF6                     TBLPTR          equ	4086	;# 
  2337   000FF6                     TBLPTRL         equ	4086	;# 
  2338   000FF7                     TBLPTRH         equ	4087	;# 
  2339   000FF8                     TBLPTRU         equ	4088	;# 
  2340   000FF9                     PCLAT           equ	4089	;# 
  2341   000FF9                     PC              equ	4089	;# 
  2342   000FF9                     PCL             equ	4089	;# 
  2343   000FFA                     PCLATH          equ	4090	;# 
  2344   000FFB                     PCLATU          equ	4091	;# 
  2345   000FFC                     STKPTR          equ	4092	;# 
  2346   000FFD                     TOS             equ	4093	;# 
  2347   000FFD                     TOSL            equ	4093	;# 
  2348   000FFE                     TOSH            equ	4094	;# 
  2349   000FFF                     TOSU            equ	4095	;# 
  2350   000F80                     PORTA           equ	3968	;# 
  2351   000F81                     PORTB           equ	3969	;# 
  2352   000F82                     PORTC           equ	3970	;# 
  2353   000F83                     PORTD           equ	3971	;# 
  2354   000F84                     PORTE           equ	3972	;# 
  2355   000F89                     LATA            equ	3977	;# 
  2356   000F8A                     LATB            equ	3978	;# 
  2357   000F8B                     LATC            equ	3979	;# 
  2358   000F8C                     LATD            equ	3980	;# 
  2359   000F8D                     LATE            equ	3981	;# 
  2360   000F92                     TRISA           equ	3986	;# 
  2361   000F92                     DDRA            equ	3986	;# 
  2362   000F93                     TRISB           equ	3987	;# 
  2363   000F93                     DDRB            equ	3987	;# 
  2364   000F94                     TRISC           equ	3988	;# 
  2365   000F94                     DDRC            equ	3988	;# 
  2366   000F95                     TRISD           equ	3989	;# 
  2367   000F95                     DDRD            equ	3989	;# 
  2368   000F96                     TRISE           equ	3990	;# 
  2369   000F96                     DDRE            equ	3990	;# 
  2370   000F9B                     OSCTUNE         equ	3995	;# 
  2371   000F9D                     PIE1            equ	3997	;# 
  2372   000F9E                     PIR1            equ	3998	;# 
  2373   000F9F                     IPR1            equ	3999	;# 
  2374   000FA0                     PIE2            equ	4000	;# 
  2375   000FA1                     PIR2            equ	4001	;# 
  2376   000FA2                     IPR2            equ	4002	;# 
  2377   000FA6                     EECON1          equ	4006	;# 
  2378   000FA7                     EECON2          equ	4007	;# 
  2379   000FA8                     EEDATA          equ	4008	;# 
  2380   000FA9                     EEADR           equ	4009	;# 
  2381   000FAA                     EEADRH          equ	4010	;# 
  2382   000FAB                     RCSTA           equ	4011	;# 
  2383   000FAB                     RCSTA1          equ	4011	;# 
  2384   000FAC                     TXSTA           equ	4012	;# 
  2385   000FAC                     TXSTA1          equ	4012	;# 
  2386   000FAD                     TXREG           equ	4013	;# 
  2387   000FAD                     TXREG1          equ	4013	;# 
  2388   000FAE                     RCREG           equ	4014	;# 
  2389   000FAE                     RCREG1          equ	4014	;# 
  2390   000FAF                     SPBRG           equ	4015	;# 
  2391   000FAF                     SPBRG1          equ	4015	;# 
  2392   000FB0                     SPBRGH          equ	4016	;# 
  2393   000FB1                     T3CON           equ	4017	;# 
  2394   000FB2                     TMR3            equ	4018	;# 
  2395   000FB2                     TMR3L           equ	4018	;# 
  2396   000FB3                     TMR3H           equ	4019	;# 
  2397   000FB4                     CMCON           equ	4020	;# 
  2398   000FB5                     CVRCON          equ	4021	;# 
  2399   000FB6                     ECCP1AS         equ	4022	;# 
  2400   000FB7                     PWM1CON         equ	4023	;# 
  2401   000FB8                     BAUDCON         equ	4024	;# 
  2402   000FB8                     BAUDCTL         equ	4024	;# 
  2403   000FBA                     CCP2CON         equ	4026	;# 
  2404   000FBB                     CCPR2           equ	4027	;# 
  2405   000FBB                     CCPR2L          equ	4027	;# 
  2406   000FBC                     CCPR2H          equ	4028	;# 
  2407   000FBD                     CCP1CON         equ	4029	;# 
  2408   000FBE                     CCPR1           equ	4030	;# 
  2409   000FBE                     CCPR1L          equ	4030	;# 
  2410   000FBF                     CCPR1H          equ	4031	;# 
  2411   000FC0                     ADCON2          equ	4032	;# 
  2412   000FC1                     ADCON1          equ	4033	;# 
  2413   000FC2                     ADCON0          equ	4034	;# 
  2414   000FC3                     ADRES           equ	4035	;# 
  2415   000FC3                     ADRESL          equ	4035	;# 
  2416   000FC4                     ADRESH          equ	4036	;# 
  2417   000FC5                     SSPCON2         equ	4037	;# 
  2418   000FC6                     SSPCON1         equ	4038	;# 
  2419   000FC7                     SSPSTAT         equ	4039	;# 
  2420   000FC8                     SSPADD          equ	4040	;# 
  2421   000FC9                     SSPBUF          equ	4041	;# 
  2422   000FCA                     T2CON           equ	4042	;# 
  2423   000FCB                     PR2             equ	4043	;# 
  2424   000FCB                     MEMCON          equ	4043	;# 
  2425   000FCC                     TMR2            equ	4044	;# 
  2426   000FCD                     T1CON           equ	4045	;# 
  2427   000FCE                     TMR1            equ	4046	;# 
  2428   000FCE                     TMR1L           equ	4046	;# 
  2429   000FCF                     TMR1H           equ	4047	;# 
  2430   000FD0                     RCON            equ	4048	;# 
  2431   000FD1                     WDTCON          equ	4049	;# 
  2432   000FD2                     HLVDCON         equ	4050	;# 
  2433   000FD2                     LVDCON          equ	4050	;# 
  2434   000FD3                     OSCCON          equ	4051	;# 
  2435   000FD5                     T0CON           equ	4053	;# 
  2436   000FD6                     TMR0            equ	4054	;# 
  2437   000FD6                     TMR0L           equ	4054	;# 
  2438   000FD7                     TMR0H           equ	4055	;# 
  2439   000FD8                     STATUS          equ	4056	;# 
  2440   000FD9                     FSR2            equ	4057	;# 
  2441   000FD9                     FSR2L           equ	4057	;# 
  2442   000FDA                     FSR2H           equ	4058	;# 
  2443   000FDB                     PLUSW2          equ	4059	;# 
  2444   000FDC                     PREINC2         equ	4060	;# 
  2445   000FDD                     POSTDEC2        equ	4061	;# 
  2446   000FDE                     POSTINC2        equ	4062	;# 
  2447   000FDF                     INDF2           equ	4063	;# 
  2448   000FE0                     BSR             equ	4064	;# 
  2449   000FE1                     FSR1            equ	4065	;# 
  2450   000FE1                     FSR1L           equ	4065	;# 
  2451   000FE2                     FSR1H           equ	4066	;# 
  2452   000FE3                     PLUSW1          equ	4067	;# 
  2453   000FE4                     PREINC1         equ	4068	;# 
  2454   000FE5                     POSTDEC1        equ	4069	;# 
  2455   000FE6                     POSTINC1        equ	4070	;# 
  2456   000FE7                     INDF1           equ	4071	;# 
  2457   000FE8                     WREG            equ	4072	;# 
  2458   000FE9                     FSR0            equ	4073	;# 
  2459   000FE9                     FSR0L           equ	4073	;# 
  2460   000FEA                     FSR0H           equ	4074	;# 
  2461   000FEB                     PLUSW0          equ	4075	;# 
  2462   000FEC                     PREINC0         equ	4076	;# 
  2463   000FED                     POSTDEC0        equ	4077	;# 
  2464   000FEE                     POSTINC0        equ	4078	;# 
  2465   000FEF                     INDF0           equ	4079	;# 
  2466   000FF0                     INTCON3         equ	4080	;# 
  2467   000FF1                     INTCON2         equ	4081	;# 
  2468   000FF2                     INTCON          equ	4082	;# 
  2469   000FF3                     PROD            equ	4083	;# 
  2470   000FF3                     PRODL           equ	4083	;# 
  2471   000FF4                     PRODH           equ	4084	;# 
  2472   000FF5                     TABLAT          equ	4085	;# 
  2473   000FF6                     TBLPTR          equ	4086	;# 
  2474   000FF6                     TBLPTRL         equ	4086	;# 
  2475   000FF7                     TBLPTRH         equ	4087	;# 
  2476   000FF8                     TBLPTRU         equ	4088	;# 
  2477   000FF9                     PCLAT           equ	4089	;# 
  2478   000FF9                     PC              equ	4089	;# 
  2479   000FF9                     PCL             equ	4089	;# 
  2480   000FFA                     PCLATH          equ	4090	;# 
  2481   000FFB                     PCLATU          equ	4091	;# 
  2482   000FFC                     STKPTR          equ	4092	;# 
  2483   000FFD                     TOS             equ	4093	;# 
  2484   000FFD                     TOSL            equ	4093	;# 
  2485   000FFE                     TOSH            equ	4094	;# 
  2486   000FFF                     TOSU            equ	4095	;# 
  2487                           
  2488                           	psect	idataCOMRAM
  2489   0034E4                     __pidataCOMRAM:
  2490                           	callstack 0
  2491                           
  2492                           ;initializer for _RBflags
  2493   0034E4  01                 	db	1
  2494   0034E5  01                 	db	1
  2495   0034E6  01                 	db	1
  2496   0034E7  01                 	db	1
  2497                           
  2498                           ;initializer for _ret
  2499   0034E8  01                 	db	1
  2500                           
  2501                           ;initializer for _seg_on_logic
  2502   0034E9  01                 	db	1
  2503                           
  2504                           ;initializer for _led1
  2505   0034EA  02                 	db	2
  2506                           
  2507                           	psect	idataBANK0
  2508   0030D8                     __pidataBANK0:
  2509                           	callstack 0
  2510                           
  2511                           ;initializer for _keypad_values
  2512   0030D8  37                 	db	55
  2513   0030D9  38                 	db	56
  2514   0030DA  39                 	db	57
  2515   0030DB  2F                 	db	47
  2516   0030DC  34                 	db	52
  2517   0030DD  35                 	db	53
  2518   0030DE  36                 	db	54
  2519   0030DF  2A                 	db	42
  2520   0030E0  31                 	db	49
  2521   0030E1  32                 	db	50
  2522   0030E2  33                 	db	51
  2523   0030E3  2D                 	db	45
  2524   0030E4  43                 	db	67
  2525   0030E5  30                 	db	48
  2526   0030E6  3D                 	db	61
  2527   0030E7  2B                 	db	43
  2528                           
  2529                           ;initializer for _port_register
  2530   0030E8  80                 	db	128
  2531   0030E9  0F                 	db	15
  2532   0030EA  81                 	db	129
  2533   0030EB  0F                 	db	15
  2534   0030EC  82                 	db	130
  2535   0030ED  0F                 	db	15
  2536   0030EE  83                 	db	131
  2537   0030EF  0F                 	db	15
  2538   0030F0  84                 	db	132
  2539   0030F1  0F                 	db	15
  2540                           
  2541                           ;initializer for _lat_register
  2542   0030F2  89                 	db	137
  2543   0030F3  0F                 	db	15
  2544   0030F4  8A                 	db	138
  2545   0030F5  0F                 	db	15
  2546   0030F6  8B                 	db	139
  2547   0030F7  0F                 	db	15
  2548   0030F8  8C                 	db	140
  2549   0030F9  0F                 	db	15
  2550   0030FA  8D                 	db	141
  2551   0030FB  0F                 	db	15
  2552                           
  2553                           ;initializer for _tris_register
  2554   0030FC  92                 	db	146
  2555   0030FD  0F                 	db	15
  2556   0030FE  93                 	db	147
  2557   0030FF  0F                 	db	15
  2558   003100  94                 	db	148
  2559   003101  0F                 	db	15
  2560   003102  95                 	db	149
  2561   003103  0F                 	db	15
  2562   003104  96                 	db	150
  2563   003105  0F                 	db	15
  2564                           
  2565                           ;initializer for _P_Reg
  2566   003106  A2                 	db	162
  2567   003107  0F                 	db	15
  2568   003108  9F                 	db	159
  2569   003109  0F                 	db	15
  2570                           
  2571                           ;initializer for _F_Reg
  2572   00310A  A1                 	db	161
  2573   00310B  0F                 	db	15
  2574   00310C  9E                 	db	158
  2575   00310D  0F                 	db	15
  2576                           
  2577                           ;initializer for _E_Reg
  2578   00310E  A0                 	db	160
  2579   00310F  0F                 	db	15
  2580   003110  9D                 	db	157
  2581   003111  0F                 	db	15
  2582                           
  2583                           ;initializer for _view
  2584   003112  21                 	db	33
  2585   003113  29                 	db	41
  2586   003114  10                 	db	16
  2587   003115  18                 	db	24
  2588   003116  20                 	db	32
  2589   003117  28                 	db	40
  2590   003118  03                 	db	3
  2591   003119  0B                 	db	11
  2592   00311A  1B                 	db	27
  2593   00311B  22                 	db	34
  2594                           
  2595                           ;initializer for _adc_1
  2596   00311C  62                 	db	low _my_adc_isr
  2597   00311D  34                 	db	high _my_adc_isr
  2598   00311E  0C                 	db	12
  2599   00311F  02                 	db	2
  2600   003120  00                 	db	0
  2601   003121  00                 	db	0
  2602   000FC3                     _ADRESL         set	4035
  2603   000FC4                     _ADRESH         set	4036
  2604   000FC0                     _ADCON2bits     set	4032
  2605   000FC2                     _ADCON0bits     set	4034
  2606   000FC1                     _ADCON1bits     set	4033
  2607   000FA7                     _EECON2         set	4007
  2608   000FA8                     _EEDATA         set	4008
  2609   000FA6                     _EECON1bits     set	4006
  2610   000FA9                     _EEADR          set	4009
  2611   000FAA                     _EEADRH         set	4010
  2612   000F9D                     _PIE1bits       set	3997
  2613   000F9E                     _PIR1bits       set	3998
  2614   000FA0                     _PIE2bits       set	4000
  2615   000FA1                     _PIR2bits       set	4001
  2616   000F81                     _PORTBbits      set	3969
  2617   000FF1                     _INTCON2bits    set	4081
  2618   000FF2                     _INTCONbits     set	4082
  2619   000F9F                     _IPR1           set	3999
  2620   000FA2                     _IPR2           set	4002
  2621   000F9E                     _PIR1           set	3998
  2622   000FA1                     _PIR2           set	4001
  2623   000F9D                     _PIE1           set	3997
  2624   000FA0                     _PIE2           set	4000
  2625   000F84                     _PORTE          set	3972
  2626   000F83                     _PORTD          set	3971
  2627   000F82                     _PORTC          set	3970
  2628   000F81                     _PORTB          set	3969
  2629   000F80                     _PORTA          set	3968
  2630   000F8D                     _LATE           set	3981
  2631   000F8C                     _LATD           set	3980
  2632   000F8B                     _LATC           set	3979
  2633   000F8A                     _LATB           set	3978
  2634   000F89                     _LATA           set	3977
  2635   000F96                     _TRISE          set	3990
  2636   000F95                     _TRISD          set	3989
  2637   000F94                     _TRISC          set	3988
  2638   000F93                     _TRISB          set	3987
  2639   000F92                     _TRISA          set	3986
  2640                           
  2641                           	psect	smallconst
  2642   001000                     __psmallconst:
  2643                           	callstack 0
  2644   001000  00                 	db	0
  2645   001001                     STR_4:
  2646   001001  56                 	db	86	;'V'
  2647   001002  6F                 	db	111	;'o'
  2648   001003  6C                 	db	108	;'l'
  2649   001004  74                 	db	116	;'t'
  2650   001005  61                 	db	97	;'a'
  2651   001006  67                 	db	103	;'g'
  2652   001007  65                 	db	101	;'e'
  2653   001008  20                 	db	32
  2654   001009  3D                 	db	61	;'='
  2655   00100A  20                 	db	32
  2656   00100B  20                 	db	32
  2657   00100C  00                 	db	0
  2658   00100D                     STR_1:
  2659   00100D  25                 	db	37
  2660   00100E  75                 	db	117	;'u'
  2661   00100F  00                 	db	0
  2662   00100D                     STR_2           equ	STR_1
  2663   00100D                     STR_3           equ	STR_1
  2664   001010  00                 	db	0	; dummy byte at the end
  2665   001000                     __smallconst    set	__psmallconst
  2666   001000                     __mediumconst   set	__psmallconst
  2667   000003                     __activetblptr  equ	3
  2668                           
  2669                           ; #config settings
  2670                           
  2671                           	psect	cinit
  2672   002E0E                     __pcinit:
  2673                           	callstack 0
  2674   002E0E                     start_initialization:
  2675                           	callstack 0
  2676   002E0E                     __initialization:
  2677                           	callstack 0
  2678                           
  2679                           ; Initialize objects allocated to BANK0 (74 bytes)
  2680                           ; load TBLPTR registers with __pidataBANK0
  2681   002E0E  0ED8               	movlw	low __pidataBANK0
  2682   002E10  6EF6               	movwf	tblptrl,c
  2683   002E12  0E30               	movlw	high __pidataBANK0
  2684   002E14  6EF7               	movwf	tblptrh,c
  2685   002E16  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2686   002E18  6EF8               	movwf	tblptru,c
  2687   002E1A  EE00  F080         	lfsr	0,__pdataBANK0
  2688   002E1E  EE10 F04A          	lfsr	1,74
  2689   002E22                     copy_data0:
  2690   002E22  0009               	tblrd		*+
  2691   002E24  CFF5 FFEE          	movff	tablat,postinc0
  2692   002E28  50E5               	movf	postdec1,w,c
  2693   002E2A  50E1               	movf	fsr1l,w,c
  2694   002E2C  E1FA               	bnz	copy_data0
  2695                           
  2696                           ; Initialize objects allocated to COMRAM (7 bytes)
  2697                           ; load TBLPTR registers with __pidataCOMRAM
  2698   002E2E  0EE4               	movlw	low __pidataCOMRAM
  2699   002E30  6EF6               	movwf	tblptrl,c
  2700   002E32  0E34               	movlw	high __pidataCOMRAM
  2701   002E34  6EF7               	movwf	tblptrh,c
  2702   002E36  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2703   002E38  6EF8               	movwf	tblptru,c
  2704   002E3A  EE00  F067         	lfsr	0,__pdataCOMRAM
  2705   002E3E  EE10 F007          	lfsr	1,7
  2706   002E42                     copy_data1:
  2707   002E42  0009               	tblrd		*+
  2708   002E44  CFF5 FFEE          	movff	tablat,postinc0
  2709   002E48  50E5               	movf	postdec1,w,c
  2710   002E4A  50E1               	movf	fsr1l,w,c
  2711   002E4C  E1FA               	bnz	copy_data1
  2712                           
  2713                           ; Clear objects allocated to BANK0 (48 bytes)
  2714   002E4E  EE00  F0CA         	lfsr	0,__pbssBANK0
  2715   002E52  0E30               	movlw	48
  2716   002E54                     clear_0:
  2717   002E54  6AEE               	clrf	postinc0,c
  2718   002E56  06E8               	decf	wreg,f,c
  2719   002E58  E1FD               	bnz	clear_0
  2720                           
  2721                           ; Clear objects allocated to COMRAM (27 bytes)
  2722   002E5A  EE00  F04C         	lfsr	0,__pbssCOMRAM
  2723   002E5E  0E1B               	movlw	27
  2724   002E60                     clear_1:
  2725   002E60  6AEE               	clrf	postinc0,c
  2726   002E62  06E8               	decf	wreg,f,c
  2727   002E64  E1FD               	bnz	clear_1
  2728   002E66                     end_of_initialization:
  2729                           	callstack 0
  2730   002E66                     __end_of__initialization:
  2731                           	callstack 0
  2732   002E66  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2733   002E68  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2734   002E6A  0100               	movlb	0
  2735   002E6C  EF05  F011         	goto	_main	;jump to C main() function
  2736                           
  2737                           	psect	bssCOMRAM
  2738   00004C                     __pbssCOMRAM:
  2739                           	callstack 0
  2740   00004C                     _RB6_InterruotHandlerFalling:
  2741                           	callstack 0
  2742   00004C                     	ds	2
  2743   00004E                     _RB6_InterruotHandlerRissing:
  2744                           	callstack 0
  2745   00004E                     	ds	2
  2746   000050                     _RB5_InterruotHandlerFalling:
  2747                           	callstack 0
  2748   000050                     	ds	2
  2749   000052                     _RB5_InterruotHandlerRissing:
  2750                           	callstack 0
  2751   000052                     	ds	2
  2752   000054                     _RB4_InterruotHandlerFalling:
  2753                           	callstack 0
  2754   000054                     	ds	2
  2755   000056                     _RB4_InterruotHandlerRissing:
  2756                           	callstack 0
  2757   000056                     	ds	2
  2758   000058                     _IN0_InterruotHandler:
  2759                           	callstack 0
  2760   000058                     	ds	2
  2761   00005A                     _flags:
  2762                           	callstack 0
  2763   00005A                     	ds	1
  2764   00005B                     _voltage_b:
  2765                           	callstack 0
  2766   00005B                     	ds	1
  2767   00005C                     _voltage_a:
  2768                           	callstack 0
  2769   00005C                     	ds	1
  2770   00005D                     relay_turn_off@F3087:
  2771                           	callstack 0
  2772   00005D                     	ds	1
  2773   00005E                     relay_turn_on@F3082:
  2774                           	callstack 0
  2775   00005E                     	ds	1
  2776   00005F                     relay_intialize@F3077:
  2777                           	callstack 0
  2778   00005F                     	ds	1
  2779   000060                     led_turn_toggle@F3095:
  2780                           	callstack 0
  2781   000060                     	ds	1
  2782   000061                     led_turn_off@F3090:
  2783                           	callstack 0
  2784   000061                     	ds	1
  2785   000062                     led_turn_on@F3085:
  2786                           	callstack 0
  2787   000062                     	ds	1
  2788   000063                     led_initialize@F3079:
  2789                           	callstack 0
  2790   000063                     	ds	1
  2791   000064                     _seg_off_logic:
  2792                           	callstack 0
  2793   000064                     	ds	1
  2794   000065                     _adc_value:
  2795                           	callstack 0
  2796   000065                     	ds	0
  2797   000065                     _Value:
  2798                           	callstack 0
  2799   000065                     	ds	2
  2800   000067                     _pb:
  2801                           	callstack 0
  2802   000067                     	ds	0
  2803   000067                     _pa:
  2804                           	callstack 0
  2805   000067                     	ds	0
  2806                           
  2807                           	psect	dataCOMRAM
  2808   000067                     __pdataCOMRAM:
  2809                           	callstack 0
  2810   000067                     _RBflags:
  2811                           	callstack 0
  2812   000067                     	ds	4
  2813   00006B                     _ret:
  2814                           	callstack 0
  2815   00006B                     	ds	1
  2816   00006C                     _seg_on_logic:
  2817                           	callstack 0
  2818   00006C                     	ds	1
  2819   00006D                     _led1:
  2820                           	callstack 0
  2821   00006D                     	ds	1
  2822                           
  2823                           	psect	bssBANK0
  2824   0000CA                     __pbssBANK0:
  2825                           	callstack 0
  2826   0000CA                     _dbuf:
  2827                           	callstack 0
  2828   0000CA                     	ds	32
  2829   0000EA                     _voltage:
  2830                           	callstack 0
  2831   0000EA                     	ds	4
  2832   0000EE                     _nout:
  2833                           	callstack 0
  2834   0000EE                     	ds	2
  2835   0000F0                     _width:
  2836                           	callstack 0
  2837   0000F0                     	ds	2
  2838   0000F2                     _prec:
  2839                           	callstack 0
  2840   0000F2                     	ds	2
  2841   0000F4                     _errno:
  2842                           	callstack 0
  2843   0000F4                     	ds	2
  2844   0000F6                     _ADC_InterruptHandler:
  2845                           	callstack 0
  2846   0000F6                     	ds	2
  2847   0000F8                     _EEPROM_InterruptHandler:
  2848                           	callstack 0
  2849   0000F8                     	ds	2
  2850                           
  2851                           	psect	dataBANK0
  2852   000080                     __pdataBANK0:
  2853                           	callstack 0
  2854   000080                     _keypad_values:
  2855                           	callstack 0
  2856   000080                     	ds	16
  2857   000090                     _port_register:
  2858                           	callstack 0
  2859   000090                     	ds	10
  2860   00009A                     _lat_register:
  2861                           	callstack 0
  2862   00009A                     	ds	10
  2863   0000A4                     _tris_register:
  2864                           	callstack 0
  2865   0000A4                     	ds	10
  2866   0000AE                     _P_Reg:
  2867                           	callstack 0
  2868   0000AE                     	ds	4
  2869   0000B2                     _F_Reg:
  2870                           	callstack 0
  2871   0000B2                     	ds	4
  2872   0000B6                     _E_Reg:
  2873                           	callstack 0
  2874   0000B6                     	ds	4
  2875   0000BA                     _view:
  2876                           	callstack 0
  2877   0000BA                     	ds	10
  2878   0000C4                     _adc_1:
  2879                           	callstack 0
  2880   0000C4                     	ds	6
  2881                           
  2882                           	psect	cstackBANK1
  2883   000100                     __pcstackBANK1:
  2884                           	callstack 0
  2885   000100                     ___fldiv@rem:
  2886                           	callstack 0
  2887                           
  2888                           ; 4 bytes @ 0x0
  2889   000100                     	ds	4
  2890   000104                     ___fldiv@sign:
  2891                           	callstack 0
  2892                           
  2893                           ; 1 bytes @ 0x4
  2894   000104                     	ds	1
  2895   000105                     ___fldiv@new_exp:
  2896                           	callstack 0
  2897                           
  2898                           ; 2 bytes @ 0x5
  2899   000105                     	ds	2
  2900   000107                     ___fldiv@grs:
  2901                           	callstack 0
  2902                           
  2903                           ; 4 bytes @ 0x7
  2904   000107                     	ds	4
  2905   00010B                     ___fldiv@bexp:
  2906                           	callstack 0
  2907                           
  2908                           ; 1 bytes @ 0xB
  2909   00010B                     	ds	1
  2910   00010C                     ___fldiv@aexp:
  2911                           	callstack 0
  2912                           
  2913                           ; 1 bytes @ 0xC
  2914   00010C                     	ds	1
  2915                           
  2916                           	psect	cstackBANK0
  2917   0000FA                     __pcstackBANK0:
  2918                           	callstack 0
  2919   0000FA                     ??___fldiv:
  2920                           
  2921                           ; 1 bytes @ 0x0
  2922   0000FA                     	ds	4
  2923   0000FE                     ??_main:
  2924                           
  2925                           ; 1 bytes @ 0x4
  2926   0000FE                     	ds	2
  2927                           
  2928                           	psect	cstackCOMRAM
  2929   000001                     __pcstackCOMRAM:
  2930                           	callstack 0
  2931   000001                     gpio_pin_Toggle_logic@_pin_config:
  2932                           	callstack 0
  2933   000001                     i2Module_INTERRUPT_ClEAR_FLAG@bit_pos:
  2934                           	callstack 0
  2935   000001                     
  2936                           ; 1 bytes @ 0x0
  2937   000001                     	ds	1
  2938   000002                     ??_gpio_pin_Toggle_logic:
  2939   000002                     ??i2_Module_INTERRUPT_ClEAR_FLAG:
  2940                           
  2941                           ; 1 bytes @ 0x1
  2942   000002                     	ds	4
  2943   000006                     led_turn_toggle@led_config:
  2944                           	callstack 0
  2945                           
  2946                           ; 1 bytes @ 0x5
  2947   000006                     	ds	1
  2948   000007                     i2Module_INTERRUPT_ClEAR_FLAG@Reg:
  2949                           	callstack 0
  2950   000007                     ??_led_turn_toggle:
  2951                           
  2952                           ; 1 bytes @ 0x6
  2953   000007                     	ds	1
  2954   000008                     led_turn_toggle@led:
  2955                           	callstack 0
  2956   000008                     
  2957                           ; 1 bytes @ 0x7
  2958   000008                     	ds	1
  2959   000009                     ??_my_adc_isr:
  2960                           
  2961                           ; 1 bytes @ 0x8
  2962   000009                     	ds	2
  2963   00000B                     ??_InterruptManaerHigh:
  2964                           
  2965                           ; 1 bytes @ 0xA
  2966   00000B                     	ds	6
  2967   000011                     ?___lwdiv:
  2968                           	callstack 0
  2969   000011                     ?___lwmod:
  2970                           	callstack 0
  2971   000011                     ?___fladd:
  2972                           	callstack 0
  2973   000011                     ?___xxtofl:
  2974                           	callstack 0
  2975   000011                     GLOBAL_INTERRUPT_RETURN_STATE@PrevState:
  2976                           	callstack 0
  2977   000011                     gpio_pin_direction_intialize@_pin_config:
  2978                           	callstack 0
  2979   000011                     gpio_pin_write_direction@pin_config:
  2980                           	callstack 0
  2981   000011                     gpio_pin_write_logic@_pin_config:
  2982                           	callstack 0
  2983   000011                     Module_INTERRUPT_ENABLE@bit_pos:
  2984                           	callstack 0
  2985   000011                     Module_INTERRUPT_ClEAR_FLAG@bit_pos:
  2986                           	callstack 0
  2987   000011                     ADC_Voltage_source@ADC:
  2988                           	callstack 0
  2989   000011                     ADC_select_acquisition_time@ADC:
  2990                           	callstack 0
  2991   000011                     ADC_select_Clk_Conversion@ADC:
  2992                           	callstack 0
  2993   000011                     ADC_choose_IN_Hdnler@ADC:
  2994                           	callstack 0
  2995   000011                     ADC_choose_port_cfg@ADC:
  2996                           	callstack 0
  2997   000011                     ADC_get_value_from_reg@AnalogValue:
  2998                           	callstack 0
  2999   000011                     ___lwdiv@dividend:
  3000                           	callstack 0
  3001   000011                     ___lwmod@dividend:
  3002                           	callstack 0
  3003   000011                     fputc@c:
  3004                           	callstack 0
  3005   000011                     ___fladd@b:
  3006                           	callstack 0
  3007   000011                     ___xxtofl@val:
  3008                           	callstack 0
  3009   000011                     ??_ADC_Pin_Input_switch:
  3010                           
  3011                           ; 1 bytes @ 0x10
  3012   000011                     	ds	1
  3013   000012                     gpio_pin_write_direction@direction:
  3014                           	callstack 0
  3015   000012                     gpio_pin_write_logic@logic_status:
  3016                           	callstack 0
  3017   000012                     ??_gpio_pin_direction_intialize:
  3018   000012                     ??_Module_INTERRUPT_ENABLE:
  3019   000012                     ??_Module_INTERRUPT_ClEAR_FLAG:
  3020   000012                     ??_ADC_select_acquisition_time:
  3021   000012                     ??_ADC_select_Clk_Conversion:
  3022   000012                     ??_ADC_choose_port_cfg:
  3023   000012                     ??_ADC_get_value_from_reg:
  3024                           
  3025                           ; 1 bytes @ 0x11
  3026   000012                     	ds	1
  3027   000013                     ADC_Pin_Input_switch@UsedChannel:
  3028                           	callstack 0
  3029   000013                     fputc@fp:
  3030                           	callstack 0
  3031   000013                     ___lwdiv@divisor:
  3032                           	callstack 0
  3033   000013                     ___lwmod@divisor:
  3034                           	callstack 0
  3035   000013                     ??_gpio_pin_write_direction:
  3036   000013                     ??_gpio_pin_write_logic:
  3037                           
  3038                           ; 1 bytes @ 0x12
  3039   000013                     	ds	1
  3040   000014                     hal_adc_read_analog_pin@ADC:
  3041                           	callstack 0
  3042   000014                     ??_fputc:
  3043                           
  3044                           ; 1 bytes @ 0x13
  3045   000014                     	ds	1
  3046   000015                     hal_adc_read_analog_pin@UsedChannel:
  3047                           	callstack 0
  3048   000015                     ___lwmod@counter:
  3049                           	callstack 0
  3050   000015                     ___lwdiv@quotient:
  3051                           	callstack 0
  3052   000015                     ___fladd@a:
  3053                           	callstack 0
  3054   000015                     ??___xxtofl:
  3055                           
  3056                           ; 1 bytes @ 0x14
  3057   000015                     	ds	1
  3058   000016                     Module_INTERRUPT_ENABLE@Reg:
  3059                           	callstack 0
  3060   000016                     hal_adc_read_analog_pin@AnalogValue:
  3061                           	callstack 0
  3062                           
  3063                           ; 1 bytes @ 0x15
  3064   000016                     	ds	1
  3065   000017                     gpio_pin_direction_intialize@ret:
  3066                           	callstack 0
  3067   000017                     Module_INTERRUPT_ClEAR_FLAG@Reg:
  3068                           	callstack 0
  3069   000017                     ___lwdiv@counter:
  3070                           	callstack 0
  3071   000017                     ??_hal_adc_read_analog_pin:
  3072                           
  3073                           ; 1 bytes @ 0x16
  3074   000017                     	ds	1
  3075   000018                     gpio_pin_write_direction@ret:
  3076                           	callstack 0
  3077   000018                     gpio_pin_write_logic@ret:
  3078                           	callstack 0
  3079   000018                     hal_adc_init@ADC:
  3080                           	callstack 0
  3081   000018                     
  3082                           ; 1 bytes @ 0x17
  3083   000018                     	ds	1
  3084   000019                     ?_vfpfcnvrt:
  3085                           	callstack 0
  3086   000019                     send_byte@lcd:
  3087                           	callstack 0
  3088   000019                     send_enable_signal@lcd:
  3089                           	callstack 0
  3090   000019                     led_initialize@led_config:
  3091                           	callstack 0
  3092   000019                     hal_adc_init@priority:
  3093                           	callstack 0
  3094   000019                     ___xxtofl@sign:
  3095                           	callstack 0
  3096   000019                     vfpfcnvrt@fp:
  3097                           	callstack 0
  3098   000019                     ??___fladd:
  3099                           
  3100                           ; 1 bytes @ 0x18
  3101   000019                     	ds	1
  3102   00001A                     send_byte@command:
  3103                           	callstack 0
  3104   00001A                     send_enable_signal@ret:
  3105                           	callstack 0
  3106   00001A                     ___xxtofl@exp:
  3107                           	callstack 0
  3108   00001A                     vfpfcnvrt@fmt:
  3109                           	callstack 0
  3110   00001A                     ??_led_initialize:
  3111                           
  3112                           ; 1 bytes @ 0x19
  3113   00001A                     	ds	1
  3114   00001B                     led_initialize@logic_state:
  3115                           	callstack 0
  3116   00001B                     vfpfcnvrt@ap:
  3117                           	callstack 0
  3118   00001B                     ___xxtofl@arg:
  3119                           	callstack 0
  3120   00001B                     ??_send_byte:
  3121                           
  3122                           ; 1 bytes @ 0x1A
  3123   00001B                     	ds	1
  3124   00001C                     led_initialize@ret:
  3125                           	callstack 0
  3126   00001C                     ??_vfpfcnvrt:
  3127                           
  3128                           ; 1 bytes @ 0x1B
  3129   00001C                     	ds	1
  3130   00001D                     send_byte@ret:
  3131                           	callstack 0
  3132   00001D                     led_initialize@led:
  3133                           	callstack 0
  3134   00001D                     ___fladd@signs:
  3135                           	callstack 0
  3136   00001D                     vfpfcnvrt@cnt:
  3137                           	callstack 0
  3138                           
  3139                           ; 2 bytes @ 0x1C
  3140   00001D                     	ds	1
  3141   00001E                     send_byte@wire:
  3142                           	callstack 0
  3143   00001E                     ___fladd@aexp:
  3144                           	callstack 0
  3145                           
  3146                           ; 1 bytes @ 0x1D
  3147   00001E                     	ds	1
  3148   00001F                     lcd_send_command@lcd:
  3149                           	callstack 0
  3150   00001F                     lcd_print_chr@lcd:
  3151                           	callstack 0
  3152   00001F                     ___fladd@bexp:
  3153                           	callstack 0
  3154   00001F                     vfpfcnvrt@convarg:
  3155                           	callstack 0
  3156                           
  3157                           ; 4 bytes @ 0x1E
  3158   00001F                     	ds	1
  3159   000020                     lcd_send_command@command:
  3160                           	callstack 0
  3161   000020                     lcd_print_chr@character:
  3162                           	callstack 0
  3163   000020                     ___fladd@grs:
  3164                           	callstack 0
  3165                           
  3166                           ; 1 bytes @ 0x1F
  3167   000020                     	ds	1
  3168   000021                     ?___flsub:
  3169                           	callstack 0
  3170   000021                     lcd_send_command@ret:
  3171                           	callstack 0
  3172   000021                     lcd_print_chr@ret:
  3173                           	callstack 0
  3174   000021                     ___flsub@b:
  3175                           	callstack 0
  3176   000021                     
  3177                           ; 1 bytes @ 0x20
  3178   000021                     	ds	1
  3179   000022                     lcd_inintialize@lcd:
  3180                           	callstack 0
  3181   000022                     lcd_clear_display@lcd:
  3182                           	callstack 0
  3183   000022                     lcd_print_string@lcd:
  3184                           	callstack 0
  3185   000022                     lcd_set_cursor@lcd:
  3186                           	callstack 0
  3187                           
  3188                           ; 1 bytes @ 0x21
  3189   000022                     	ds	1
  3190   000023                     lcd_set_cursor@row:
  3191                           	callstack 0
  3192   000023                     vfpfcnvrt@cp:
  3193                           	callstack 0
  3194   000023                     lcd_print_string@string:
  3195                           	callstack 0
  3196   000023                     ??_lcd_inintialize:
  3197   000023                     
  3198                           ; 1 bytes @ 0x22
  3199   000023                     	ds	1
  3200   000024                     lcd_inintialize@wire:
  3201                           	callstack 0
  3202   000024                     lcd_set_cursor@col:
  3203                           	callstack 0
  3204   000024                     vfpfcnvrt@c:
  3205                           	callstack 0
  3206                           
  3207                           ; 1 bytes @ 0x23
  3208   000024                     	ds	1
  3209   000025                     ?_vfprintf:
  3210                           	callstack 0
  3211   000025                     lcd_inintialize@ret:
  3212                           	callstack 0
  3213   000025                     lcd_print_string@ret:
  3214                           	callstack 0
  3215   000025                     lcd_set_cursor@ret:
  3216                           	callstack 0
  3217   000025                     vfprintf@fp:
  3218                           	callstack 0
  3219   000025                     ___flsub@a:
  3220                           	callstack 0
  3221   000025                     
  3222                           ; 1 bytes @ 0x24
  3223   000025                     	ds	1
  3224   000026                     lcd_print_string_pos@lcd:
  3225                           	callstack 0
  3226   000026                     ecu_layer_initialize@ret:
  3227                           	callstack 0
  3228   000026                     vfprintf@fmt:
  3229                           	callstack 0
  3230   000026                     
  3231                           ; 1 bytes @ 0x25
  3232   000026                     	ds	1
  3233   000027                     lcd_print_string_pos@row:
  3234                           	callstack 0
  3235   000027                     vfprintf@ap:
  3236                           	callstack 0
  3237   000027                     
  3238                           ; 1 bytes @ 0x26
  3239   000027                     	ds	1
  3240   000028                     lcd_print_string_pos@col:
  3241                           	callstack 0
  3242   000028                     vfprintf@cfmt:
  3243                           	callstack 0
  3244   000028                     
  3245                           ; 1 bytes @ 0x27
  3246   000028                     	ds	1
  3247   000029                     ?_snprintf:
  3248                           	callstack 0
  3249   000029                     ?___flmul:
  3250                           	callstack 0
  3251   000029                     lcd_print_string_pos@string:
  3252                           	callstack 0
  3253   000029                     snprintf@s:
  3254                           	callstack 0
  3255   000029                     ___flmul@b:
  3256                           	callstack 0
  3257   000029                     
  3258                           ; 1 bytes @ 0x28
  3259   000029                     	ds	1
  3260   00002A                     snprintf@n:
  3261                           	callstack 0
  3262   00002A                     
  3263                           ; 1 bytes @ 0x29
  3264   00002A                     	ds	2
  3265   00002C                     snprintf@fmt:
  3266                           	callstack 0
  3267                           
  3268                           ; 1 bytes @ 0x2B
  3269   00002C                     	ds	1
  3270   00002D                     ___flmul@a:
  3271                           	callstack 0
  3272                           
  3273                           ; 4 bytes @ 0x2C
  3274   00002D                     	ds	2
  3275   00002F                     ??_snprintf:
  3276                           
  3277                           ; 1 bytes @ 0x2E
  3278   00002F                     	ds	2
  3279   000031                     ??___flmul:
  3280                           
  3281                           ; 1 bytes @ 0x30
  3282   000031                     	ds	1
  3283   000032                     _snprintf$2377:
  3284                           	callstack 0
  3285                           
  3286                           ; 2 bytes @ 0x31
  3287   000032                     	ds	2
  3288   000034                     snprintf@ap:
  3289                           	callstack 0
  3290                           
  3291                           ; 1 bytes @ 0x33
  3292   000034                     	ds	1
  3293   000035                     ___flmul@sign:
  3294                           	callstack 0
  3295   000035                     snprintf@cnt:
  3296                           	callstack 0
  3297                           
  3298                           ; 2 bytes @ 0x34
  3299   000035                     	ds	1
  3300   000036                     ___flmul@grs:
  3301                           	callstack 0
  3302                           
  3303                           ; 4 bytes @ 0x35
  3304   000036                     	ds	1
  3305   000037                     snprintf@f:
  3306                           	callstack 0
  3307                           
  3308                           ; 11 bytes @ 0x36
  3309   000037                     	ds	3
  3310   00003A                     ___flmul@aexp:
  3311                           	callstack 0
  3312                           
  3313                           ; 1 bytes @ 0x39
  3314   00003A                     	ds	1
  3315   00003B                     ___flmul@bexp:
  3316                           	callstack 0
  3317                           
  3318                           ; 1 bytes @ 0x3A
  3319   00003B                     	ds	1
  3320   00003C                     ___flmul@prod:
  3321                           	callstack 0
  3322                           
  3323                           ; 4 bytes @ 0x3B
  3324   00003C                     	ds	4
  3325   000040                     ___flmul@temp:
  3326                           	callstack 0
  3327                           
  3328                           ; 2 bytes @ 0x3F
  3329   000040                     	ds	2
  3330   000042                     ?___fldiv:
  3331                           	callstack 0
  3332   000042                     ?___fltol:
  3333                           	callstack 0
  3334   000042                     convert_uint8_to_str@str:
  3335                           	callstack 0
  3336   000042                     ___fltol@f1:
  3337                           	callstack 0
  3338   000042                     ___fldiv@b:
  3339                           	callstack 0
  3340                           
  3341                           ; 4 bytes @ 0x41
  3342   000042                     	ds	1
  3343   000043                     convert_uint8_to_str@value:
  3344                           	callstack 0
  3345   000043                     
  3346                           ; 1 bytes @ 0x42
  3347   000043                     	ds	3
  3348   000046                     ___fldiv@a:
  3349                           	callstack 0
  3350   000046                     ??___fltol:
  3351                           
  3352                           ; 1 bytes @ 0x45
  3353   000046                     	ds	4
  3354   00004A                     ___fltol@sign1:
  3355                           	callstack 0
  3356                           
  3357                           ; 1 bytes @ 0x49
  3358   00004A                     	ds	1
  3359   00004B                     ___fltol@exp1:
  3360                           	callstack 0
  3361                           
  3362                           ; 1 bytes @ 0x4A
  3363   00004B                     	ds	1
  3364                           
  3365 ;;
  3366 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3367 ;;
  3368 ;; *************** function _main *****************
  3369 ;; Defined at:
  3370 ;;		line 29 in file "app.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;		None
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  2  824[None  ] int 
  3377 ;; Registers used:
  3378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;Total ram usage:        2 bytes
  3389 ;; Hardware stack levels required when called: 11
  3390 ;; This function calls:
  3391 ;;		___fldiv
  3392 ;;		___flmul
  3393 ;;		___flsub
  3394 ;;		___fltol
  3395 ;;		___xxtofl
  3396 ;;		_application_instiallize
  3397 ;;		_convert_uint8_to_str
  3398 ;;		_hal_adc_read_analog_pin
  3399 ;;		_lcd_clear_display
  3400 ;;		_lcd_print_chr
  3401 ;;		_lcd_print_string
  3402 ;;		_lcd_print_string_pos
  3403 ;; This function is called by:
  3404 ;;		Startup code after reset
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text0
  3409   00220A                     __ptext0:
  3410                           	callstack 0
  3411   00220A                     _main:
  3412                           	callstack 20
  3413   00220A                     
  3414                           ;app.c: 30:     ret = application_instiallize();
  3415   00220A  EC5E  F01A         	call	_application_instiallize	;wreg free
  3416   00220E  6E6B               	movwf	_ret^0,c
  3417   002210                     l5836:
  3418                           
  3419                           ;app.c: 33:         hal_adc_read_analog_pin(&(adc_1), ADC_AN0, &(Value));
  3420   002210  0EC4               	movlw	low _adc_1
  3421   002212  6E14               	movwf	hal_adc_read_analog_pin@ADC^0,c
  3422   002214  0E00               	movlw	0
  3423   002216  6E15               	movwf	hal_adc_read_analog_pin@UsedChannel^0,c
  3424   002218  0E65               	movlw	low _Value
  3425   00221A  6E16               	movwf	hal_adc_read_analog_pin@AnalogValue^0,c
  3426   00221C  ECC3  F017         	call	_hal_adc_read_analog_pin	;wreg free
  3427   002220                     
  3428                           ;app.c: 35:         voltage = (float)Value * 4.77 / 1023.0;
  3429   002220  0ED7               	movlw	215
  3430   002222  6E2D               	movwf	___flmul@a^0,c
  3431   002224  0EA3               	movlw	163
  3432   002226  6E2E               	movwf	(___flmul@a+1)^0,c
  3433   002228  0E98               	movlw	152
  3434   00222A  6E2F               	movwf	(___flmul@a+2)^0,c
  3435   00222C  0E40               	movlw	64
  3436   00222E  6E30               	movwf	(___flmul@a+3)^0,c
  3437   002230  C065  F011         	movff	_Value,___xxtofl@val
  3438   002234  C066  F012         	movff	_Value+1,___xxtofl@val+1
  3439   002238  6A13               	clrf	(___xxtofl@val+2)^0,c
  3440   00223A  6A14               	clrf	(___xxtofl@val+3)^0,c
  3441   00223C  0E00               	movlw	0
  3442   00223E  EC5D  F00F         	call	___xxtofl
  3443   002242  C011  F029         	movff	?___xxtofl,___flmul@b
  3444   002246  C012  F02A         	movff	?___xxtofl+1,___flmul@b+1
  3445   00224A  C013  F02B         	movff	?___xxtofl+2,___flmul@b+2
  3446   00224E  C014  F02C         	movff	?___xxtofl+3,___flmul@b+3
  3447   002252  EC64  F00A         	call	___flmul	;wreg free
  3448   002256  C029  F042         	movff	?___flmul,___fldiv@b
  3449   00225A  C02A  F043         	movff	?___flmul+1,___fldiv@b+1
  3450   00225E  C02B  F044         	movff	?___flmul+2,___fldiv@b+2
  3451   002262  C02C  F045         	movff	?___flmul+3,___fldiv@b+3
  3452   002266  0E00               	movlw	0
  3453   002268  6E46               	movwf	___fldiv@a^0,c
  3454   00226A  0EC0               	movlw	192
  3455   00226C  6E47               	movwf	(___fldiv@a+1)^0,c
  3456   00226E  0E7F               	movlw	127
  3457   002270  6E48               	movwf	(___fldiv@a+2)^0,c
  3458   002272  0E44               	movlw	68
  3459   002274  6E49               	movwf	(___fldiv@a+3)^0,c
  3460   002276  EC77  F00C         	call	___fldiv	;wreg free
  3461   00227A  C042  F0EA         	movff	?___fldiv,_voltage
  3462   00227E  C043  F0EB         	movff	?___fldiv+1,_voltage+1
  3463   002282  C044  F0EC         	movff	?___fldiv+2,_voltage+2
  3464   002286  C045  F0ED         	movff	?___fldiv+3,_voltage+3
  3465                           
  3466                           ;app.c: 36:         voltage_a = (uint8)voltage;
  3467   00228A  C0EA  F042         	movff	_voltage,___fltol@f1
  3468   00228E  C0EB  F043         	movff	_voltage+1,___fltol@f1+1
  3469   002292  C0EC  F044         	movff	_voltage+2,___fltol@f1+2
  3470   002296  C0ED  F045         	movff	_voltage+3,___fltol@f1+3
  3471   00229A  ECE5  F012         	call	___fltol	;wreg free
  3472   00229E  5042               	movf	?___fltol^0,w,c
  3473   0022A0  6E5C               	movwf	_voltage_a^0,c
  3474   0022A2                     
  3475                           ;app.c: 37:         voltage_b = (uint8)((voltage - (float)voltage_a)*100.0);
  3476   0022A2  0E00               	movlw	0
  3477   0022A4  6E2D               	movwf	___flmul@a^0,c
  3478   0022A6  0E00               	movlw	0
  3479   0022A8  6E2E               	movwf	(___flmul@a+1)^0,c
  3480   0022AA  0EC8               	movlw	200
  3481   0022AC  6E2F               	movwf	(___flmul@a+2)^0,c
  3482   0022AE  0E42               	movlw	66
  3483   0022B0  6E30               	movwf	(___flmul@a+3)^0,c
  3484   0022B2  505C               	movf	_voltage_a^0,w,c
  3485   0022B4  6E11               	movwf	___xxtofl@val^0,c
  3486   0022B6  6A12               	clrf	(___xxtofl@val+1)^0,c
  3487   0022B8  6A13               	clrf	(___xxtofl@val+2)^0,c
  3488   0022BA  6A14               	clrf	(___xxtofl@val+3)^0,c
  3489   0022BC  0E00               	movlw	0
  3490   0022BE  EC5D  F00F         	call	___xxtofl
  3491   0022C2  C011  F025         	movff	?___xxtofl,___flsub@a
  3492   0022C6  C012  F026         	movff	?___xxtofl+1,___flsub@a+1
  3493   0022CA  C013  F027         	movff	?___xxtofl+2,___flsub@a+2
  3494   0022CE  C014  F028         	movff	?___xxtofl+3,___flsub@a+3
  3495   0022D2  C0EA  F021         	movff	_voltage,___flsub@b
  3496   0022D6  C0EB  F022         	movff	_voltage+1,___flsub@b+1
  3497   0022DA  C0EC  F023         	movff	_voltage+2,___flsub@b+2
  3498   0022DE  C0ED  F024         	movff	_voltage+3,___flsub@b+3
  3499   0022E2  EC91  F018         	call	___flsub	;wreg free
  3500   0022E6  C021  F029         	movff	?___flsub,___flmul@b
  3501   0022EA  C022  F02A         	movff	?___flsub+1,___flmul@b+1
  3502   0022EE  C023  F02B         	movff	?___flsub+2,___flmul@b+2
  3503   0022F2  C024  F02C         	movff	?___flsub+3,___flmul@b+3
  3504   0022F6  EC64  F00A         	call	___flmul	;wreg free
  3505   0022FA  C029  F042         	movff	?___flmul,___fltol@f1
  3506   0022FE  C02A  F043         	movff	?___flmul+1,___fltol@f1+1
  3507   002302  C02B  F044         	movff	?___flmul+2,___fltol@f1+2
  3508   002306  C02C  F045         	movff	?___flmul+3,___fltol@f1+3
  3509   00230A  ECE5  F012         	call	___fltol	;wreg free
  3510   00230E  5042               	movf	?___fltol^0,w,c
  3511   002310  6E5B               	movwf	_voltage_b^0,c
  3512   002312                     
  3513                           ;app.c: 39:         lcd_print_string_pos(&(view), 0, 0, "Voltage =  ");
  3514   002312  0EBA               	movlw	low _view
  3515   002314  6E26               	movwf	lcd_print_string_pos@lcd^0,c
  3516   002316  0E00               	movlw	0
  3517   002318  6E27               	movwf	lcd_print_string_pos@row^0,c
  3518   00231A  0E00               	movlw	0
  3519   00231C  6E28               	movwf	lcd_print_string_pos@col^0,c
  3520   00231E  0E01               	movlw	low STR_4
  3521   002320  6E29               	movwf	lcd_print_string_pos@string^0,c
  3522   002322  EC69  F017         	call	_lcd_print_string_pos	;wreg free
  3523   002326                     
  3524                           ;app.c: 41:         convert_uint8_to_str(voltage_a , pa);
  3525   002326  0E67               	movlw	low _pa
  3526   002328  6E42               	movwf	convert_uint8_to_str@str^0,c
  3527   00232A  505C               	movf	_voltage_a^0,w,c
  3528   00232C  ECA8  F019         	call	_convert_uint8_to_str
  3529   002330                     
  3530                           ;app.c: 42:         lcd_print_string(&(view), pa);
  3531   002330  0EBA               	movlw	low _view
  3532   002332  6E22               	movwf	lcd_print_string@lcd^0,c
  3533   002334  0E67               	movlw	low _pa
  3534   002336  6E23               	movwf	lcd_print_string@string^0,c
  3535   002338  6A24               	clrf	(lcd_print_string@string+1)^0,c
  3536   00233A  ECDB  F015         	call	_lcd_print_string	;wreg free
  3537   00233E                     
  3538                           ;app.c: 43:         lcd_print_chr(&(view), '.');
  3539   00233E  0EBA               	movlw	low _view
  3540   002340  6E1F               	movwf	lcd_print_chr@lcd^0,c
  3541   002342  0E2E               	movlw	46
  3542   002344  6E20               	movwf	lcd_print_chr@character^0,c
  3543   002346  ECF7  F018         	call	_lcd_print_chr	;wreg free
  3544   00234A                     
  3545                           ;app.c: 44:        convert_uint8_to_str(voltage_b , pb);
  3546   00234A  0E67               	movlw	low _pb
  3547   00234C  6E42               	movwf	convert_uint8_to_str@str^0,c
  3548   00234E  505B               	movf	_voltage_b^0,w,c
  3549   002350  ECA8  F019         	call	_convert_uint8_to_str
  3550   002354                     
  3551                           ;app.c: 45:         lcd_print_string(&(view), pb);
  3552   002354  0EBA               	movlw	low _view
  3553   002356  6E22               	movwf	lcd_print_string@lcd^0,c
  3554   002358  0E67               	movlw	low _pb
  3555   00235A  6E23               	movwf	lcd_print_string@string^0,c
  3556   00235C  6A24               	clrf	(lcd_print_string@string+1)^0,c
  3557   00235E  ECDB  F015         	call	_lcd_print_string	;wreg free
  3558   002362                     
  3559                           ;app.c: 47:         _delay((unsigned long)((200)*(8000000UL/4000.0)));
  3560   002362  0E03               	movlw	3
  3561   002364  0100               	movlb	0	; () banked
  3562   002366  6FFF               	movwf	(??_main+1)& (0+255),b
  3563   002368  0E08               	movlw	8
  3564   00236A  6FFE               	movwf	??_main& (0+255),b
  3565   00236C  0E77               	movlw	119
  3566   00236E                     u5877:
  3567   00236E  2EE8               	decfsz	wreg,f,c
  3568   002370  D7FE               	bra	u5877
  3569   002372  2FFE               	decfsz	??_main& (0+255),f,b
  3570   002374  D7FC               	bra	u5877
  3571   002376  2FFF               	decfsz	(??_main+1)& (0+255),f,b
  3572   002378  D7FA               	bra	u5877
  3573   00237A                     
  3574                           ;app.c: 48:         lcd_clear_display(&(view));
  3575   00237A  0EBA               	movlw	low _view
  3576   00237C  6E22               	movwf	lcd_clear_display@lcd^0,c
  3577   00237E  EC0F  F01A         	call	_lcd_clear_display	;wreg free
  3578   002382  EF08  F011         	goto	l5836
  3579   002386  EF07  F000         	goto	start
  3580   00238A                     __end_of_main:
  3581                           	callstack 0
  3582                           
  3583 ;; *************** function _lcd_print_string_pos *****************
  3584 ;; Defined at:
  3585 ;;		line 128 in file "ECU_Layer/Lcd/lcd.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  lcd             1   37[COMRAM] PTR const struct .
  3588 ;;		 -> view(10), 
  3589 ;;  row             1   38[COMRAM] unsigned char 
  3590 ;;  col             1   39[COMRAM] unsigned char 
  3591 ;;  string          1   40[COMRAM] PTR unsigned char 
  3592 ;;		 -> STR_4(12), 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  ret             1    0        unsigned char 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      unsigned char 
  3597 ;; Registers used:
  3598 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3604 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;Total ram usage:        4 bytes
  3609 ;; Hardware stack levels used: 1
  3610 ;; Hardware stack levels required when called: 9
  3611 ;; This function calls:
  3612 ;;		_lcd_print_string
  3613 ;;		_lcd_set_cursor
  3614 ;; This function is called by:
  3615 ;;		_main
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           	psect	text1
  3620   002ED2                     __ptext1:
  3621                           	callstack 0
  3622   002ED2                     _lcd_print_string_pos:
  3623                           	callstack 21
  3624   002ED2                     
  3625                           ;ECU_Layer/Lcd/lcd.c: 130:     if((lcd == ((void*)0)) || (row > 2) || (col>20)){
  3626   002ED2  5026               	movf	lcd_print_string_pos@lcd^0,w,c
  3627   002ED4  B4D8               	btfsc	status,2,c
  3628   002ED6  EF6F  F017         	goto	u4001
  3629   002EDA  EF71  F017         	goto	u4000
  3630   002EDE                     u4001:
  3631   002EDE  EF81  F017         	goto	l178
  3632   002EE2                     u4000:
  3633   002EE2  0E03               	movlw	3
  3634   002EE4  6027               	cpfslt	lcd_print_string_pos@row^0,c
  3635   002EE6  EF77  F017         	goto	u4011
  3636   002EEA  EF79  F017         	goto	u4010
  3637   002EEE                     u4011:
  3638   002EEE  EF81  F017         	goto	l178
  3639   002EF2                     u4010:
  3640   002EF2  0E14               	movlw	20
  3641   002EF4  6428               	cpfsgt	lcd_print_string_pos@col^0,c
  3642   002EF6  EF7F  F017         	goto	u4021
  3643   002EFA  EF81  F017         	goto	u4020
  3644   002EFE                     u4021:
  3645   002EFE  EF83  F017         	goto	l4594
  3646   002F02                     u4020:
  3647   002F02                     l178:
  3648                           
  3649                           ;ECU_Layer/Lcd/lcd.c: 132:     }else{
  3650   002F02  EF95  F017         	goto	l180
  3651   002F06                     l4594:
  3652   002F06  C026  F022         	movff	lcd_print_string_pos@lcd,lcd_set_cursor@lcd
  3653   002F0A  C027  F023         	movff	lcd_print_string_pos@row,lcd_set_cursor@row
  3654   002F0E  C028  F024         	movff	lcd_print_string_pos@col,lcd_set_cursor@col
  3655   002F12  EC2E  F015         	call	_lcd_set_cursor	;wreg free
  3656   002F16  C026  F022         	movff	lcd_print_string_pos@lcd,lcd_print_string@lcd
  3657   002F1A  C029  F023         	movff	lcd_print_string_pos@string,lcd_print_string@string
  3658   002F1E  5023               	movf	lcd_print_string@string^0,w,c
  3659   002F20  A4D8               	btfss	status,2,c
  3660   002F22  0E10               	movlw	high __smallconst
  3661   002F24  6E24               	movwf	(lcd_print_string@string+1)^0,c
  3662   002F26  ECDB  F015         	call	_lcd_print_string	;wreg free
  3663   002F2A                     l180:
  3664   002F2A  0012               	return		;funcret
  3665   002F2C                     __end_of_lcd_print_string_pos:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _lcd_set_cursor *****************
  3669 ;; Defined at:
  3670 ;;		line 224 in file "ECU_Layer/Lcd/lcd.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  lcd             1   33[COMRAM] PTR const struct .
  3673 ;;		 -> view(10), 
  3674 ;;  row             1   34[COMRAM] unsigned char 
  3675 ;;  col             1   35[COMRAM] unsigned char 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  ret             1   36[COMRAM] unsigned char 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      unsigned char 
  3680 ;; Registers used:
  3681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3687 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;Total ram usage:        4 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 8
  3694 ;; This function calls:
  3695 ;;		_lcd_send_command
  3696 ;; This function is called by:
  3697 ;;		_lcd_print_string_pos
  3698 ;;		_lcd_print_chr_pos
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text2
  3703   002A5C                     __ptext2:
  3704                           	callstack 0
  3705   002A5C                     _lcd_set_cursor:
  3706                           	callstack 21
  3707   002A5C                     
  3708                           ;ECU_Layer/Lcd/lcd.c: 226:     if((lcd == ((void*)0)) || (row > 2) || (col>20)){
  3709   002A5C  5022               	movf	lcd_set_cursor@lcd^0,w,c
  3710   002A5E  B4D8               	btfsc	status,2,c
  3711   002A60  EF34  F015         	goto	u3431
  3712   002A64  EF36  F015         	goto	u3430
  3713   002A68                     u3431:
  3714   002A68  EF46  F015         	goto	l228
  3715   002A6C                     u3430:
  3716   002A6C  0E03               	movlw	3
  3717   002A6E  6023               	cpfslt	lcd_set_cursor@row^0,c
  3718   002A70  EF3C  F015         	goto	u3441
  3719   002A74  EF3E  F015         	goto	u3440
  3720   002A78                     u3441:
  3721   002A78  EF46  F015         	goto	l228
  3722   002A7C                     u3440:
  3723   002A7C  0E14               	movlw	20
  3724   002A7E  6424               	cpfsgt	lcd_set_cursor@col^0,c
  3725   002A80  EF44  F015         	goto	u3451
  3726   002A84  EF46  F015         	goto	u3450
  3727   002A88                     u3451:
  3728   002A88  EF71  F015         	goto	l4262
  3729   002A8C                     u3450:
  3730   002A8C                     l228:
  3731                           
  3732                           ;ECU_Layer/Lcd/lcd.c: 227:         ret = (Std_RetuenType)0x00;
  3733   002A8C  6A25               	clrf	lcd_set_cursor@ret^0,c
  3734                           
  3735                           ;ECU_Layer/Lcd/lcd.c: 228:     }else{
  3736   002A8E  EF84  F015         	goto	l4264
  3737   002A92                     l4254:
  3738   002A92  C022  F01F         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  3739   002A96  5024               	movf	lcd_set_cursor@col^0,w,c
  3740   002A98  0F80               	addlw	128
  3741   002A9A  6E20               	movwf	lcd_send_command@command^0,c
  3742   002A9C  EC17  F019         	call	_lcd_send_command	;wreg free
  3743   002AA0  6E25               	movwf	lcd_set_cursor@ret^0,c
  3744   002AA2  EF84  F015         	goto	l4264
  3745   002AA6                     l4256:
  3746   002AA6  C022  F01F         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  3747   002AAA  5024               	movf	lcd_set_cursor@col^0,w,c
  3748   002AAC  0FC0               	addlw	192
  3749   002AAE  6E20               	movwf	lcd_send_command@command^0,c
  3750   002AB0  EC17  F019         	call	_lcd_send_command	;wreg free
  3751   002AB4  6E25               	movwf	lcd_set_cursor@ret^0,c
  3752   002AB6  EF84  F015         	goto	l4264
  3753   002ABA                     l4258:
  3754   002ABA  C022  F01F         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  3755   002ABE  5024               	movf	lcd_set_cursor@col^0,w,c
  3756   002AC0  0F94               	addlw	148
  3757   002AC2  6E20               	movwf	lcd_send_command@command^0,c
  3758   002AC4  EC17  F019         	call	_lcd_send_command	;wreg free
  3759   002AC8  6E25               	movwf	lcd_set_cursor@ret^0,c
  3760   002ACA  EF84  F015         	goto	l4264
  3761   002ACE                     l4260:
  3762   002ACE  C022  F01F         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
  3763   002AD2  5024               	movf	lcd_set_cursor@col^0,w,c
  3764   002AD4  0FD4               	addlw	212
  3765   002AD6  6E20               	movwf	lcd_send_command@command^0,c
  3766   002AD8  EC17  F019         	call	_lcd_send_command	;wreg free
  3767   002ADC  6E25               	movwf	lcd_set_cursor@ret^0,c
  3768   002ADE  EF84  F015         	goto	l4264
  3769   002AE2                     l4262:
  3770   002AE2  5023               	movf	lcd_set_cursor@row^0,w,c
  3771                           
  3772                           ; Switch size 1, requested type "simple"
  3773                           ; Number of cases is 4, Range of values is 0 to 3
  3774                           ; switch strategies available:
  3775                           ; Name         Instructions Cycles
  3776                           ; simple_byte           13     7 (average)
  3777                           ;	Chosen strategy is simple_byte
  3778   002AE4  0A00               	xorlw	0	; case 0
  3779   002AE6  B4D8               	btfsc	status,2,c
  3780   002AE8  EF49  F015         	goto	l4254
  3781   002AEC  0A01               	xorlw	1	; case 1
  3782   002AEE  B4D8               	btfsc	status,2,c
  3783   002AF0  EF53  F015         	goto	l4256
  3784   002AF4  0A03               	xorlw	3	; case 2
  3785   002AF6  B4D8               	btfsc	status,2,c
  3786   002AF8  EF5D  F015         	goto	l4258
  3787   002AFC  0A01               	xorlw	1	; case 3
  3788   002AFE  B4D8               	btfsc	status,2,c
  3789   002B00  EF67  F015         	goto	l4260
  3790   002B04  EF46  F015         	goto	l228
  3791   002B08                     l4264:
  3792                           
  3793                           ;ECU_Layer/Lcd/lcd.c: 237:     return ret;
  3794   002B08  5025               	movf	lcd_set_cursor@ret^0,w,c
  3795   002B0A  0012               	return		;funcret
  3796   002B0C                     __end_of_lcd_set_cursor:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function _lcd_print_string *****************
  3800 ;; Defined at:
  3801 ;;		line 115 in file "ECU_Layer/Lcd/lcd.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  lcd             1   33[COMRAM] PTR const struct .
  3804 ;;		 -> view(10), 
  3805 ;;  string          2   34[COMRAM] PTR unsigned char 
  3806 ;;		 -> pb(0), pa(0), STR_4(12), 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  ret             1   36[COMRAM] unsigned char 
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  1    wreg      unsigned char 
  3811 ;; Registers used:
  3812 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3818 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;Total ram usage:        4 bytes
  3823 ;; Hardware stack levels used: 1
  3824 ;; Hardware stack levels required when called: 8
  3825 ;; This function calls:
  3826 ;;		_lcd_print_chr
  3827 ;; This function is called by:
  3828 ;;		_lcd_print_string_pos
  3829 ;;		_main
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text3
  3834   002BB6                     __ptext3:
  3835                           	callstack 0
  3836   002BB6                     _lcd_print_string:
  3837                           	callstack 21
  3838   002BB6                     
  3839                           ;ECU_Layer/Lcd/lcd.c: 116:     Std_RetuenType ret = (Std_RetuenType)0x00;
  3840   002BB6  6A25               	clrf	lcd_print_string@ret^0,c
  3841   002BB8                     
  3842                           ;ECU_Layer/Lcd/lcd.c: 117:     if((lcd == ((void*)0)) || (string == ((void*)0))){
  3843   002BB8  5022               	movf	lcd_print_string@lcd^0,w,c
  3844   002BBA  B4D8               	btfsc	status,2,c
  3845   002BBC  EFE2  F015         	goto	u3461
  3846   002BC0  EFE4  F015         	goto	u3460
  3847   002BC4                     u3461:
  3848   002BC4  EFED  F015         	goto	l168
  3849   002BC8                     u3460:
  3850   002BC8  5023               	movf	lcd_print_string@string^0,w,c
  3851   002BCA  1024               	iorwf	(lcd_print_string@string+1)^0,w,c
  3852   002BCC  A4D8               	btfss	status,2,c
  3853   002BCE  EFEB  F015         	goto	u3471
  3854   002BD2  EFED  F015         	goto	u3470
  3855   002BD6                     u3471:
  3856   002BD6  EF08  F016         	goto	l4278
  3857   002BDA                     u3470:
  3858   002BDA                     l168:
  3859                           
  3860                           ;ECU_Layer/Lcd/lcd.c: 118:         ret = (Std_RetuenType)0x00;
  3861   002BDA  6A25               	clrf	lcd_print_string@ret^0,c
  3862                           
  3863                           ;ECU_Layer/Lcd/lcd.c: 119:     }else{
  3864   002BDC  EF21  F016         	goto	l4280
  3865   002BE0                     l4274:
  3866                           
  3867                           ;ECU_Layer/Lcd/lcd.c: 121:             lcd_print_chr(lcd, *string);
  3868   002BE0  C022  F01F         	movff	lcd_print_string@lcd,lcd_print_chr@lcd
  3869   002BE4  C023  FFF6         	movff	lcd_print_string@string,tblptrl
  3870   002BE8  C024  FFF7         	movff	lcd_print_string@string+1,tblptrh
  3871   002BEC  0E00               	movlw	low (__smallconst shr (0+16))
  3872   002BEE  6EF8               	movwf	tblptru,c
  3873   002BF0  0E0F               	movlw	(high __ramtop+-1)
  3874   002BF2  64F7               	cpfsgt	tblptrh,c
  3875   002BF4  D003               	bra	u3487
  3876   002BF6  0008               	tblrd		*
  3877   002BF8  50F5               	movf	tablat,w,c
  3878   002BFA  D005               	bra	u3480
  3879   002BFC                     u3487:
  3880   002BFC  CFF6 FFE9          	movff	tblptrl,fsr0l
  3881   002C00  CFF7 FFEA          	movff	tblptrh,fsr0h
  3882   002C04  50EF               	movf	indf0,w,c
  3883   002C06                     u3480:
  3884   002C06  6E20               	movwf	lcd_print_chr@character^0,c
  3885   002C08  ECF7  F018         	call	_lcd_print_chr	;wreg free
  3886   002C0C                     
  3887                           ;ECU_Layer/Lcd/lcd.c: 122:             string++;
  3888   002C0C  4A23               	infsnz	lcd_print_string@string^0,f,c
  3889   002C0E  2A24               	incf	(lcd_print_string@string+1)^0,f,c
  3890   002C10                     l4278:
  3891                           
  3892                           ;ECU_Layer/Lcd/lcd.c: 120:         while(*string != '\0'){
  3893   002C10  C023  FFF6         	movff	lcd_print_string@string,tblptrl
  3894   002C14  C024  FFF7         	movff	lcd_print_string@string+1,tblptrh
  3895   002C18  0E00               	movlw	low (__smallconst shr (0+16))
  3896   002C1A  6EF8               	movwf	tblptru,c
  3897   002C1C  0E0F               	movlw	(high __ramtop+-1)
  3898   002C1E  64F7               	cpfsgt	tblptrh,c
  3899   002C20  D003               	bra	u3497
  3900   002C22  0008               	tblrd		*
  3901   002C24  50F5               	movf	tablat,w,c
  3902   002C26  D005               	bra	u3490
  3903   002C28                     u3497:
  3904   002C28  CFF6 FFE9          	movff	tblptrl,fsr0l
  3905   002C2C  CFF7 FFEA          	movff	tblptrh,fsr0h
  3906   002C30  50EF               	movf	indf0,w,c
  3907   002C32                     u3490:
  3908   002C32  0900               	iorlw	0
  3909   002C34  A4D8               	btfss	status,2,c
  3910   002C36  EF1F  F016         	goto	u3501
  3911   002C3A  EF21  F016         	goto	u3500
  3912   002C3E                     u3501:
  3913   002C3E  EFF0  F015         	goto	l4274
  3914   002C42                     u3500:
  3915   002C42                     l4280:
  3916                           
  3917                           ;ECU_Layer/Lcd/lcd.c: 125:     return ret;
  3918   002C42  5025               	movf	lcd_print_string@ret^0,w,c
  3919   002C44  0012               	return		;funcret
  3920   002C46                     __end_of_lcd_print_string:
  3921                           	callstack 0
  3922                           
  3923 ;; *************** function _lcd_print_chr *****************
  3924 ;; Defined at:
  3925 ;;		line 84 in file "ECU_Layer/Lcd/lcd.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  lcd             1   30[COMRAM] PTR const struct .
  3928 ;;		 -> view(10), 
  3929 ;;  character       1   31[COMRAM] unsigned char 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  ret             1   32[COMRAM] unsigned char 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      unsigned char 
  3934 ;; Registers used:
  3935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;Total ram usage:        3 bytes
  3946 ;; Hardware stack levels used: 1
  3947 ;; Hardware stack levels required when called: 7
  3948 ;; This function calls:
  3949 ;;		_gpio_pin_write_logic
  3950 ;;		_send_byte
  3951 ;;		_send_enable_signal
  3952 ;; This function is called by:
  3953 ;;		_lcd_print_string
  3954 ;;		_main
  3955 ;;		_lcd_print_chr_pos
  3956 ;;		_lcd_print_custom_chr
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text4
  3961   0031EE                     __ptext4:
  3962                           	callstack 0
  3963   0031EE                     _lcd_print_chr:
  3964                           	callstack 21
  3965   0031EE                     
  3966                           ;ECU_Layer/Lcd/lcd.c: 86:     if(lcd == ((void*)0)){
  3967   0031EE  501F               	movf	lcd_print_chr@lcd^0,w,c
  3968   0031F0  A4D8               	btfss	status,2,c
  3969   0031F2  EFFD  F018         	goto	u3371
  3970   0031F6  EFFF  F018         	goto	u3370
  3971   0031FA                     u3371:
  3972   0031FA  EF02  F019         	goto	l4182
  3973   0031FE                     u3370:
  3974   0031FE                     
  3975                           ;ECU_Layer/Lcd/lcd.c: 87:         ret = (Std_RetuenType)0x00;
  3976   0031FE  6A21               	clrf	lcd_print_chr@ret^0,c
  3977                           
  3978                           ;ECU_Layer/Lcd/lcd.c: 88:     }else{
  3979   003200  EF15  F019         	goto	l4184
  3980   003204                     l4182:
  3981                           
  3982                           ;ECU_Layer/Lcd/lcd.c: 89:         ret = gpio_pin_write_logic(&(lcd->RS), 0x01);
  3983   003204  C01F  F011         	movff	lcd_print_chr@lcd,gpio_pin_write_logic@_pin_config
  3984   003208  0E01               	movlw	1
  3985   00320A  6E12               	movwf	gpio_pin_write_logic@logic_status^0,c
  3986   00320C  EC68  F013         	call	_gpio_pin_write_logic	;wreg free
  3987   003210  6E21               	movwf	lcd_print_chr@ret^0,c
  3988                           
  3989                           ;ECU_Layer/Lcd/lcd.c: 97:         ret = send_byte(lcd, character);
  3990   003212  C01F  F019         	movff	lcd_print_chr@lcd,send_byte@lcd
  3991   003216  C020  F01A         	movff	lcd_print_chr@character,send_byte@command
  3992   00321A  EC96  F017         	call	_send_byte	;wreg free
  3993   00321E  6E21               	movwf	lcd_print_chr@ret^0,c
  3994                           
  3995                           ;ECU_Layer/Lcd/lcd.c: 98:         ret = send_enable_signal(lcd);
  3996   003220  C01F  F019         	movff	lcd_print_chr@lcd,send_enable_signal@lcd
  3997   003224  EC56  F019         	call	_send_enable_signal	;wreg free
  3998   003228  6E21               	movwf	lcd_print_chr@ret^0,c
  3999   00322A                     l4184:
  4000                           
  4001                           ;ECU_Layer/Lcd/lcd.c: 101:     return ret;
  4002   00322A  5021               	movf	lcd_print_chr@ret^0,w,c
  4003   00322C  0012               	return		;funcret
  4004   00322E                     __end_of_lcd_print_chr:
  4005                           	callstack 0
  4006                           
  4007 ;; *************** function _lcd_clear_display *****************
  4008 ;; Defined at:
  4009 ;;		line 74 in file "ECU_Layer/Lcd/lcd.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  lcd             1   33[COMRAM] PTR const struct .
  4012 ;;		 -> view(10), 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  ret             1    0        unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      unsigned char 
  4017 ;; Registers used:
  4018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4024 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;Total ram usage:        1 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; Hardware stack levels required when called: 8
  4031 ;; This function calls:
  4032 ;;		_lcd_send_command
  4033 ;; This function is called by:
  4034 ;;		_main
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text5
  4039   00341E                     __ptext5:
  4040                           	callstack 0
  4041   00341E                     _lcd_clear_display:
  4042                           	callstack 22
  4043   00341E                     
  4044                           ;ECU_Layer/Lcd/lcd.c: 76:     if(lcd == ((void*)0)){
  4045   00341E  5022               	movf	lcd_clear_display@lcd^0,w,c
  4046   003420  A4D8               	btfss	status,2,c
  4047   003422  EF15  F01A         	goto	u3961
  4048   003426  EF17  F01A         	goto	u3960
  4049   00342A                     u3961:
  4050   00342A  EF19  F01A         	goto	l4570
  4051   00342E                     u3960:
  4052   00342E                     
  4053                           ;ECU_Layer/Lcd/lcd.c: 78:     }else{
  4054   00342E  EF1F  F01A         	goto	l151
  4055   003432                     l4570:
  4056   003432  C022  F01F         	movff	lcd_clear_display@lcd,lcd_send_command@lcd
  4057   003436  0E01               	movlw	1
  4058   003438  6E20               	movwf	lcd_send_command@command^0,c
  4059   00343A  EC17  F019         	call	_lcd_send_command	;wreg free
  4060   00343E                     l151:
  4061   00343E  0012               	return		;funcret
  4062   003440                     __end_of_lcd_clear_display:
  4063                           	callstack 0
  4064                           
  4065 ;; *************** function _hal_adc_read_analog_pin *****************
  4066 ;; Defined at:
  4067 ;;		line 162 in file "MCAL_Layer/ADC/hal_adc.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  ADC             1   19[COMRAM] PTR const struct .
  4070 ;;		 -> adc_1(6), 
  4071 ;;  UsedChannel     1   20[COMRAM] enum E3082
  4072 ;;  AnalogValue     1   21[COMRAM] PTR unsigned short 
  4073 ;;		 -> Value(2), 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  ret             1    0        unsigned char 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      unsigned char 
  4078 ;; Registers used:
  4079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4085 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;Total ram usage:        4 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 6
  4092 ;; This function calls:
  4093 ;;		_ADC_Pin_Input_switch
  4094 ;;		_ADC_get_value_from_reg
  4095 ;; This function is called by:
  4096 ;;		_main
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text6
  4101   002F86                     __ptext6:
  4102                           	callstack 0
  4103   002F86                     _hal_adc_read_analog_pin:
  4104                           	callstack 24
  4105   002F86                     
  4106                           ;MCAL_Layer/ADC/hal_adc.c: 164:  if((ADC == ((void*)0)) || (AnalogValue == ((void*)0))){
  4107   002F86  5014               	movf	hal_adc_read_analog_pin@ADC^0,w,c
  4108   002F88  B4D8               	btfsc	status,2,c
  4109   002F8A  EFC9  F017         	goto	u4111
  4110   002F8E  EFCB  F017         	goto	u4110
  4111   002F92                     u4111:
  4112   002F92  EFD3  F017         	goto	l932
  4113   002F96                     u4110:
  4114   002F96  5016               	movf	hal_adc_read_analog_pin@AnalogValue^0,w,c
  4115   002F98  A4D8               	btfss	status,2,c
  4116   002F9A  EFD1  F017         	goto	u4121
  4117   002F9E  EFD3  F017         	goto	u4120
  4118   002FA2                     u4121:
  4119   002FA2  EFD5  F017         	goto	l4662
  4120   002FA6                     u4120:
  4121   002FA6                     l932:
  4122                           
  4123                           ;MCAL_Layer/ADC/hal_adc.c: 166:  }else{
  4124   002FA6  EFED  F017         	goto	l937
  4125   002FAA                     l4662:
  4126                           
  4127                           ;MCAL_Layer/ADC/hal_adc.c: 167:   (ADCON0bits.CHS = (uint8)UsedChannel);
  4128   002FAA  C015  F017         	movff	hal_adc_read_analog_pin@UsedChannel,??_hal_adc_read_analog_pin
  4129   002FAE  4617               	rlncf	??_hal_adc_read_analog_pin^0,f,c
  4130   002FB0  4617               	rlncf	??_hal_adc_read_analog_pin^0,f,c
  4131   002FB2  50C2               	movf	194,w,c	;volatile
  4132   002FB4  1817               	xorwf	??_hal_adc_read_analog_pin^0,w,c
  4133   002FB6  0BC3               	andlw	-61
  4134   002FB8  1817               	xorwf	??_hal_adc_read_analog_pin^0,w,c
  4135   002FBA  6EC2               	movwf	194,c	;volatile
  4136   002FBC                     
  4137                           ;MCAL_Layer/ADC/hal_adc.c: 168:   ADC_Pin_Input_switch(UsedChannel);
  4138   002FBC  5015               	movf	hal_adc_read_analog_pin@UsedChannel^0,w,c
  4139   002FBE  ECC2  F014         	call	_ADC_Pin_Input_switch
  4140   002FC2                     
  4141                           ;MCAL_Layer/ADC/hal_adc.c: 169:   (ADCON0bits.GO_DONE = 1);
  4142   002FC2  82C2               	bsf	194,1,c	;volatile
  4143   002FC4                     l934:
  4144   002FC4  B2C2               	btfsc	194,1,c	;volatile
  4145   002FC6  EFE7  F017         	goto	u4131
  4146   002FCA  EFE9  F017         	goto	u4130
  4147   002FCE                     u4131:
  4148   002FCE  EFE2  F017         	goto	l934
  4149   002FD2                     u4130:
  4150   002FD2                     
  4151                           ;MCAL_Layer/ADC/hal_adc.c: 171:   ADC_get_value_from_reg(AnalogValue);
  4152   002FD2  C016  F011         	movff	hal_adc_read_analog_pin@AnalogValue,ADC_get_value_from_reg@AnalogValue
  4153   002FD6  ECEB  F019         	call	_ADC_get_value_from_reg	;wreg free
  4154   002FDA                     l937:
  4155   002FDA  0012               	return		;funcret
  4156   002FDC                     __end_of_hal_adc_read_analog_pin:
  4157                           	callstack 0
  4158                           
  4159 ;; *************** function _ADC_get_value_from_reg *****************
  4160 ;; Defined at:
  4161 ;;		line 102 in file "MCAL_Layer/ADC/hal_adc.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  AnalogValue     1   16[COMRAM] PTR unsigned short 
  4164 ;;		 -> Value(2), 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;		None
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4176 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;Total ram usage:        3 bytes
  4181 ;; Hardware stack levels used: 1
  4182 ;; Hardware stack levels required when called: 5
  4183 ;; This function calls:
  4184 ;;		Nothing
  4185 ;; This function is called by:
  4186 ;;		_hal_adc_read_analog_pin
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           	psect	text7
  4191   0033D6                     __ptext7:
  4192                           	callstack 0
  4193   0033D6                     _ADC_get_value_from_reg:
  4194                           	callstack 24
  4195   0033D6                     
  4196                           ;MCAL_Layer/ADC/hal_adc.c: 103:      *(AnalogValue) = (uint16)(((ADRESH)<<8U) + (ADRESL)
      +                          );
  4197   0033D6  50C3               	movf	195,w,c	;volatile
  4198   0033D8  CFC4 F012          	movff	4036,??_ADC_get_value_from_reg	;volatile
  4199   0033DC  6A13               	clrf	(??_ADC_get_value_from_reg+1)^0,c
  4200   0033DE  C012  F013         	movff	??_ADC_get_value_from_reg,??_ADC_get_value_from_reg+1
  4201   0033E2  6A12               	clrf	??_ADC_get_value_from_reg^0,c
  4202   0033E4  2612               	addwf	??_ADC_get_value_from_reg^0,f,c
  4203   0033E6  0E00               	movlw	0
  4204   0033E8  2213               	addwfc	(??_ADC_get_value_from_reg+1)^0,f,c
  4205   0033EA  5011               	movf	ADC_get_value_from_reg@AnalogValue^0,w,c
  4206   0033EC  6ED9               	movwf	fsr2l,c
  4207   0033EE  6ADA               	clrf	fsr2h,c
  4208   0033F0  C012  FFDE         	movff	??_ADC_get_value_from_reg,postinc2
  4209   0033F4  C013  FFDD         	movff	??_ADC_get_value_from_reg+1,postdec2
  4210   0033F8  0012               	return		;funcret
  4211   0033FA                     __end_of_ADC_get_value_from_reg:
  4212                           	callstack 0
  4213                           
  4214 ;; *************** function _ADC_Pin_Input_switch *****************
  4215 ;; Defined at:
  4216 ;;		line 105 in file "MCAL_Layer/ADC/hal_adc.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  UsedChannel     1    wreg     enum E3082
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  UsedChannel     1   18[COMRAM] enum E3082
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  1    wreg      void 
  4223 ;; Registers used:
  4224 ;;		wreg, status,2, status,0
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;Total ram usage:        3 bytes
  4235 ;; Hardware stack levels used: 1
  4236 ;; Hardware stack levels required when called: 5
  4237 ;; This function calls:
  4238 ;;		Nothing
  4239 ;; This function is called by:
  4240 ;;		_hal_adc_read_analog_pin
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           	psect	text8
  4245   002984                     __ptext8:
  4246                           	callstack 0
  4247   002984                     _ADC_Pin_Input_switch:
  4248                           	callstack 24
  4249                           
  4250                           ;incstack = 0
  4251                           ;ADC_Pin_Input_switch@UsedChannel stored from wreg
  4252   002984  6E13               	movwf	ADC_Pin_Input_switch@UsedChannel^0,c
  4253   002986                     
  4254                           ;MCAL_Layer/ADC/hal_adc.c: 106:     switch (UsedChannel) {
  4255   002986  EFEC  F014         	goto	l4356
  4256   00298A                     l4328:
  4257   00298A  8092               	bsf	146,0,c	;volatile
  4258   00298C  EF2D  F015         	goto	l917
  4259   002990                     l4330:
  4260   002990  8292               	bsf	146,1,c	;volatile
  4261   002992  EF2D  F015         	goto	l917
  4262   002996                     l4332:
  4263   002996  8492               	bsf	146,2,c	;volatile
  4264   002998  EF2D  F015         	goto	l917
  4265   00299C                     l4334:
  4266   00299C  8692               	bsf	146,3,c	;volatile
  4267   00299E  EF2D  F015         	goto	l917
  4268   0029A2                     l4336:
  4269   0029A2  8A92               	bsf	146,5,c	;volatile
  4270   0029A4  EF2D  F015         	goto	l917
  4271   0029A8                     l4338:
  4272   0029A8  8A96               	bsf	150,5,c	;volatile
  4273   0029AA  EF2D  F015         	goto	l917
  4274   0029AE                     l4340:
  4275   0029AE  8C96               	bsf	150,6,c	;volatile
  4276   0029B0  EF2D  F015         	goto	l917
  4277   0029B4                     l4342:
  4278   0029B4  8E96               	bsf	150,7,c	;volatile
  4279   0029B6  EF2D  F015         	goto	l917
  4280   0029BA                     l4344:
  4281   0029BA  8493               	bsf	147,2,c	;volatile
  4282   0029BC  EF2D  F015         	goto	l917
  4283   0029C0                     l4346:
  4284   0029C0  8693               	bsf	147,3,c	;volatile
  4285   0029C2  EF2D  F015         	goto	l917
  4286   0029C6                     l4348:
  4287   0029C6  8293               	bsf	147,1,c	;volatile
  4288   0029C8  EF2D  F015         	goto	l917
  4289   0029CC                     l4350:
  4290   0029CC  8893               	bsf	147,4,c	;volatile
  4291   0029CE  EF2D  F015         	goto	l917
  4292   0029D2                     l4352:
  4293   0029D2  8093               	bsf	147,0,c	;volatile
  4294   0029D4  EF2D  F015         	goto	l917
  4295   0029D8                     l4356:
  4296   0029D8  5013               	movf	ADC_Pin_Input_switch@UsedChannel^0,w,c
  4297   0029DA  6E11               	movwf	??_ADC_Pin_Input_switch^0,c
  4298   0029DC  6A12               	clrf	(??_ADC_Pin_Input_switch+1)^0,c
  4299                           
  4300                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4301                           ; Switch size 1, requested type "simple"
  4302                           ; Number of cases is 1, Range of values is 0 to 0
  4303                           ; switch strategies available:
  4304                           ; Name         Instructions Cycles
  4305                           ; simple_byte            4     3 (average)
  4306                           ;	Chosen strategy is simple_byte
  4307   0029DE  5012               	movf	(??_ADC_Pin_Input_switch+1)^0,w,c
  4308   0029E0  0A00               	xorlw	0	; case 0
  4309   0029E2  B4D8               	btfsc	status,2,c
  4310   0029E4  EFF6  F014         	goto	l5898
  4311   0029E8  EF2D  F015         	goto	l917
  4312   0029EC                     l5898:
  4313                           
  4314                           ; Switch size 1, requested type "simple"
  4315                           ; Number of cases is 13, Range of values is 0 to 12
  4316                           ; switch strategies available:
  4317                           ; Name         Instructions Cycles
  4318                           ; simple_byte           40    21 (average)
  4319                           ;	Chosen strategy is simple_byte
  4320   0029EC  5011               	movf	??_ADC_Pin_Input_switch^0,w,c
  4321   0029EE  0A00               	xorlw	0	; case 0
  4322   0029F0  B4D8               	btfsc	status,2,c
  4323   0029F2  EFC5  F014         	goto	l4328
  4324   0029F6  0A01               	xorlw	1	; case 1
  4325   0029F8  B4D8               	btfsc	status,2,c
  4326   0029FA  EFC8  F014         	goto	l4330
  4327   0029FE  0A03               	xorlw	3	; case 2
  4328   002A00  B4D8               	btfsc	status,2,c
  4329   002A02  EFCB  F014         	goto	l4332
  4330   002A06  0A01               	xorlw	1	; case 3
  4331   002A08  B4D8               	btfsc	status,2,c
  4332   002A0A  EFCE  F014         	goto	l4334
  4333   002A0E  0A07               	xorlw	7	; case 4
  4334   002A10  B4D8               	btfsc	status,2,c
  4335   002A12  EFD1  F014         	goto	l4336
  4336   002A16  0A01               	xorlw	1	; case 5
  4337   002A18  B4D8               	btfsc	status,2,c
  4338   002A1A  EFD4  F014         	goto	l4338
  4339   002A1E  0A03               	xorlw	3	; case 6
  4340   002A20  B4D8               	btfsc	status,2,c
  4341   002A22  EFD7  F014         	goto	l4340
  4342   002A26  0A01               	xorlw	1	; case 7
  4343   002A28  B4D8               	btfsc	status,2,c
  4344   002A2A  EFDA  F014         	goto	l4342
  4345   002A2E  0A0F               	xorlw	15	; case 8
  4346   002A30  B4D8               	btfsc	status,2,c
  4347   002A32  EFDD  F014         	goto	l4344
  4348   002A36  0A01               	xorlw	1	; case 9
  4349   002A38  B4D8               	btfsc	status,2,c
  4350   002A3A  EFE0  F014         	goto	l4346
  4351   002A3E  0A03               	xorlw	3	; case 10
  4352   002A40  B4D8               	btfsc	status,2,c
  4353   002A42  EFE3  F014         	goto	l4348
  4354   002A46  0A01               	xorlw	1	; case 11
  4355   002A48  B4D8               	btfsc	status,2,c
  4356   002A4A  EFE6  F014         	goto	l4350
  4357   002A4E  0A07               	xorlw	7	; case 12
  4358   002A50  B4D8               	btfsc	status,2,c
  4359   002A52  EFE9  F014         	goto	l4352
  4360   002A56  EF2D  F015         	goto	l917
  4361   002A5A                     l917:
  4362   002A5A  0012               	return		;funcret
  4363   002A5C                     __end_of_ADC_Pin_Input_switch:
  4364                           	callstack 0
  4365                           
  4366 ;; *************** function _convert_uint8_to_str *****************
  4367 ;; Defined at:
  4368 ;;		line 156 in file "ECU_Layer/Lcd/lcd.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  value           1    wreg     unsigned char 
  4371 ;;  str             1   65[COMRAM] PTR unsigned char 
  4372 ;;		 -> pb(0), pa(0), 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  value           1   66[COMRAM] unsigned char 
  4375 ;;  ret             1    0        unsigned char 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      unsigned char 
  4378 ;; Registers used:
  4379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4385 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;Total ram usage:        2 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; Hardware stack levels required when called: 10
  4392 ;; This function calls:
  4393 ;;		_snprintf
  4394 ;; This function is called by:
  4395 ;;		_main
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text9
  4400   003350                     __ptext9:
  4401                           	callstack 0
  4402   003350                     _convert_uint8_to_str:
  4403                           	callstack 20
  4404                           
  4405                           ;incstack = 0
  4406                           ;convert_uint8_to_str@value stored from wreg
  4407   003350  6E43               	movwf	convert_uint8_to_str@value^0,c
  4408   003352                     
  4409                           ;ECU_Layer/Lcd/lcd.c: 158:     if((value > (uint8) (0xFF)) || (str == ((void*)0))){
  4410   003352  5042               	movf	convert_uint8_to_str@str^0,w,c
  4411   003354  A4D8               	btfss	status,2,c
  4412   003356  EFAF  F019         	goto	u4031
  4413   00335A  EFB1  F019         	goto	u4030
  4414   00335E                     u4031:
  4415   00335E  EFB3  F019         	goto	l4606
  4416   003362                     u4030:
  4417   003362                     
  4418                           ;ECU_Layer/Lcd/lcd.c: 160:     }else{
  4419   003362  EFC0  F019         	goto	l194
  4420   003366                     l4606:
  4421                           
  4422                           ;ECU_Layer/Lcd/lcd.c: 161:         snprintf((char*)str, 4, "%u", (unsigned int)value);
  4423   003366  C042  F029         	movff	convert_uint8_to_str@str,snprintf@s
  4424   00336A  0E00               	movlw	0
  4425   00336C  6E2B               	movwf	(snprintf@n+1)^0,c
  4426   00336E  0E04               	movlw	4
  4427   003370  6E2A               	movwf	snprintf@n^0,c
  4428   003372  0E0D               	movlw	low STR_1
  4429   003374  6E2C               	movwf	snprintf@fmt^0,c
  4430   003376  C043  F02D         	movff	convert_uint8_to_str@value,?_snprintf+4
  4431   00337A  6A2E               	clrf	(?_snprintf+5)^0,c
  4432   00337C  ECDF  F013         	call	_snprintf	;wreg free
  4433   003380                     l194:
  4434   003380  0012               	return		;funcret
  4435   003382                     __end_of_convert_uint8_to_str:
  4436                           	callstack 0
  4437                           
  4438 ;; *************** function _snprintf *****************
  4439 ;; Defined at:
  4440 ;;		line 13 in file "D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\nf_snprintf.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  s               1   40[COMRAM] PTR unsigned char 
  4443 ;;		 -> pb(0), pa(0), 
  4444 ;;  n               2   41[COMRAM] unsigned int 
  4445 ;;  fmt             1   43[COMRAM] PTR const unsigned char 
  4446 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;  f              11   54[COMRAM] struct _IO_FILE
  4449 ;;  cnt             2   52[COMRAM] int 
  4450 ;;  ap              1   51[COMRAM] PTR void [1]
  4451 ;;		 -> ?_snprintf(2), 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  2   40[COMRAM] int 
  4454 ;; Registers used:
  4455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4461 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;Total ram usage:       25 bytes
  4466 ;; Hardware stack levels used: 1
  4467 ;; Hardware stack levels required when called: 9
  4468 ;; This function calls:
  4469 ;;		_vfprintf
  4470 ;; This function is called by:
  4471 ;;		_convert_uint8_to_str
  4472 ;;		_convert_uint16_to_str
  4473 ;;		_convert_uint32_to_str
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text10
  4478   0027BE                     __ptext10:
  4479                           	callstack 0
  4480   0027BE                     _snprintf:
  4481                           	callstack 20
  4482   0027BE  0E80               	movlw	128
  4483   0027C0  5C2B               	subwf	(snprintf@n+1)^0,w,c
  4484   0027C2  A0D8               	btfss	status,0,c
  4485   0027C4  EFE6  F013         	goto	u3511
  4486   0027C8  EFE8  F013         	goto	u3510
  4487   0027CC                     u3511:
  4488   0027CC  EFEF  F013         	goto	l4290
  4489   0027D0                     u3510:
  4490   0027D0  0E00               	movlw	0
  4491   0027D2  0100               	movlb	0	; () banked
  4492   0027D4  6FF5               	movwf	(_errno+1)& (0+255),b
  4493   0027D6  0E4B               	movlw	75
  4494   0027D8  6FF4               	movwf	_errno& (0+255),b
  4495   0027DA  EF54  F014         	goto	l1624
  4496   0027DE                     l4290:
  4497   0027DE  0E2D               	movlw	low (?_snprintf+4)
  4498   0027E0  6E34               	movwf	snprintf@ap^0,c
  4499   0027E2  C029  F037         	movff	snprintf@s,snprintf@f
  4500   0027E6  502B               	movf	(snprintf@n+1)^0,w,c
  4501   0027E8  E109               	bnz	u3520
  4502   0027EA  0E02               	movlw	2
  4503   0027EC  5C2A               	subwf	snprintf@n^0,w,c
  4504   0027EE  A0D8               	btfss	status,0,c
  4505   0027F0  EFFC  F013         	goto	u3521
  4506   0027F4  EFFE  F013         	goto	u3520
  4507   0027F8                     u3521:
  4508   0027F8  EF0A  F014         	goto	l4296
  4509   0027FC                     u3520:
  4510   0027FC  0EFF               	movlw	255
  4511   0027FE  242A               	addwf	snprintf@n^0,w,c
  4512   002800  6E40               	movwf	(snprintf@f+9)^0,c
  4513   002802  0EFF               	movlw	255
  4514   002804  202B               	addwfc	(snprintf@n+1)^0,w,c
  4515   002806  6E41               	movwf	(snprintf@f+10)^0,c
  4516   002808  0E00               	movlw	0
  4517   00280A  6E3A               	movwf	(snprintf@f+3)^0,c
  4518   00280C  0E00               	movlw	0
  4519   00280E  6E39               	movwf	(snprintf@f+2)^0,c
  4520   002810  EF12  F014         	goto	l4298
  4521   002814                     l4296:
  4522   002814  0E00               	movlw	0
  4523   002816  6E41               	movwf	(snprintf@f+10)^0,c
  4524   002818  0E01               	movlw	1
  4525   00281A  6E40               	movwf	(snprintf@f+9)^0,c
  4526   00281C  0E00               	movlw	0
  4527   00281E  6E3A               	movwf	(snprintf@f+3)^0,c
  4528   002820  0E01               	movlw	1
  4529   002822  6E39               	movwf	(snprintf@f+2)^0,c
  4530   002824                     l4298:
  4531   002824  0E37               	movlw	low snprintf@f
  4532   002826  6E25               	movwf	vfprintf@fp^0,c
  4533   002828  C02C  F026         	movff	snprintf@fmt,vfprintf@fmt
  4534   00282C  0E34               	movlw	low snprintf@ap
  4535   00282E  6E27               	movwf	vfprintf@ap^0,c
  4536   002830  EC19  F018         	call	_vfprintf	;wreg free
  4537   002834  C025  F035         	movff	?_vfprintf,snprintf@cnt
  4538   002838  C026  F036         	movff	?_vfprintf+1,snprintf@cnt+1
  4539   00283C  502A               	movf	snprintf@n^0,w,c
  4540   00283E  102B               	iorwf	(snprintf@n+1)^0,w,c
  4541   002840  B4D8               	btfsc	status,2,c
  4542   002842  EF25  F014         	goto	u3531
  4543   002846  EF27  F014         	goto	u3530
  4544   00284A                     u3531:
  4545   00284A  EF54  F014         	goto	l1624
  4546   00284E                     u3530:
  4547   00284E  BE36               	btfsc	(snprintf@cnt+1)^0,7,c
  4548   002850  EF2C  F014         	goto	u3541
  4549   002854  EF2E  F014         	goto	u3540
  4550   002858                     u3541:
  4551   002858  EF54  F014         	goto	l1624
  4552   00285C                     u3540:
  4553   00285C  0EFF               	movlw	255
  4554   00285E  242A               	addwf	snprintf@n^0,w,c
  4555   002860  6E2F               	movwf	??_snprintf^0,c
  4556   002862  0EFF               	movlw	255
  4557   002864  202B               	addwfc	(snprintf@n+1)^0,w,c
  4558   002866  6E30               	movwf	(??_snprintf+1)^0,c
  4559   002868  502F               	movf	??_snprintf^0,w,c
  4560   00286A  5C35               	subwf	snprintf@cnt^0,w,c
  4561   00286C  5036               	movf	(snprintf@cnt+1)^0,w,c
  4562   00286E  0A80               	xorlw	128
  4563   002870  6E31               	movwf	(??_snprintf+2)^0,c
  4564   002872  5030               	movf	(??_snprintf+1)^0,w,c
  4565   002874  0A80               	xorlw	128
  4566   002876  5831               	subwfb	(??_snprintf+2)^0,w,c
  4567   002878  A0D8               	btfss	status,0,c
  4568   00287A  EF41  F014         	goto	u3551
  4569   00287E  EF43  F014         	goto	u3550
  4570   002882                     u3551:
  4571   002882  EF4B  F014         	goto	l1629
  4572   002886                     u3550:
  4573   002886  0EFF               	movlw	255
  4574   002888  242A               	addwf	snprintf@n^0,w,c
  4575   00288A  6E32               	movwf	_snprintf$2377^0,c
  4576   00288C  0EFF               	movlw	255
  4577   00288E  202B               	addwfc	(snprintf@n+1)^0,w,c
  4578   002890  6E33               	movwf	(_snprintf$2377+1)^0,c
  4579   002892  EF4F  F014         	goto	l4308
  4580   002896                     l1629:
  4581   002896  C035  F032         	movff	snprintf@cnt,_snprintf$2377
  4582   00289A  C036  F033         	movff	snprintf@cnt+1,_snprintf$2377+1
  4583   00289E                     l4308:
  4584   00289E  5029               	movf	snprintf@s^0,w,c
  4585   0028A0  2432               	addwf	_snprintf$2377^0,w,c
  4586   0028A2  6ED9               	movwf	fsr2l,c
  4587   0028A4  6ADA               	clrf	fsr2h,c
  4588   0028A6  6ADF               	clrf	indf2,c
  4589   0028A8                     l1624:
  4590   0028A8  0012               	return		;funcret
  4591   0028AA                     __end_of_snprintf:
  4592                           	callstack 0
  4593                           
  4594 ;; *************** function _vfprintf *****************
  4595 ;; Defined at:
  4596 ;;		line 1817 in file "D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  fp              1   36[COMRAM] PTR struct _IO_FILE
  4599 ;;		 -> snprintf@f(11), 
  4600 ;;  fmt             1   37[COMRAM] PTR const unsigned char 
  4601 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  4602 ;;  ap              1   38[COMRAM] PTR PTR void 
  4603 ;;		 -> snprintf@ap(1), 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  cfmt            1   39[COMRAM] PTR unsigned char 
  4606 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  2   36[COMRAM] int 
  4609 ;; Registers used:
  4610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4616 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4620 ;;Total ram usage:        4 bytes
  4621 ;; Hardware stack levels used: 1
  4622 ;; Hardware stack levels required when called: 8
  4623 ;; This function calls:
  4624 ;;		_vfpfcnvrt
  4625 ;; This function is called by:
  4626 ;;		_snprintf
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text11
  4631   003032                     __ptext11:
  4632                           	callstack 0
  4633   003032                     _vfprintf:
  4634                           	callstack 20
  4635   003032                     
  4636                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: i
      +                          nt vfprintf(FILE *fp, const char *fmt, va_list ap);D:\C extend\programe Setup\Microchip\
      +                          xc8\v3.00\pic\sources\c99\common\doprnt.c: 1818: {;D:\C extend\programe Setup\Microchip\
      +                          xc8\v3.00\pic\sources\c99\common\doprnt.c: 1820:     char *cfmt;;D:\C extend\programe Se
      +                          tup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1822:     cfmt = (char *)fmt;
  4637   003032  C026  F028         	movff	vfprintf@fmt,vfprintf@cfmt
  4638   003036                     
  4639                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1824:  
      +                             nout = 0;
  4640   003036  0E00               	movlw	0
  4641   003038  0100               	movlb	0	; () banked
  4642   00303A  6FEF               	movwf	(_nout+1)& (0+255),b
  4643   00303C  0E00               	movlw	0
  4644   00303E  6FEE               	movwf	_nout& (0+255),b
  4645                           
  4646                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:  
      +                             while (*cfmt) {
  4647   003040  EF2F  F018         	goto	l4238
  4648   003044                     l4236:
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1828:  
      +                                 nout +=
  4652   003044  C025  F019         	movff	vfprintf@fp,vfpfcnvrt@fp
  4653   003048  0E28               	movlw	low vfprintf@cfmt
  4654   00304A  6E1A               	movwf	vfpfcnvrt@fmt^0,c
  4655   00304C  C027  F01B         	movff	vfprintf@ap,vfpfcnvrt@ap
  4656   003050  EC37  F010         	call	_vfpfcnvrt	;wreg free
  4657   003054  5019               	movf	?_vfpfcnvrt^0,w,c
  4658   003056  0100               	movlb	0	; () banked
  4659   003058  27EE               	addwf	_nout& (0+255),f,b
  4660   00305A  501A               	movf	(?_vfpfcnvrt+1)^0,w,c
  4661   00305C  23EF               	addwfc	(_nout+1)& (0+255),f,b
  4662   00305E                     l4238:
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:  
      +                             while (*cfmt) {
  4666   00305E  C028  FFF6         	movff	vfprintf@cfmt,tblptrl
  4667   003062                     	if	1	;There is more than 1 active tblptr byte
  4668   003062  0E10               	movlw	high __smallconst
  4669   003064  6EF7               	movwf	tblptrh,c
  4670   003066                     	endif
  4671   003066                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4672   003066  6AF8               	clrf	tblptru,c
  4673   003068                     	endif
  4674   003068                     	if	0	;tblptru may be non-zero
  4675   003068                     	endif
  4676   003068  0008               	tblrd		*
  4677   00306A  50F5               	movf	tablat,w,c
  4678   00306C  0900               	iorlw	0
  4679   00306E  A4D8               	btfss	status,2,c
  4680   003070  EF3C  F018         	goto	u3421
  4681   003074  EF3E  F018         	goto	u3420
  4682   003078                     u3421:
  4683   003078  EF22  F018         	goto	l4236
  4684   00307C                     u3420:
  4685   00307C                     
  4686                           ; BSR set to: 0
  4687                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1833:  
      +                             return nout;
  4688   00307C  C0EE  F025         	movff	_nout,?_vfprintf
  4689   003080  C0EF  F026         	movff	_nout+1,?_vfprintf+1
  4690   003084                     
  4691                           ; BSR set to: 0
  4692   003084  0012               	return		;funcret
  4693   003086                     __end_of_vfprintf:
  4694                           	callstack 0
  4695                           
  4696 ;; *************** function _vfpfcnvrt *****************
  4697 ;; Defined at:
  4698 ;;		line 1177 in file "D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  4701 ;;		 -> snprintf@f(11), 
  4702 ;;  fmt             1   25[COMRAM] PTR PTR unsigned char 
  4703 ;;		 -> vfprintf@cfmt(1), 
  4704 ;;  ap              1   26[COMRAM] PTR PTR void 
  4705 ;;		 -> snprintf@ap(1), 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  convarg         4   30[COMRAM] struct .
  4708 ;;  cnt             2   28[COMRAM] int 
  4709 ;;  c               1   35[COMRAM] unsigned char 
  4710 ;;  cp              1   34[COMRAM] PTR unsigned char 
  4711 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  4712 ;;  done            1    0        _Bool 
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  2   24[COMRAM] int 
  4715 ;; Registers used:
  4716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4722 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;Total ram usage:       12 bytes
  4727 ;; Hardware stack levels used: 1
  4728 ;; Hardware stack levels required when called: 7
  4729 ;; This function calls:
  4730 ;;		___lwdiv
  4731 ;;		___lwmod
  4732 ;;		_fputc
  4733 ;; This function is called by:
  4734 ;;		_vfprintf
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text12
  4739   00206E                     __ptext12:
  4740                           	callstack 0
  4741   00206E                     _vfpfcnvrt:
  4742                           	callstack 20
  4743   00206E                     
  4744                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\C extend\programe Setup\Microchip\xc8\v3.
      +                          00\pic\sources\c99\common\doprnt.c: 1178: {;D:\C extend\programe Setup\Microchip\xc8\v3.
      +                          00\pic\sources\c99\common\doprnt.c: 1179:     char c, *cp;;D:\C extend\programe Setup\Mi
      +                          crochip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1180:     _Bool done;;D:\C extend\pro
      +                          grame Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1188:  } convarg;
  4745   00206E  0E00               	movlw	0
  4746   002070  6E1E               	movwf	(vfpfcnvrt@cnt+1)^0,c
  4747   002072  0E00               	movlw	0
  4748   002074  6E1D               	movwf	vfpfcnvrt@cnt^0,c
  4749   002076                     
  4750                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1201:  
      +                             if ((*fmt)[0] == '%') {
  4751   002076  501A               	movf	vfpfcnvrt@fmt^0,w,c
  4752   002078  6ED9               	movwf	fsr2l,c
  4753   00207A  6ADA               	clrf	fsr2h,c
  4754   00207C  CFDF FFF6          	movff	indf2,tblptrl
  4755   002080                     	if	1	;There is more than 1 active tblptr byte
  4756   002080  0E10               	movlw	high __smallconst
  4757   002082  6EF7               	movwf	tblptrh,c
  4758   002084                     	endif
  4759   002084                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4760   002084  6AF8               	clrf	tblptru,c
  4761   002086                     	endif
  4762   002086                     	if	0	;tblptru may be non-zero
  4763   002086                     	endif
  4764   002086  0008               	tblrd		*
  4765   002088  50F5               	movf	tablat,w,c
  4766   00208A  0A25               	xorlw	37
  4767   00208C  A4D8               	btfss	status,2,c
  4768   00208E  EF4B  F010         	goto	u3291
  4769   002092  EF4D  F010         	goto	u3290
  4770   002096                     u3291:
  4771   002096  EFEC  F010         	goto	l4100
  4772   00209A                     u3290:
  4773   00209A                     
  4774                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:  
      +                                 ++*fmt;
  4775   00209A  501A               	movf	vfpfcnvrt@fmt^0,w,c
  4776   00209C  6ED9               	movwf	fsr2l,c
  4777   00209E  6ADA               	clrf	fsr2h,c
  4778   0020A0  2ADF               	incf	indf2,f,c
  4779   0020A2                     
  4780                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:  
      +                                 flags = width = 0;
  4781   0020A2  0E00               	movlw	0
  4782   0020A4  0100               	movlb	0	; () banked
  4783   0020A6  6FF1               	movwf	(_width+1)& (0+255),b
  4784   0020A8  0E00               	movlw	0
  4785   0020AA  6FF0               	movwf	_width& (0+255),b
  4786   0020AC  C0F0  F05A         	movff	_width,_flags
  4787   0020B0                     
  4788                           ; BSR set to: 0
  4789                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:  
      +                                 prec = -1;
  4790   0020B0  69F2               	setf	_prec& (0+255),b
  4791   0020B2  69F3               	setf	(_prec+1)& (0+255),b
  4792   0020B4                     
  4793                           ; BSR set to: 0
  4794                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:  
      +                           if (0
  4795   0020B4  501A               	movf	vfpfcnvrt@fmt^0,w,c
  4796   0020B6  6ED9               	movwf	fsr2l,c
  4797   0020B8  6ADA               	clrf	fsr2h,c
  4798   0020BA  50DF               	movf	indf2,w,c
  4799   0020BC  6E23               	movwf	vfpfcnvrt@cp^0,c
  4800   0020BE                     
  4801                           ; BSR set to: 0
  4802   0020BE  C023  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4803   0020C2                     	if	1	;There is more than 1 active tblptr byte
  4804   0020C2  0E10               	movlw	high __smallconst
  4805   0020C4  6EF7               	movwf	tblptrh,c
  4806   0020C6                     	endif
  4807   0020C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4808   0020C6  6AF8               	clrf	tblptru,c
  4809   0020C8                     	endif
  4810   0020C8                     	if	0	;tblptru may be non-zero
  4811   0020C8                     	endif
  4812   0020C8  0008               	tblrd		*
  4813   0020CA  50F5               	movf	tablat,w,c
  4814   0020CC  0A75               	xorlw	117
  4815   0020CE  A4D8               	btfss	status,2,c
  4816   0020D0  EF6C  F010         	goto	u3301
  4817   0020D4  EF6E  F010         	goto	u3300
  4818   0020D8                     u3301:
  4819   0020D8  EFE2  F010         	goto	l4094
  4820   0020DC                     u3300:
  4821   0020DC                     
  4822                           ; BSR set to: 0
  4823                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:  
      +                             ) {;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1
      +                          495:    convarg.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned 
      +                          int **)ap, (unsigned int)0));
  4824   0020DC  501B               	movf	vfpfcnvrt@ap^0,w,c
  4825   0020DE  6ED9               	movwf	fsr2l,c
  4826   0020E0  6ADA               	clrf	fsr2h,c
  4827   0020E2  0E02               	movlw	2
  4828   0020E4  26DF               	addwf	indf2,f,c
  4829   0020E6  5CDF               	subwf	indf2,w,c
  4830   0020E8  6ED9               	movwf	fsr2l,c
  4831   0020EA  6ADA               	clrf	fsr2h,c
  4832   0020EC  CFDE F01F          	movff	postinc2,vfpfcnvrt@convarg
  4833   0020F0  CFDE F020          	movff	postinc2,vfpfcnvrt@convarg+1
  4834   0020F4                     
  4835                           ; BSR set to: 0
  4836                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:  
      +                            *fmt = cp+1;
  4837   0020F4  501A               	movf	vfpfcnvrt@fmt^0,w,c
  4838   0020F6  6ED9               	movwf	fsr2l,c
  4839   0020F8  6ADA               	clrf	fsr2h,c
  4840   0020FA  2823               	incf	vfpfcnvrt@cp^0,w,c
  4841   0020FC  6EDF               	movwf	indf2,c
  4842                           
  4843                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:  
      +                            switch (*cp) {
  4844   0020FE  EFD5  F010         	goto	l4092
  4845   002102                     l4072:
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1525:  
      +                              c = sizeof(dbuf);
  4849   002102  0E20               	movlw	32
  4850   002104  6E24               	movwf	vfpfcnvrt@c^0,c
  4851   002106                     l4074:
  4852                           
  4853                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1527:  
      +                               dbuf[--c] = (convarg.uint % 10) + '0';
  4854   002106  0624               	decf	vfpfcnvrt@c^0,f,c
  4855   002108  5024               	movf	vfpfcnvrt@c^0,w,c
  4856   00210A  0FCA               	addlw	low _dbuf
  4857   00210C  6ED9               	movwf	fsr2l,c
  4858   00210E  6ADA               	clrf	fsr2h,c
  4859   002110  C01F  F011         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  4860   002114  C020  F012         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  4861   002118  0E00               	movlw	0
  4862   00211A  6E14               	movwf	(___lwmod@divisor+1)^0,c
  4863   00211C  0E0A               	movlw	10
  4864   00211E  6E13               	movwf	___lwmod@divisor^0,c
  4865   002120  ECD5  F016         	call	___lwmod	;wreg free
  4866   002124  5011               	movf	?___lwmod^0,w,c
  4867   002126  0F30               	addlw	48
  4868   002128  6EDF               	movwf	indf2,c
  4869   00212A                     
  4870                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1528:  
      +                               convarg.uint /= 10;
  4871   00212A  C01F  F011         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  4872   00212E  C020  F012         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  4873   002132  0E00               	movlw	0
  4874   002134  6E14               	movwf	(___lwdiv@divisor+1)^0,c
  4875   002136  0E0A               	movlw	10
  4876   002138  6E13               	movwf	___lwdiv@divisor^0,c
  4877   00213A  EC66  F016         	call	___lwdiv	;wreg free
  4878   00213E  C011  F01F         	movff	?___lwdiv,vfpfcnvrt@convarg
  4879   002142  C012  F020         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  4880   002146                     
  4881                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1530:  
      +                               cnt++;
  4882   002146  4A1D               	infsnz	vfpfcnvrt@cnt^0,f,c
  4883   002148  2A1E               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  4884   00214A                     
  4885                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1532:  
      +                              } while (convarg.uint != 0 && c != 0);
  4886   00214A  501F               	movf	vfpfcnvrt@convarg^0,w,c
  4887   00214C  1020               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  4888   00214E  B4D8               	btfsc	status,2,c
  4889   002150  EFAC  F010         	goto	u3311
  4890   002154  EFAE  F010         	goto	u3310
  4891   002158                     u3311:
  4892   002158  EFC6  F010         	goto	l4088
  4893   00215C                     u3310:
  4894   00215C  5024               	movf	vfpfcnvrt@c^0,w,c
  4895   00215E  A4D8               	btfss	status,2,c
  4896   002160  EFB4  F010         	goto	u3321
  4897   002164  EFB6  F010         	goto	u3320
  4898   002168                     u3321:
  4899   002168  EF83  F010         	goto	l4074
  4900   00216C                     u3320:
  4901   00216C  EFC6  F010         	goto	l4088
  4902   002170                     l4084:
  4903                           
  4904                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1534:  
      +                               fputc(dbuf[c++], fp);
  4905   002170  5024               	movf	vfpfcnvrt@c^0,w,c
  4906   002172  0FCA               	addlw	low _dbuf
  4907   002174  6ED9               	movwf	fsr2l,c
  4908   002176  6ADA               	clrf	fsr2h,c
  4909   002178  50DF               	movf	indf2,w,c
  4910   00217A  6E1C               	movwf	??_vfpfcnvrt^0,c
  4911   00217C  501C               	movf	??_vfpfcnvrt^0,w,c
  4912   00217E  6E11               	movwf	fputc@c^0,c
  4913   002180  6A12               	clrf	(fputc@c+1)^0,c
  4914   002182  C019  F013         	movff	vfpfcnvrt@fp,fputc@fp
  4915   002186  EC86  F015         	call	_fputc	;wreg free
  4916   00218A  2A24               	incf	vfpfcnvrt@c^0,f,c
  4917   00218C                     l4088:
  4918                           
  4919                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1533:  
      +                              while (c != sizeof(dbuf)) {
  4920   00218C  0E20               	movlw	32
  4921   00218E  1824               	xorwf	vfpfcnvrt@c^0,w,c
  4922   002190  A4D8               	btfss	status,2,c
  4923   002192  EFCD  F010         	goto	u3331
  4924   002196  EFCF  F010         	goto	u3330
  4925   00219A                     u3331:
  4926   00219A  EFB8  F010         	goto	l4084
  4927   00219E                     u3330:
  4928   00219E                     
  4929                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1537:  
      +                              return cnt;
  4930   00219E  C01D  F019         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  4931   0021A2  C01E  F01A         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  4932   0021A6  EF04  F011         	goto	l1672
  4933   0021AA                     l4092:
  4934                           
  4935                           ; BSR set to: 0
  4936   0021AA  C023  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4937   0021AE                     	if	1	;There is more than 1 active tblptr byte
  4938   0021AE  0E10               	movlw	high __smallconst
  4939   0021B0  6EF7               	movwf	tblptrh,c
  4940   0021B2                     	endif
  4941   0021B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4942   0021B2  6AF8               	clrf	tblptru,c
  4943   0021B4                     	endif
  4944   0021B4                     	if	0	;tblptru may be non-zero
  4945   0021B4                     	endif
  4946   0021B4  0008               	tblrd		*
  4947   0021B6  50F5               	movf	tablat,w,c
  4948                           
  4949                           ; Switch size 1, requested type "simple"
  4950                           ; Number of cases is 1, Range of values is 117 to 117
  4951                           ; switch strategies available:
  4952                           ; Name         Instructions Cycles
  4953                           ; simple_byte            4     3 (average)
  4954                           ;	Chosen strategy is simple_byte
  4955   0021B8  0A75               	xorlw	117	; case 117
  4956   0021BA  B4D8               	btfsc	status,2,c
  4957   0021BC  EF81  F010         	goto	l4072
  4958   0021C0  EFE2  F010         	goto	l4094
  4959   0021C4                     l4094:
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:  
      +                                 ++*fmt;
  4963   0021C4  501A               	movf	vfpfcnvrt@fmt^0,w,c
  4964   0021C6  6ED9               	movwf	fsr2l,c
  4965   0021C8  6ADA               	clrf	fsr2h,c
  4966   0021CA  2ADF               	incf	indf2,f,c
  4967   0021CC                     
  4968                           ; BSR set to: 0
  4969                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1807:  
      +                                 return (int) 0;
  4970   0021CC  0E00               	movlw	0
  4971   0021CE  6E1A               	movwf	(?_vfpfcnvrt+1)^0,c
  4972   0021D0  0E00               	movlw	0
  4973   0021D2  6E19               	movwf	?_vfpfcnvrt^0,c
  4974   0021D4  EF04  F011         	goto	l1672
  4975   0021D8                     l4100:
  4976                           
  4977                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:  
      +                             fputc((int)(*fmt)[0], fp);
  4978   0021D8  501A               	movf	vfpfcnvrt@fmt^0,w,c
  4979   0021DA  6ED9               	movwf	fsr2l,c
  4980   0021DC  6ADA               	clrf	fsr2h,c
  4981   0021DE  CFDF FFF6          	movff	indf2,tblptrl
  4982   0021E2                     	if	1	;There is more than 1 active tblptr byte
  4983   0021E2  0E10               	movlw	high __smallconst
  4984   0021E4  6EF7               	movwf	tblptrh,c
  4985   0021E6                     	endif
  4986   0021E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4987   0021E6  6AF8               	clrf	tblptru,c
  4988   0021E8                     	endif
  4989   0021E8                     	if	0	;tblptru may be non-zero
  4990   0021E8                     	endif
  4991   0021E8  0008               	tblrd		*
  4992   0021EA  50F5               	movf	tablat,w,c
  4993   0021EC  6E11               	movwf	fputc@c^0,c
  4994   0021EE  6A12               	clrf	(fputc@c+1)^0,c
  4995   0021F0  C019  F013         	movff	vfpfcnvrt@fp,fputc@fp
  4996   0021F4  EC86  F015         	call	_fputc	;wreg free
  4997   0021F8                     
  4998                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1812:  
      +                             ++*fmt;
  4999   0021F8  501A               	movf	vfpfcnvrt@fmt^0,w,c
  5000   0021FA  6ED9               	movwf	fsr2l,c
  5001   0021FC  6ADA               	clrf	fsr2h,c
  5002   0021FE  2ADF               	incf	indf2,f,c
  5003   002200                     
  5004                           ;D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1813:  
      +                             return (int) 1;
  5005   002200  0E00               	movlw	0
  5006   002202  6E1A               	movwf	(?_vfpfcnvrt+1)^0,c
  5007   002204  0E01               	movlw	1
  5008   002206  6E19               	movwf	?_vfpfcnvrt^0,c
  5009   002208                     l1672:
  5010   002208  0012               	return		;funcret
  5011   00220A                     __end_of_vfpfcnvrt:
  5012                           	callstack 0
  5013                           
  5014 ;; *************** function _fputc *****************
  5015 ;; Defined at:
  5016 ;;		line 8 in file "D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  c               2   16[COMRAM] int 
  5019 ;;  fp              1   18[COMRAM] PTR struct _IO_FILE
  5020 ;;		 -> snprintf@f(11), 
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  2   16[COMRAM] int 
  5025 ;; Registers used:
  5026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5032 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;Total ram usage:        8 bytes
  5037 ;; Hardware stack levels used: 1
  5038 ;; Hardware stack levels required when called: 6
  5039 ;; This function calls:
  5040 ;;		_putch
  5041 ;; This function is called by:
  5042 ;;		_vfpfcnvrt
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text13
  5047   002B0C                     __ptext13:
  5048                           	callstack 0
  5049   002B0C                     _fputc:
  5050                           	callstack 20
  5051   002B0C  5013               	movf	fputc@fp^0,w,c
  5052   002B0E  B4D8               	btfsc	status,2,c
  5053   002B10  EF8C  F015         	goto	u3061
  5054   002B14  EF8E  F015         	goto	u3060
  5055   002B18                     u3061:
  5056   002B18  EF96  F015         	goto	l3936
  5057   002B1C                     u3060:
  5058   002B1C  5013               	movf	fputc@fp^0,w,c
  5059   002B1E  A4D8               	btfss	status,2,c
  5060   002B20  EF94  F015         	goto	u3071
  5061   002B24  EF96  F015         	goto	u3070
  5062   002B28                     u3071:
  5063   002B28  EF9B  F015         	goto	l3938
  5064   002B2C                     u3070:
  5065   002B2C                     l3936:
  5066   002B2C  5011               	movf	fputc@c^0,w,c
  5067   002B2E  EC8A  F01A         	call	_putch
  5068   002B32  EFDA  F015         	goto	l1693
  5069   002B36                     l3938:
  5070   002B36  5013               	movf	fputc@fp^0,w,c
  5071   002B38  6ED9               	movwf	fsr2l,c
  5072   002B3A  6ADA               	clrf	fsr2h,c
  5073   002B3C  0E09               	movlw	9
  5074   002B3E  26D9               	addwf	fsr2l,f,c
  5075   002B40  50DE               	movf	postinc2,w,c
  5076   002B42  10DE               	iorwf	postinc2,w,c
  5077   002B44  B4D8               	btfsc	status,2,c
  5078   002B46  EFA7  F015         	goto	u3081
  5079   002B4A  EFA9  F015         	goto	u3080
  5080   002B4E                     u3081:
  5081   002B4E  EFC2  F015         	goto	l3942
  5082   002B52                     u3080:
  5083   002B52  5013               	movf	fputc@fp^0,w,c
  5084   002B54  6ED9               	movwf	fsr2l,c
  5085   002B56  6ADA               	clrf	fsr2h,c
  5086   002B58  0E09               	movlw	9
  5087   002B5A  26D9               	addwf	fsr2l,f,c
  5088   002B5C  5013               	movf	fputc@fp^0,w,c
  5089   002B5E  6EE1               	movwf	fsr1l,c
  5090   002B60  6AE2               	clrf	fsr1h,c
  5091   002B62  0E02               	movlw	2
  5092   002B64  26E1               	addwf	fsr1l,f,c
  5093   002B66  50DE               	movf	postinc2,w,c
  5094   002B68  5CE6               	subwf	postinc1,w,c
  5095   002B6A  50E6               	movf	postinc1,w,c
  5096   002B6C  0A80               	xorlw	128
  5097   002B6E  6E18               	movwf	(??_fputc+4)^0,c
  5098   002B70  50DE               	movf	postinc2,w,c
  5099   002B72  0A80               	xorlw	128
  5100   002B74  5818               	subwfb	(??_fputc+4)^0,w,c
  5101   002B76  B0D8               	btfsc	status,0,c
  5102   002B78  EFC0  F015         	goto	u3091
  5103   002B7C  EFC2  F015         	goto	u3090
  5104   002B80                     u3091:
  5105   002B80  EFDA  F015         	goto	l1693
  5106   002B84                     u3090:
  5107   002B84                     l3942:
  5108   002B84  5013               	movf	fputc@fp^0,w,c
  5109   002B86  6ED9               	movwf	fsr2l,c
  5110   002B88  6ADA               	clrf	fsr2h,c
  5111   002B8A  0E02               	movlw	2
  5112   002B8C  26D9               	addwf	fsr2l,f,c
  5113   002B8E  50DF               	movf	indf2,w,c
  5114   002B90  6E14               	movwf	??_fputc^0,c
  5115   002B92  5013               	movf	fputc@fp^0,w,c
  5116   002B94  6ED9               	movwf	fsr2l,c
  5117   002B96  6ADA               	clrf	fsr2h,c
  5118   002B98  50DF               	movf	indf2,w,c
  5119   002B9A  2414               	addwf	??_fputc^0,w,c
  5120   002B9C  6ED9               	movwf	fsr2l,c
  5121   002B9E  6ADA               	clrf	fsr2h,c
  5122   002BA0  C011  FFDF         	movff	fputc@c,indf2
  5123   002BA4  5013               	movf	fputc@fp^0,w,c
  5124   002BA6  6ED9               	movwf	fsr2l,c
  5125   002BA8  6ADA               	clrf	fsr2h,c
  5126   002BAA  0E02               	movlw	2
  5127   002BAC  26D9               	addwf	fsr2l,f,c
  5128   002BAE  2ADE               	incf	postinc2,f,c
  5129   002BB0  0E00               	movlw	0
  5130   002BB2  22DD               	addwfc	postdec2,f,c
  5131   002BB4                     l1693:
  5132   002BB4  0012               	return		;funcret
  5133   002BB6                     __end_of_fputc:
  5134                           	callstack 0
  5135                           
  5136 ;; *************** function _putch *****************
  5137 ;; Defined at:
  5138 ;;		line 7 in file "D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  c               1    wreg     unsigned char 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  c               1    0[COMRAM] unsigned char 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1    wreg      void 
  5145 ;; Registers used:
  5146 ;;		wreg
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5156 ;;Total ram usage:        0 bytes
  5157 ;; Hardware stack levels used: 1
  5158 ;; Hardware stack levels required when called: 5
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_fputc
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           	psect	text14
  5167   003514                     __ptext14:
  5168                           	callstack 0
  5169   003514                     _putch:
  5170                           	callstack 20
  5171   003514  0012               	return		;funcret
  5172   003516                     __end_of_putch:
  5173                           	callstack 0
  5174                           
  5175 ;; *************** function ___lwmod *****************
  5176 ;; Defined at:
  5177 ;;		line 7 in file "D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  dividend        2   16[COMRAM] unsigned int 
  5180 ;;  divisor         2   18[COMRAM] unsigned int 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  counter         1   20[COMRAM] unsigned char 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  2   16[COMRAM] unsigned int 
  5185 ;; Registers used:
  5186 ;;		wreg, status,2, status,0
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;Total ram usage:        5 bytes
  5197 ;; Hardware stack levels used: 1
  5198 ;; Hardware stack levels required when called: 5
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_vfpfcnvrt
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text15
  5207   002DAA                     __ptext15:
  5208                           	callstack 0
  5209   002DAA                     ___lwmod:
  5210                           	callstack 21
  5211   002DAA  5013               	movf	___lwmod@divisor^0,w,c
  5212   002DAC  1014               	iorwf	(___lwmod@divisor+1)^0,w,c
  5213   002DAE  B4D8               	btfsc	status,2,c
  5214   002DB0  EFDC  F016         	goto	u3031
  5215   002DB4  EFDE  F016         	goto	u3030
  5216   002DB8                     u3031:
  5217   002DB8  EF02  F017         	goto	l1444
  5218   002DBC                     u3030:
  5219   002DBC  0E01               	movlw	1
  5220   002DBE  6E15               	movwf	___lwmod@counter^0,c
  5221   002DC0  EFE6  F016         	goto	l3922
  5222   002DC4                     l3920:
  5223   002DC4  90D8               	bcf	status,0,c
  5224   002DC6  3613               	rlcf	___lwmod@divisor^0,f,c
  5225   002DC8  3614               	rlcf	(___lwmod@divisor+1)^0,f,c
  5226   002DCA  2A15               	incf	___lwmod@counter^0,f,c
  5227   002DCC                     l3922:
  5228   002DCC  AE14               	btfss	(___lwmod@divisor+1)^0,7,c
  5229   002DCE  EFEB  F016         	goto	u3041
  5230   002DD2  EFED  F016         	goto	u3040
  5231   002DD6                     u3041:
  5232   002DD6  EFE2  F016         	goto	l3920
  5233   002DDA                     u3040:
  5234   002DDA                     l3924:
  5235   002DDA  5013               	movf	___lwmod@divisor^0,w,c
  5236   002DDC  5C11               	subwf	___lwmod@dividend^0,w,c
  5237   002DDE  5014               	movf	(___lwmod@divisor+1)^0,w,c
  5238   002DE0  5812               	subwfb	(___lwmod@dividend+1)^0,w,c
  5239   002DE2  A0D8               	btfss	status,0,c
  5240   002DE4  EFF6  F016         	goto	u3051
  5241   002DE8  EFF8  F016         	goto	u3050
  5242   002DEC                     u3051:
  5243   002DEC  EFFC  F016         	goto	l3928
  5244   002DF0                     u3050:
  5245   002DF0  5013               	movf	___lwmod@divisor^0,w,c
  5246   002DF2  5E11               	subwf	___lwmod@dividend^0,f,c
  5247   002DF4  5014               	movf	(___lwmod@divisor+1)^0,w,c
  5248   002DF6  5A12               	subwfb	(___lwmod@dividend+1)^0,f,c
  5249   002DF8                     l3928:
  5250   002DF8  90D8               	bcf	status,0,c
  5251   002DFA  3214               	rrcf	(___lwmod@divisor+1)^0,f,c
  5252   002DFC  3213               	rrcf	___lwmod@divisor^0,f,c
  5253   002DFE  2E15               	decfsz	___lwmod@counter^0,f,c
  5254   002E00  EFED  F016         	goto	l3924
  5255   002E04                     l1444:
  5256   002E04  C011  F011         	movff	___lwmod@dividend,?___lwmod
  5257   002E08  C012  F012         	movff	___lwmod@dividend+1,?___lwmod+1
  5258   002E0C  0012               	return		;funcret
  5259   002E0E                     __end_of___lwmod:
  5260                           	callstack 0
  5261                           
  5262 ;; *************** function ___lwdiv *****************
  5263 ;; Defined at:
  5264 ;;		line 7 in file "D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  dividend        2   16[COMRAM] unsigned int 
  5267 ;;  divisor         2   18[COMRAM] unsigned int 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  quotient        2   20[COMRAM] unsigned int 
  5270 ;;  counter         1   22[COMRAM] unsigned char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  2   16[COMRAM] unsigned int 
  5273 ;; Registers used:
  5274 ;;		wreg, status,2, status,0
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5280 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;Total ram usage:        7 bytes
  5285 ;; Hardware stack levels used: 1
  5286 ;; Hardware stack levels required when called: 5
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_vfpfcnvrt
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text16
  5295   002CCC                     __ptext16:
  5296                           	callstack 0
  5297   002CCC                     ___lwdiv:
  5298                           	callstack 21
  5299   002CCC  0E00               	movlw	0
  5300   002CCE  6E16               	movwf	(___lwdiv@quotient+1)^0,c
  5301   002CD0  0E00               	movlw	0
  5302   002CD2  6E15               	movwf	___lwdiv@quotient^0,c
  5303   002CD4  5013               	movf	___lwdiv@divisor^0,w,c
  5304   002CD6  1014               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5305   002CD8  B4D8               	btfsc	status,2,c
  5306   002CDA  EF71  F016         	goto	u3001
  5307   002CDE  EF73  F016         	goto	u3000
  5308   002CE2                     u3001:
  5309   002CE2  EF9B  F016         	goto	l1434
  5310   002CE6                     u3000:
  5311   002CE6  0E01               	movlw	1
  5312   002CE8  6E17               	movwf	___lwdiv@counter^0,c
  5313   002CEA  EF7B  F016         	goto	l3902
  5314   002CEE                     l3900:
  5315   002CEE  90D8               	bcf	status,0,c
  5316   002CF0  3613               	rlcf	___lwdiv@divisor^0,f,c
  5317   002CF2  3614               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5318   002CF4  2A17               	incf	___lwdiv@counter^0,f,c
  5319   002CF6                     l3902:
  5320   002CF6  AE14               	btfss	(___lwdiv@divisor+1)^0,7,c
  5321   002CF8  EF80  F016         	goto	u3011
  5322   002CFC  EF82  F016         	goto	u3010
  5323   002D00                     u3011:
  5324   002D00  EF77  F016         	goto	l3900
  5325   002D04                     u3010:
  5326   002D04                     l3904:
  5327   002D04  90D8               	bcf	status,0,c
  5328   002D06  3615               	rlcf	___lwdiv@quotient^0,f,c
  5329   002D08  3616               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5330   002D0A  5013               	movf	___lwdiv@divisor^0,w,c
  5331   002D0C  5C11               	subwf	___lwdiv@dividend^0,w,c
  5332   002D0E  5014               	movf	(___lwdiv@divisor+1)^0,w,c
  5333   002D10  5812               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5334   002D12  A0D8               	btfss	status,0,c
  5335   002D14  EF8E  F016         	goto	u3021
  5336   002D18  EF90  F016         	goto	u3020
  5337   002D1C                     u3021:
  5338   002D1C  EF95  F016         	goto	l3912
  5339   002D20                     u3020:
  5340   002D20  5013               	movf	___lwdiv@divisor^0,w,c
  5341   002D22  5E11               	subwf	___lwdiv@dividend^0,f,c
  5342   002D24  5014               	movf	(___lwdiv@divisor+1)^0,w,c
  5343   002D26  5A12               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5344   002D28  8015               	bsf	___lwdiv@quotient^0,0,c
  5345   002D2A                     l3912:
  5346   002D2A  90D8               	bcf	status,0,c
  5347   002D2C  3214               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5348   002D2E  3213               	rrcf	___lwdiv@divisor^0,f,c
  5349   002D30  2E17               	decfsz	___lwdiv@counter^0,f,c
  5350   002D32  EF82  F016         	goto	l3904
  5351   002D36                     l1434:
  5352   002D36  C015  F011         	movff	___lwdiv@quotient,?___lwdiv
  5353   002D3A  C016  F012         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5354   002D3E  0012               	return		;funcret
  5355   002D40                     __end_of___lwdiv:
  5356                           	callstack 0
  5357                           
  5358 ;; *************** function _application_instiallize *****************
  5359 ;; Defined at:
  5360 ;;		line 56 in file "app.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;		None
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;		None
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  1    wreg      unsigned char 
  5367 ;; Registers used:
  5368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;Total ram usage:        0 bytes
  5379 ;; Hardware stack levels used: 1
  5380 ;; Hardware stack levels required when called: 10
  5381 ;; This function calls:
  5382 ;;		_ecu_layer_initialize
  5383 ;;		_mcal_layer_initialize
  5384 ;; This function is called by:
  5385 ;;		_main
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text17
  5390   0034BC                     __ptext17:
  5391                           	callstack 0
  5392   0034BC                     _application_instiallize:
  5393                           	callstack 20
  5394   0034BC                     
  5395                           ;app.c: 57:    ret &= ecu_layer_initialize();
  5396   0034BC  EC50  F01A         	call	_ecu_layer_initialize	;wreg free
  5397   0034C0  166B               	andwf	_ret^0,f,c
  5398                           
  5399                           ;app.c: 58:    ret &= mcal_layer_initialize();
  5400   0034C2  EC66  F01A         	call	_mcal_layer_initialize	;wreg free
  5401   0034C6  166B               	andwf	_ret^0,f,c
  5402   0034C8                     
  5403                           ;app.c: 59:    return ret;
  5404   0034C8  506B               	movf	_ret^0,w,c
  5405   0034CA  0012               	return		;funcret
  5406   0034CC                     __end_of_application_instiallize:
  5407                           	callstack 0
  5408                           
  5409 ;; *************** function _mcal_layer_initialize *****************
  5410 ;; Defined at:
  5411 ;;		line 16 in file "MCAL_Layer/mcal_layer_init.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;		None
  5414 ;; Auto vars:     Size  Location     Type
  5415 ;;  ret             1    0        unsigned char 
  5416 ;; Return value:  Size  Location     Type
  5417 ;;                  1    wreg      unsigned char 
  5418 ;; Registers used:
  5419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5420 ;; Tracked objects:
  5421 ;;		On entry : 0/0
  5422 ;;		On exit  : 0/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5429 ;;Total ram usage:        0 bytes
  5430 ;; Hardware stack levels used: 1
  5431 ;; Hardware stack levels required when called: 8
  5432 ;; This function calls:
  5433 ;;		_hal_adc_init
  5434 ;; This function is called by:
  5435 ;;		_application_instiallize
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text18
  5440   0034CC                     __ptext18:
  5441                           	callstack 0
  5442   0034CC                     _mcal_layer_initialize:
  5443                           	callstack 21
  5444   0034CC                     
  5445                           ;MCAL_Layer/mcal_layer_init.c: 18:     hal_adc_init(&(adc_1));
  5446   0034CC  0EC4               	movlw	low _adc_1
  5447   0034CE  6E18               	movwf	hal_adc_init@ADC^0,c
  5448   0034D0  EC43  F018         	call	_hal_adc_init	;wreg free
  5449   0034D4                     
  5450                           ;MCAL_Layer/mcal_layer_init.c: 20:     return ret;
  5451   0034D4  0E01               	movlw	1
  5452   0034D6  0012               	return		;funcret
  5453   0034D8                     __end_of_mcal_layer_initialize:
  5454                           	callstack 0
  5455                           
  5456 ;; *************** function _hal_adc_init *****************
  5457 ;; Defined at:
  5458 ;;		line 125 in file "MCAL_Layer/ADC/hal_adc.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  ADC             1   23[COMRAM] PTR const struct .
  5461 ;;		 -> adc_1(6), 
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;  GIE_Pre_Sate    1    0        unsigned char 
  5464 ;;  priority        1   24[COMRAM] enum E3007
  5465 ;;  ret             1    0        unsigned char 
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  1    wreg      unsigned char 
  5468 ;; Registers used:
  5469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5475 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5479 ;;Total ram usage:        2 bytes
  5480 ;; Hardware stack levels used: 1
  5481 ;; Hardware stack levels required when called: 7
  5482 ;; This function calls:
  5483 ;;		_ADC_INTERRUPT_INIT
  5484 ;;		_ADC_Voltage_source
  5485 ;;		_ADC_choose_IN_Hdnler
  5486 ;;		_ADC_choose_port_cfg
  5487 ;;		_ADC_select_Clk_Conversion
  5488 ;;		_ADC_select_acquisition_time
  5489 ;;		_GLOBAL_INTERRUPT_RETURN_STATE
  5490 ;;		_GLOBAL_INTERUPT_DISABLE
  5491 ;; This function is called by:
  5492 ;;		_mcal_layer_initialize
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           	psect	text19
  5497   003086                     __ptext19:
  5498                           	callstack 0
  5499   003086                     _hal_adc_init:
  5500                           	callstack 21
  5501   003086                     
  5502                           ;MCAL_Layer/ADC/hal_adc.c: 132:     priority_t priority;;MCAL_Layer/ADC/hal_adc.c: 135: 
      +                              if(ADC == ((void*)0)){
  5503   003086  5018               	movf	hal_adc_init@ADC^0,w,c
  5504   003088  A4D8               	btfss	status,2,c
  5505   00308A  EF49  F018         	goto	u3341
  5506   00308E  EF4B  F018         	goto	u3340
  5507   003092                     u3341:
  5508   003092  EF4D  F018         	goto	l4114
  5509   003096                     u3340:
  5510   003096                     
  5511                           ;MCAL_Layer/ADC/hal_adc.c: 137:     }else{
  5512   003096  EF6B  F018         	goto	l922
  5513   00309A                     l4114:
  5514                           
  5515                           ;MCAL_Layer/ADC/hal_adc.c: 138:         GLOBAL_INTERUPT_DISABLE();
  5516   00309A  EC79  F01A         	call	_GLOBAL_INTERUPT_DISABLE	;wreg free
  5517   00309E                     
  5518                           ;MCAL_Layer/ADC/hal_adc.c: 139:         ADC_Voltage_source(ADC);
  5519   00309E  C018  F011         	movff	hal_adc_init@ADC,ADC_Voltage_source@ADC
  5520   0030A2  ECEE  F017         	call	_ADC_Voltage_source	;wreg free
  5521   0030A6                     
  5522                           ;MCAL_Layer/ADC/hal_adc.c: 140:         ADC_choose_port_cfg(ADC);
  5523   0030A6  C018  F011         	movff	hal_adc_init@ADC,ADC_choose_port_cfg@ADC
  5524   0030AA  EC8E  F019         	call	_ADC_choose_port_cfg	;wreg free
  5525   0030AE                     
  5526                           ;MCAL_Layer/ADC/hal_adc.c: 141:         ADC_select_acquisition_time(ADC);
  5527   0030AE  C018  F011         	movff	hal_adc_init@ADC,ADC_select_acquisition_time@ADC
  5528   0030B2  EC74  F019         	call	_ADC_select_acquisition_time	;wreg free
  5529   0030B6                     
  5530                           ;MCAL_Layer/ADC/hal_adc.c: 142:         ADC_select_Clk_Conversion(ADC);
  5531   0030B6  C018  F011         	movff	hal_adc_init@ADC,ADC_select_Clk_Conversion@ADC
  5532   0030BA  ECC1  F019         	call	_ADC_select_Clk_Conversion	;wreg free
  5533   0030BE                     
  5534                           ;MCAL_Layer/ADC/hal_adc.c: 143:         (ADCON2bits.ADFM = 1);
  5535   0030BE  8EC0               	bsf	192,7,c	;volatile
  5536   0030C0                     
  5537                           ;MCAL_Layer/ADC/hal_adc.c: 144:         (ADCON0bits.ADON = 1);
  5538   0030C0  80C2               	bsf	194,0,c	;volatile
  5539   0030C2                     
  5540                           ;MCAL_Layer/ADC/hal_adc.c: 145:         GLOBAL_INTERRUPT_RETURN_STATE(GIE_Pre_Satet);
  5541   0030C2  0E00               	movlw	0
  5542   0030C4  EC20  F01A         	call	_GLOBAL_INTERRUPT_RETURN_STATE
  5543   0030C8                     
  5544                           ;MCAL_Layer/ADC/hal_adc.c: 147:         ADC_choose_IN_Hdnler(ADC);
  5545   0030C8  C018  F011         	movff	hal_adc_init@ADC,ADC_choose_IN_Hdnler@ADC
  5546   0030CC  ECFD  F019         	call	_ADC_choose_IN_Hdnler	;wreg free
  5547   0030D0                     
  5548                           ;MCAL_Layer/ADC/hal_adc.c: 148:         ADC_INTERRUPT_INIT(priority);
  5549   0030D0  5019               	movf	hal_adc_init@priority^0,w,c
  5550   0030D2  EC41  F01A         	call	_ADC_INTERRUPT_INIT
  5551   0030D6                     l922:
  5552   0030D6  0012               	return		;funcret
  5553   0030D8                     __end_of_hal_adc_init:
  5554                           	callstack 0
  5555                           
  5556 ;; *************** function _GLOBAL_INTERRUPT_RETURN_STATE *****************
  5557 ;; Defined at:
  5558 ;;		line 36 in file "MCAL_Layer/INTERRUPT/mcal_interrupt_config.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  PrevState       1    wreg     unsigned char 
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;  PrevState       1   16[COMRAM] unsigned char 
  5563 ;;  ret             1    0        unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  1    wreg      unsigned char 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0, cstack
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;Total ram usage:        1 bytes
  5578 ;; Hardware stack levels used: 1
  5579 ;; Hardware stack levels required when called: 6
  5580 ;; This function calls:
  5581 ;;		_GLOBAL_INTERUPT_DISABLE
  5582 ;;		_GLOBAL_INTERUPT_ENABLE
  5583 ;; This function is called by:
  5584 ;;		_hal_adc_init
  5585 ;;		_EEPROM_WRITE_BYTE
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           	psect	text20
  5590   003440                     __ptext20:
  5591                           	callstack 0
  5592   003440                     _GLOBAL_INTERRUPT_RETURN_STATE:
  5593                           	callstack 21
  5594                           
  5595                           ;incstack = 0
  5596                           ;GLOBAL_INTERRUPT_RETURN_STATE@PrevState stored from wreg
  5597   003440  6E11               	movwf	GLOBAL_INTERRUPT_RETURN_STATE@PrevState^0,c
  5598   003442                     
  5599                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_config.c: 41:     if(PrevState == 0x01){
  5600   003442  0411               	decf	GLOBAL_INTERRUPT_RETURN_STATE@PrevState^0,w,c
  5601   003444  A4D8               	btfss	status,2,c
  5602   003446  EF27  F01A         	goto	u3131
  5603   00344A  EF29  F01A         	goto	u3130
  5604   00344E                     u3131:
  5605   00344E  EF2D  F01A         	goto	l3968
  5606   003452                     u3130:
  5607   003452                     
  5608                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_config.c: 42:        GLOBAL_INTERUPT_ENABLE();
  5609   003452  EC76  F01A         	call	_GLOBAL_INTERUPT_ENABLE	;wreg free
  5610                           
  5611                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_config.c: 43:     }
  5612   003456  EF2F  F01A         	goto	l3970
  5613   00345A                     l3968:
  5614                           
  5615                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_config.c: 45:        GLOBAL_INTERUPT_DISABLE();
  5616   00345A  EC79  F01A         	call	_GLOBAL_INTERUPT_DISABLE	;wreg free
  5617   00345E                     l3970:
  5618                           
  5619                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_config.c: 48:   return ret;
  5620   00345E  0E01               	movlw	1
  5621   003460  0012               	return		;funcret
  5622   003462                     __end_of_GLOBAL_INTERRUPT_RETURN_STATE:
  5623                           	callstack 0
  5624                           
  5625 ;; *************** function _ADC_select_acquisition_time *****************
  5626 ;; Defined at:
  5627 ;;		line 46 in file "MCAL_Layer/ADC/hal_adc.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  ADC             1   16[COMRAM] PTR const struct .
  5630 ;;		 -> adc_1(6), 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  ret             1    0        unsigned char 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  1    wreg      unsigned char 
  5635 ;; Registers used:
  5636 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5642 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;Total ram usage:        2 bytes
  5647 ;; Hardware stack levels used: 1
  5648 ;; Hardware stack levels required when called: 5
  5649 ;; This function calls:
  5650 ;;		Nothing
  5651 ;; This function is called by:
  5652 ;;		_hal_adc_init
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text21
  5657   0032E8                     __ptext21:
  5658                           	callstack 0
  5659   0032E8                     _ADC_select_acquisition_time:
  5660                           	callstack 22
  5661   0032E8                     
  5662                           ;MCAL_Layer/ADC/hal_adc.c: 48:     if(ADC == ((void*)0)){
  5663   0032E8  5011               	movf	ADC_select_acquisition_time@ADC^0,w,c
  5664   0032EA  A4D8               	btfss	status,2,c
  5665   0032EC  EF7A  F019         	goto	u3251
  5666   0032F0  EF7C  F019         	goto	u3250
  5667   0032F4                     u3251:
  5668   0032F4  EF7E  F019         	goto	l4026
  5669   0032F8                     u3250:
  5670   0032F8                     
  5671                           ;MCAL_Layer/ADC/hal_adc.c: 50:     }else{
  5672   0032F8  EF8D  F019         	goto	l881
  5673   0032FC                     l4026:
  5674                           
  5675                           ;MCAL_Layer/ADC/hal_adc.c: 51:        (ADCON2bits.ACQT = (uint8)ADC->acquisition_time);
  5676   0032FC  5011               	movf	ADC_select_acquisition_time@ADC^0,w,c
  5677   0032FE  6ED9               	movwf	fsr2l,c
  5678   003300  6ADA               	clrf	fsr2h,c
  5679   003302  0E03               	movlw	3
  5680   003304  26D9               	addwf	fsr2l,f,c
  5681   003306  50DF               	movf	indf2,w,c
  5682   003308  6E12               	movwf	??_ADC_select_acquisition_time^0,c
  5683   00330A  4612               	rlncf	??_ADC_select_acquisition_time^0,f,c
  5684   00330C  4612               	rlncf	??_ADC_select_acquisition_time^0,f,c
  5685   00330E  4612               	rlncf	??_ADC_select_acquisition_time^0,f,c
  5686   003310  50C0               	movf	192,w,c	;volatile
  5687   003312  1812               	xorwf	??_ADC_select_acquisition_time^0,w,c
  5688   003314  0BC7               	andlw	-57
  5689   003316  1812               	xorwf	??_ADC_select_acquisition_time^0,w,c
  5690   003318  6EC0               	movwf	192,c	;volatile
  5691   00331A                     l881:
  5692   00331A  0012               	return		;funcret
  5693   00331C                     __end_of_ADC_select_acquisition_time:
  5694                           	callstack 0
  5695                           
  5696 ;; *************** function _ADC_select_Clk_Conversion *****************
  5697 ;; Defined at:
  5698 ;;		line 55 in file "MCAL_Layer/ADC/hal_adc.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  ADC             1   16[COMRAM] PTR const struct .
  5701 ;;		 -> adc_1(6), 
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;  ret             1    0        unsigned char 
  5704 ;; Return value:  Size  Location     Type
  5705 ;;                  1    wreg      unsigned char 
  5706 ;; Registers used:
  5707 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5713 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;Total ram usage:        2 bytes
  5718 ;; Hardware stack levels used: 1
  5719 ;; Hardware stack levels required when called: 5
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_hal_adc_init
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text22
  5728   003382                     __ptext22:
  5729                           	callstack 0
  5730   003382                     _ADC_select_Clk_Conversion:
  5731                           	callstack 22
  5732   003382                     
  5733                           ;MCAL_Layer/ADC/hal_adc.c: 57:     if(ADC == ((void*)0)){
  5734   003382  5011               	movf	ADC_select_Clk_Conversion@ADC^0,w,c
  5735   003384  A4D8               	btfss	status,2,c
  5736   003386  EFC7  F019         	goto	u3261
  5737   00338A  EFC9  F019         	goto	u3260
  5738   00338E                     u3261:
  5739   00338E  EFCB  F019         	goto	l4034
  5740   003392                     u3260:
  5741   003392                     
  5742                           ;MCAL_Layer/ADC/hal_adc.c: 59:     }else{
  5743   003392  EFD7  F019         	goto	l886
  5744   003396                     l4034:
  5745                           
  5746                           ;MCAL_Layer/ADC/hal_adc.c: 60:        (ADCON2bits.ADCS = (uint8)ADC->clock_conversion);
  5747   003396  5011               	movf	ADC_select_Clk_Conversion@ADC^0,w,c
  5748   003398  6ED9               	movwf	fsr2l,c
  5749   00339A  6ADA               	clrf	fsr2h,c
  5750   00339C  0E04               	movlw	4
  5751   00339E  26D9               	addwf	fsr2l,f,c
  5752   0033A0  50DF               	movf	indf2,w,c
  5753   0033A2  6E12               	movwf	??_ADC_select_Clk_Conversion^0,c
  5754   0033A4  50C0               	movf	192,w,c	;volatile
  5755   0033A6  1812               	xorwf	??_ADC_select_Clk_Conversion^0,w,c
  5756   0033A8  0BF8               	andlw	-8
  5757   0033AA  1812               	xorwf	??_ADC_select_Clk_Conversion^0,w,c
  5758   0033AC  6EC0               	movwf	192,c	;volatile
  5759   0033AE                     l886:
  5760   0033AE  0012               	return		;funcret
  5761   0033B0                     __end_of_ADC_select_Clk_Conversion:
  5762                           	callstack 0
  5763                           
  5764 ;; *************** function _ADC_choose_port_cfg *****************
  5765 ;; Defined at:
  5766 ;;		line 93 in file "MCAL_Layer/ADC/hal_adc.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  ADC             1   16[COMRAM] PTR const struct .
  5769 ;;		 -> adc_1(6), 
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;  ret             1    0        unsigned char 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  1    wreg      unsigned char 
  5774 ;; Registers used:
  5775 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5781 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;Total ram usage:        3 bytes
  5786 ;; Hardware stack levels used: 1
  5787 ;; Hardware stack levels required when called: 5
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_hal_adc_init
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text23
  5796   00331C                     __ptext23:
  5797                           	callstack 0
  5798   00331C                     _ADC_choose_port_cfg:
  5799                           	callstack 22
  5800   00331C                     
  5801                           ;MCAL_Layer/ADC/hal_adc.c: 95:     if(ADC == ((void*)0)){
  5802   00331C  5011               	movf	ADC_choose_port_cfg@ADC^0,w,c
  5803   00331E  A4D8               	btfss	status,2,c
  5804   003320  EF94  F019         	goto	u3281
  5805   003324  EF96  F019         	goto	u3280
  5806   003328                     u3281:
  5807   003328  EF98  F019         	goto	l4050
  5808   00332C                     u3280:
  5809   00332C                     
  5810                           ;MCAL_Layer/ADC/hal_adc.c: 97:     }else{
  5811   00332C  EFA7  F019         	goto	l896
  5812   003330                     l4050:
  5813                           
  5814                           ;MCAL_Layer/ADC/hal_adc.c: 98:         (ADCON1bits.PCFG = (uint8)14U - (uint8)ADC->chann
      +                          el);
  5815   003330  5011               	movf	ADC_choose_port_cfg@ADC^0,w,c
  5816   003332  6ED9               	movwf	fsr2l,c
  5817   003334  6ADA               	clrf	fsr2h,c
  5818   003336  0E02               	movlw	2
  5819   003338  26D9               	addwf	fsr2l,f,c
  5820   00333A  50DF               	movf	indf2,w,c
  5821   00333C  6E12               	movwf	??_ADC_choose_port_cfg^0,c
  5822   00333E  5012               	movf	??_ADC_choose_port_cfg^0,w,c
  5823   003340  080E               	sublw	14
  5824   003342  6E13               	movwf	(??_ADC_choose_port_cfg+1)^0,c
  5825   003344  50C1               	movf	193,w,c	;volatile
  5826   003346  1813               	xorwf	(??_ADC_choose_port_cfg+1)^0,w,c
  5827   003348  0BF0               	andlw	-16
  5828   00334A  1813               	xorwf	(??_ADC_choose_port_cfg+1)^0,w,c
  5829   00334C  6EC1               	movwf	193,c	;volatile
  5830   00334E                     l896:
  5831   00334E  0012               	return		;funcret
  5832   003350                     __end_of_ADC_choose_port_cfg:
  5833                           	callstack 0
  5834                           
  5835 ;; *************** function _ADC_choose_IN_Hdnler *****************
  5836 ;; Defined at:
  5837 ;;		line 65 in file "MCAL_Layer/ADC/hal_adc.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  ADC             1   16[COMRAM] PTR const struct .
  5840 ;;		 -> adc_1(6), 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  ret             1    0        unsigned char 
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      unsigned char 
  5845 ;; Registers used:
  5846 ;;		wreg, fsr2l, fsr2h, status,2
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5852 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5855 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;Total ram usage:        1 bytes
  5857 ;; Hardware stack levels used: 1
  5858 ;; Hardware stack levels required when called: 5
  5859 ;; This function calls:
  5860 ;;		Nothing
  5861 ;; This function is called by:
  5862 ;;		_hal_adc_init
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           	psect	text24
  5867   0033FA                     __ptext24:
  5868                           	callstack 0
  5869   0033FA                     _ADC_choose_IN_Hdnler:
  5870                           	callstack 22
  5871   0033FA                     
  5872                           ;MCAL_Layer/ADC/hal_adc.c: 67:     if(ADC == ((void*)0)){
  5873   0033FA  5011               	movf	ADC_choose_IN_Hdnler@ADC^0,w,c
  5874   0033FC  A4D8               	btfss	status,2,c
  5875   0033FE  EF03  F01A         	goto	u3271
  5876   003402  EF05  F01A         	goto	u3270
  5877   003406                     u3271:
  5878   003406  EF07  F01A         	goto	l4042
  5879   00340A                     u3270:
  5880   00340A                     
  5881                           ;MCAL_Layer/ADC/hal_adc.c: 69:     }else{
  5882   00340A  EF0E  F01A         	goto	l891
  5883   00340E                     l4042:
  5884                           
  5885                           ;MCAL_Layer/ADC/hal_adc.c: 70:         ADC_InterruptHandler = ADC->ADC_IN_Handler;
  5886   00340E  5011               	movf	ADC_choose_IN_Hdnler@ADC^0,w,c
  5887   003410  6ED9               	movwf	fsr2l,c
  5888   003412  6ADA               	clrf	fsr2h,c
  5889   003414  CFDE F0F6          	movff	postinc2,_ADC_InterruptHandler
  5890   003418  CFDD F0F7          	movff	postdec2,_ADC_InterruptHandler+1
  5891   00341C                     l891:
  5892   00341C  0012               	return		;funcret
  5893   00341E                     __end_of_ADC_choose_IN_Hdnler:
  5894                           	callstack 0
  5895                           
  5896 ;; *************** function _ADC_Voltage_source *****************
  5897 ;; Defined at:
  5898 ;;		line 24 in file "MCAL_Layer/ADC/hal_adc.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;  ADC             1   16[COMRAM] PTR const struct .
  5901 ;;		 -> adc_1(6), 
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;  ret             1    0        unsigned char 
  5904 ;; Return value:  Size  Location     Type
  5905 ;;                  1    wreg      unsigned char 
  5906 ;; Registers used:
  5907 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5913 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5917 ;;Total ram usage:        1 bytes
  5918 ;; Hardware stack levels used: 1
  5919 ;; Hardware stack levels required when called: 5
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_hal_adc_init
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text25
  5928   002FDC                     __ptext25:
  5929                           	callstack 0
  5930   002FDC                     _ADC_Voltage_source:
  5931                           	callstack 22
  5932   002FDC                     
  5933                           ;MCAL_Layer/ADC/hal_adc.c: 26:     if(ADC == ((void*)0)){
  5934   002FDC  5011               	movf	ADC_Voltage_source@ADC^0,w,c
  5935   002FDE  A4D8               	btfss	status,2,c
  5936   002FE0  EFF4  F017         	goto	u3231
  5937   002FE4  EFF6  F017         	goto	u3230
  5938   002FE8                     u3231:
  5939   002FE8  EF00  F018         	goto	l4020
  5940   002FEC                     u3230:
  5941   002FEC                     l4018:
  5942                           
  5943                           ;MCAL_Layer/ADC/hal_adc.c: 28:     }else{
  5944   002FEC  EF18  F018         	goto	l871
  5945   002FF0                     l864:
  5946   002FF0  98C1               	bcf	193,4,c	;volatile
  5947   002FF2  9AC1               	bcf	193,5,c	;volatile
  5948   002FF4  EF18  F018         	goto	l871
  5949   002FF8                     l868:
  5950   002FF8  88C1               	bsf	193,4,c	;volatile
  5951   002FFA  8AC1               	bsf	193,5,c	;volatile
  5952   002FFC  EF18  F018         	goto	l871
  5953   003000                     l4020:
  5954   003000  5011               	movf	ADC_Voltage_source@ADC^0,w,c
  5955   003002  6ED9               	movwf	fsr2l,c
  5956   003004  6ADA               	clrf	fsr2h,c
  5957   003006  0E05               	movlw	5
  5958   003008  26D9               	addwf	fsr2l,f,c
  5959   00300A  B0DF               	btfsc	indf2,0,c
  5960   00300C  EF0A  F018         	goto	u3241
  5961   003010  EF0D  F018         	goto	u3240
  5962   003014                     u3241:
  5963   003014  0E01               	movlw	1
  5964   003016  EF0E  F018         	goto	u3246
  5965   00301A                     u3240:
  5966   00301A  0E00               	movlw	0
  5967   00301C                     u3246:
  5968                           
  5969                           ; Switch size 1, requested type "simple"
  5970                           ; Number of cases is 2, Range of values is 0 to 1
  5971                           ; switch strategies available:
  5972                           ; Name         Instructions Cycles
  5973                           ; simple_byte            7     4 (average)
  5974                           ;	Chosen strategy is simple_byte
  5975   00301C  0A00               	xorlw	0	; case 0
  5976   00301E  B4D8               	btfsc	status,2,c
  5977   003020  EFF8  F017         	goto	l864
  5978   003024  0A01               	xorlw	1	; case 1
  5979   003026  B4D8               	btfsc	status,2,c
  5980   003028  EFFC  F017         	goto	l868
  5981   00302C  EFF6  F017         	goto	l4018
  5982   003030                     l871:
  5983   003030  0012               	return		;funcret
  5984   003032                     __end_of_ADC_Voltage_source:
  5985                           	callstack 0
  5986                           
  5987 ;; *************** function _ADC_INTERRUPT_INIT *****************
  5988 ;; Defined at:
  5989 ;;		line 120 in file "MCAL_Layer/INTERRUPT/mcal_internal_interrupt.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  adc_priority    1    wreg     enum E3007
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  adc_priority    1    0[COMRAM] enum E3007
  5994 ;; Return value:  Size  Location     Type
  5995 ;;                  1    wreg      void 
  5996 ;; Registers used:
  5997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 0/0
  6001 ;;		Unchanged: 0/0
  6002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;Total ram usage:        0 bytes
  6008 ;; Hardware stack levels used: 1
  6009 ;; Hardware stack levels required when called: 6
  6010 ;; This function calls:
  6011 ;;		_GLOBAL_INTERUPT_DISABLE
  6012 ;;		_GLOBAL_INTERUPT_ENABLE
  6013 ;;		_Module_INTERRUPT_ClEAR_FLAG
  6014 ;;		_Module_INTERRUPT_ENABLE
  6015 ;; This function is called by:
  6016 ;;		_hal_adc_init
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           	psect	text26
  6021   003482                     __ptext26:
  6022                           	callstack 0
  6023   003482                     _ADC_INTERRUPT_INIT:
  6024                           	callstack 21
  6025   003482                     
  6026                           ;MCAL_Layer/INTERRUPT/mcal_internal_interrupt.c: 121:         GLOBAL_INTERUPT_DISABLE();
  6027   003482  EC79  F01A         	call	_GLOBAL_INTERUPT_DISABLE	;wreg free
  6028   003486                     
  6029                           ;MCAL_Layer/INTERRUPT/mcal_internal_interrupt.c: 122:         Module_INTERRUPT_ClEAR_FLA
      +                          G(0x01,0X06);
  6030   003486  0E06               	movlw	6
  6031   003488  6E11               	movwf	Module_INTERRUPT_ClEAR_FLAG@bit_pos^0,c
  6032   00348A  0E01               	movlw	1
  6033   00348C  ECB4  F018         	call	_Module_INTERRUPT_ClEAR_FLAG
  6034   003490                     
  6035                           ;MCAL_Layer/INTERRUPT/mcal_internal_interrupt.c: 123:         Module_INTERRUPT_ENABLE(0x
      +                          01,0X06);
  6036   003490  0E06               	movlw	6
  6037   003492  6E11               	movwf	Module_INTERRUPT_ENABLE@bit_pos^0,c
  6038   003494  0E01               	movlw	1
  6039   003496  EC37  F019         	call	_Module_INTERRUPT_ENABLE
  6040                           
  6041                           ;MCAL_Layer/INTERRUPT/mcal_internal_interrupt.c: 128:         GLOBAL_INTERUPT_ENABLE();
  6042   00349A  EC76  F01A         	call	_GLOBAL_INTERUPT_ENABLE	;wreg free
  6043   00349E  0012               	return		;funcret
  6044   0034A0                     __end_of_ADC_INTERRUPT_INIT:
  6045                           	callstack 0
  6046                           
  6047 ;; *************** function _Module_INTERRUPT_ENABLE *****************
  6048 ;; Defined at:
  6049 ;;		line 31 in file "MCAL_Layer/INTERRUPT/mcal_internal_interrupt.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;  Reg             1    wreg     unsigned char 
  6052 ;;  bit_pos         1   16[COMRAM] unsigned char 
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  Reg             1   21[COMRAM] unsigned char 
  6055 ;;  ret             1    0        unsigned char 
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      unsigned char 
  6058 ;; Registers used:
  6059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6065 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6067 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6068 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6069 ;;Total ram usage:        6 bytes
  6070 ;; Hardware stack levels used: 1
  6071 ;; Hardware stack levels required when called: 5
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_ADC_INTERRUPT_INIT
  6076 ;;		_EEPROM_INTERRUPT_INIT
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text27
  6081   00326E                     __ptext27:
  6082                           	callstack 0
  6083   00326E                     _Module_INTERRUPT_ENABLE:
  6084                           	callstack 21
  6085                           
  6086                           ;incstack = 0
  6087                           ;Module_INTERRUPT_ENABLE@Reg stored from wreg
  6088   00326E  6E16               	movwf	Module_INTERRUPT_ENABLE@Reg^0,c
  6089   003270                     
  6090                           ;MCAL_Layer/INTERRUPT/mcal_internal_interrupt.c: 36:    ((*(E_Reg[Reg])) |= ((uint8)0x01
      +                           << (bit_pos)));
  6091   003270  C011  F012         	movff	Module_INTERRUPT_ENABLE@bit_pos,??_Module_INTERRUPT_ENABLE
  6092   003274  0E01               	movlw	1
  6093   003276  6E13               	movwf	(??_Module_INTERRUPT_ENABLE+1)^0,c
  6094   003278  2A12               	incf	??_Module_INTERRUPT_ENABLE^0,f,c
  6095   00327A  EF41  F019         	goto	u2984
  6096   00327E                     u2985:
  6097   00327E  90D8               	bcf	status,0,c
  6098   003280  3613               	rlcf	(??_Module_INTERRUPT_ENABLE+1)^0,f,c
  6099   003282                     u2984:
  6100   003282  2E12               	decfsz	??_Module_INTERRUPT_ENABLE^0,f,c
  6101   003284  EF3F  F019         	goto	u2985
  6102   003288  5016               	movf	Module_INTERRUPT_ENABLE@Reg^0,w,c
  6103   00328A  0D02               	mullw	2
  6104   00328C  50F3               	movf	243,w,c
  6105   00328E  0FB6               	addlw	low _E_Reg
  6106   003290  6ED9               	movwf	fsr2l,c
  6107   003292  6ADA               	clrf	fsr2h,c
  6108   003294  CFDE F014          	movff	postinc2,??_Module_INTERRUPT_ENABLE+2
  6109   003298  CFDD F015          	movff	postdec2,??_Module_INTERRUPT_ENABLE+3
  6110   00329C  C014  FFD9         	movff	??_Module_INTERRUPT_ENABLE+2,fsr2l
  6111   0032A0  C015  FFDA         	movff	??_Module_INTERRUPT_ENABLE+3,fsr2h
  6112   0032A4  5013               	movf	(??_Module_INTERRUPT_ENABLE+1)^0,w,c
  6113   0032A6  12DF               	iorwf	indf2,f,c
  6114   0032A8                     
  6115                           ;MCAL_Layer/INTERRUPT/mcal_internal_interrupt.c: 38:   return ret;
  6116   0032A8  0E01               	movlw	1
  6117   0032AA  0012               	return		;funcret
  6118   0032AC                     __end_of_Module_INTERRUPT_ENABLE:
  6119                           	callstack 0
  6120                           
  6121 ;; *************** function _Module_INTERRUPT_ClEAR_FLAG *****************
  6122 ;; Defined at:
  6123 ;;		line 67 in file "MCAL_Layer/INTERRUPT/mcal_internal_interrupt.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  Reg             1    wreg     unsigned char 
  6126 ;;  bit_pos         1   16[COMRAM] unsigned char 
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;  Reg             1   22[COMRAM] unsigned char 
  6129 ;;  ret             1    0        unsigned char 
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  1    wreg      unsigned char 
  6132 ;; Registers used:
  6133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6134 ;; Tracked objects:
  6135 ;;		On entry : 0/0
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6139 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6140 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;Total ram usage:        7 bytes
  6144 ;; Hardware stack levels used: 1
  6145 ;; Hardware stack levels required when called: 5
  6146 ;; This function calls:
  6147 ;;		Nothing
  6148 ;; This function is called by:
  6149 ;;		_ADC_INTERRUPT_INIT
  6150 ;;		_EEPROM_INTERRUPT_INIT
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text28
  6155   003168                     __ptext28:
  6156                           	callstack 0
  6157   003168                     _Module_INTERRUPT_ClEAR_FLAG:
  6158                           	callstack 21
  6159                           
  6160                           ;incstack = 0
  6161                           ;Module_INTERRUPT_ClEAR_FLAG@Reg stored from wreg
  6162   003168  6E17               	movwf	Module_INTERRUPT_ClEAR_FLAG@Reg^0,c
  6163   00316A                     
  6164                           ;MCAL_Layer/INTERRUPT/mcal_internal_interrupt.c: 72:    ((*(F_Reg[Reg])) &= ~((uint8)0x0
      +                          1 << (bit_pos)));
  6165   00316A  C011  F012         	movff	Module_INTERRUPT_ClEAR_FLAG@bit_pos,??_Module_INTERRUPT_ClEAR_FLAG
  6166   00316E  0E01               	movlw	1
  6167   003170  6E13               	movwf	(??_Module_INTERRUPT_ClEAR_FLAG+1)^0,c
  6168   003172  2A12               	incf	??_Module_INTERRUPT_ClEAR_FLAG^0,f,c
  6169   003174  EFBE  F018         	goto	u2994
  6170   003178                     u2995:
  6171   003178  90D8               	bcf	status,0,c
  6172   00317A  3613               	rlcf	(??_Module_INTERRUPT_ClEAR_FLAG+1)^0,f,c
  6173   00317C                     u2994:
  6174   00317C  2E12               	decfsz	??_Module_INTERRUPT_ClEAR_FLAG^0,f,c
  6175   00317E  EFBC  F018         	goto	u2995
  6176   003182  5013               	movf	(??_Module_INTERRUPT_ClEAR_FLAG+1)^0,w,c
  6177   003184  0AFF               	xorlw	255
  6178   003186  6E14               	movwf	(??_Module_INTERRUPT_ClEAR_FLAG+2)^0,c
  6179   003188  5017               	movf	Module_INTERRUPT_ClEAR_FLAG@Reg^0,w,c
  6180   00318A  0D02               	mullw	2
  6181   00318C  50F3               	movf	243,w,c
  6182   00318E  0FB2               	addlw	low _F_Reg
  6183   003190  6ED9               	movwf	fsr2l,c
  6184   003192  6ADA               	clrf	fsr2h,c
  6185   003194  CFDE F015          	movff	postinc2,??_Module_INTERRUPT_ClEAR_FLAG+3
  6186   003198  CFDD F016          	movff	postdec2,??_Module_INTERRUPT_ClEAR_FLAG+4
  6187   00319C  C015  FFD9         	movff	??_Module_INTERRUPT_ClEAR_FLAG+3,fsr2l
  6188   0031A0  C016  FFDA         	movff	??_Module_INTERRUPT_ClEAR_FLAG+4,fsr2h
  6189   0031A4  5014               	movf	(??_Module_INTERRUPT_ClEAR_FLAG+2)^0,w,c
  6190   0031A6  16DF               	andwf	indf2,f,c
  6191   0031A8                     
  6192                           ;MCAL_Layer/INTERRUPT/mcal_internal_interrupt.c: 74:   return ret;
  6193   0031A8  0E01               	movlw	1
  6194   0031AA  0012               	return		;funcret
  6195   0031AC                     __end_of_Module_INTERRUPT_ClEAR_FLAG:
  6196                           	callstack 0
  6197                           
  6198 ;; *************** function _GLOBAL_INTERUPT_ENABLE *****************
  6199 ;; Defined at:
  6200 ;;		line 16 in file "MCAL_Layer/INTERRUPT/mcal_interrupt_config.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;		None
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;		None
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  1    wreg      void 
  6207 ;; Registers used:
  6208 ;;		None
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6218 ;;Total ram usage:        0 bytes
  6219 ;; Hardware stack levels used: 1
  6220 ;; Hardware stack levels required when called: 5
  6221 ;; This function calls:
  6222 ;;		Nothing
  6223 ;; This function is called by:
  6224 ;;		_GLOBAL_INTERRUPT_RETURN_STATE
  6225 ;;		_ADC_INTERRUPT_INIT
  6226 ;;		_EEPROM_INTERRUPT_INIT
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text29
  6231   0034EC                     __ptext29:
  6232                           	callstack 0
  6233   0034EC                     _GLOBAL_INTERUPT_ENABLE:
  6234                           	callstack 21
  6235   0034EC                     
  6236                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_config.c: 21:     (INTCONbits.GIE = 1);
  6237   0034EC  8EF2               	bsf	242,7,c	;volatile
  6238                           
  6239                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_config.c: 22:     (INTCONbits.PEIE = 1);
  6240   0034EE  8CF2               	bsf	242,6,c	;volatile
  6241   0034F0  0012               	return		;funcret
  6242   0034F2                     __end_of_GLOBAL_INTERUPT_ENABLE:
  6243                           	callstack 0
  6244                           
  6245 ;; *************** function _GLOBAL_INTERUPT_DISABLE *****************
  6246 ;; Defined at:
  6247 ;;		line 26 in file "MCAL_Layer/INTERRUPT/mcal_interrupt_config.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;		None
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;		None
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  1    wreg      void 
  6254 ;; Registers used:
  6255 ;;		None
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;Total ram usage:        0 bytes
  6266 ;; Hardware stack levels used: 1
  6267 ;; Hardware stack levels required when called: 5
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_GLOBAL_INTERRUPT_RETURN_STATE
  6272 ;;		_ADC_INTERRUPT_INIT
  6273 ;;		_hal_adc_init
  6274 ;;		_EEPROM_INTERRUPT_INIT
  6275 ;;		_EEPROM_WRITE_BYTE
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text30
  6280   0034F2                     __ptext30:
  6281                           	callstack 0
  6282   0034F2                     _GLOBAL_INTERUPT_DISABLE:
  6283                           	callstack 22
  6284   0034F2                     
  6285                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_config.c: 31:     (INTCONbits.GIE = 0);
  6286   0034F2  9EF2               	bcf	242,7,c	;volatile
  6287                           
  6288                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_config.c: 32:     (INTCONbits.PEIE = 0);
  6289   0034F4  9CF2               	bcf	242,6,c	;volatile
  6290   0034F6  0012               	return		;funcret
  6291   0034F8                     __end_of_GLOBAL_INTERUPT_DISABLE:
  6292                           	callstack 0
  6293                           
  6294 ;; *************** function _ecu_layer_initialize *****************
  6295 ;; Defined at:
  6296 ;;		line 16 in file "ECU_Layer/ecu_layer_init.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;		None
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;  ret             1   37[COMRAM] unsigned char 
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  1    wreg      unsigned char 
  6303 ;; Registers used:
  6304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6311 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6313 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;Total ram usage:        1 bytes
  6315 ;; Hardware stack levels used: 1
  6316 ;; Hardware stack levels required when called: 9
  6317 ;; This function calls:
  6318 ;;		_lcd_inintialize
  6319 ;;		_led_initialize
  6320 ;; This function is called by:
  6321 ;;		_application_instiallize
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           	psect	text31
  6326   0034A0                     __ptext31:
  6327                           	callstack 0
  6328   0034A0                     _ecu_layer_initialize:
  6329                           	callstack 20
  6330   0034A0                     
  6331                           ;ECU_Layer/ecu_layer_init.c: 17:      Std_RetuenType ret = (Std_RetuenType)0x01;
  6332   0034A0  0E01               	movlw	1
  6333   0034A2  6E26               	movwf	ecu_layer_initialize@ret^0,c
  6334   0034A4                     
  6335                           ;ECU_Layer/ecu_layer_init.c: 18:      ret &= led_initialize(&led1);
  6336   0034A4  0E6D               	movlw	low _led1
  6337   0034A6  6E19               	movwf	led_initialize@led_config^0,c
  6338   0034A8  EC23  F016         	call	_led_initialize	;wreg free
  6339   0034AC  1626               	andwf	ecu_layer_initialize@ret^0,f,c
  6340   0034AE                     
  6341                           ;ECU_Layer/ecu_layer_init.c: 19:           ret &= lcd_inintialize(&(view));
  6342   0034AE  0EBA               	movlw	low _view
  6343   0034B0  6E22               	movwf	lcd_inintialize@lcd^0,c
  6344   0034B2  EC5B  F012         	call	_lcd_inintialize	;wreg free
  6345   0034B6  1626               	andwf	ecu_layer_initialize@ret^0,f,c
  6346                           
  6347                           ;ECU_Layer/ecu_layer_init.c: 20:      return ret;
  6348   0034B8  5026               	movf	ecu_layer_initialize@ret^0,w,c
  6349   0034BA  0012               	return		;funcret
  6350   0034BC                     __end_of_ecu_layer_initialize:
  6351                           	callstack 0
  6352                           
  6353 ;; *************** function _led_initialize *****************
  6354 ;; Defined at:
  6355 ;;		line 18 in file "ECU_Layer/led/led.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;  led_config      1   24[COMRAM] PTR const struct .
  6358 ;;		 -> led1(1), 
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;  led             1   28[COMRAM] struct .
  6361 ;;  ret             1   27[COMRAM] unsigned char 
  6362 ;;  logic_state     1   26[COMRAM] enum E2997
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  1    wreg      unsigned char 
  6365 ;; Registers used:
  6366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6372 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6375 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6376 ;;Total ram usage:        5 bytes
  6377 ;; Hardware stack levels used: 1
  6378 ;; Hardware stack levels required when called: 6
  6379 ;; This function calls:
  6380 ;;		_gpio_pin_direction_intialize
  6381 ;;		_gpio_pin_write_logic
  6382 ;; This function is called by:
  6383 ;;		_ecu_layer_initialize
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387                           	psect	text32
  6388   002C46                     __ptext32:
  6389                           	callstack 0
  6390   002C46                     _led_initialize:
  6391                           	callstack 22
  6392   002C46                     
  6393                           ;ECU_Layer/led/led.c: 18: led_initialize(const led_t *led_config);ECU_Layer/led/led.c: 1
      +                          9: {;ECU_Layer/led/led.c: 20:   Std_RetuenType ret = (Std_RetuenType)0x01;
  6394   002C46  0E01               	movlw	1
  6395   002C48  6E1C               	movwf	led_initialize@ret^0,c
  6396   002C4A                     
  6397                           ;ECU_Layer/led/led.c: 21:   pin_config_t led = {.port = led_config->port,
  6398   002C4A  C063  F01D         	movff	led_initialize@F3079,led_initialize@led
  6399   002C4E  5019               	movf	led_initialize@led_config^0,w,c
  6400   002C50  6ED9               	movwf	fsr2l,c
  6401   002C52  6ADA               	clrf	fsr2h,c
  6402   002C54  50DF               	movf	223,w,c
  6403   002C56  0B07               	andlw	7
  6404   002C58  6E1A               	movwf	??_led_initialize^0,c
  6405   002C5A  501D               	movf	led_initialize@led^0,w,c
  6406   002C5C  181A               	xorwf	??_led_initialize^0,w,c
  6407   002C5E  0BF8               	andlw	-8
  6408   002C60  181A               	xorwf	??_led_initialize^0,w,c
  6409   002C62  6E1D               	movwf	led_initialize@led^0,c
  6410   002C64  5019               	movf	led_initialize@led_config^0,w,c
  6411   002C66  6ED9               	movwf	fsr2l,c
  6412   002C68  6ADA               	clrf	fsr2h,c
  6413   002C6A  30DF               	rrcf	223,w,c
  6414   002C6C  32E8               	rrcf	wreg,f,c
  6415   002C6E  32E8               	rrcf	wreg,f,c
  6416   002C70  0B07               	andlw	7
  6417   002C72  6E1A               	movwf	??_led_initialize^0,c
  6418   002C74  461A               	rlncf	??_led_initialize^0,f,c
  6419   002C76  461A               	rlncf	??_led_initialize^0,f,c
  6420   002C78  461A               	rlncf	??_led_initialize^0,f,c
  6421   002C7A  501D               	movf	led_initialize@led^0,w,c
  6422   002C7C  181A               	xorwf	??_led_initialize^0,w,c
  6423   002C7E  0BC7               	andlw	-57
  6424   002C80  181A               	xorwf	??_led_initialize^0,w,c
  6425   002C82  6E1D               	movwf	led_initialize@led^0,c
  6426   002C84  9C1D               	bcf	led_initialize@led^0,6,c
  6427   002C86  5019               	movf	led_initialize@led_config^0,w,c
  6428   002C88  6ED9               	movwf	fsr2l,c
  6429   002C8A  6ADA               	clrf	fsr2h,c
  6430   002C8C  ACDF               	btfss	indf2,6,c
  6431   002C8E  D002               	bra	u3385
  6432   002C90  8E1D               	bsf	led_initialize@led^0,7,c
  6433   002C92  D001               	bra	u3387
  6434   002C94                     u3385:
  6435   002C94  9E1D               	bcf	led_initialize@led^0,7,c
  6436   002C96                     u3387:
  6437   002C96                     
  6438                           ;ECU_Layer/led/led.c: 26:   logic_t logic_state = led.logic;
  6439   002C96  0E00               	movlw	0
  6440   002C98  BE1D               	btfsc	led_initialize@led^0,7,c
  6441   002C9A  0E01               	movlw	1
  6442   002C9C  6E1B               	movwf	led_initialize@logic_state^0,c
  6443   002C9E                     
  6444                           ;ECU_Layer/led/led.c: 27:   if (led_config == ((void*)0)) {
  6445   002C9E  5019               	movf	led_initialize@led_config^0,w,c
  6446   002CA0  A4D8               	btfss	status,2,c
  6447   002CA2  EF55  F016         	goto	u3391
  6448   002CA6  EF57  F016         	goto	u3390
  6449   002CAA                     u3391:
  6450   002CAA  EF5A  F016         	goto	l4206
  6451   002CAE                     u3390:
  6452   002CAE                     
  6453                           ;ECU_Layer/led/led.c: 28:     ret = (Std_RetuenType)0x00;
  6454   002CAE  6A1C               	clrf	led_initialize@ret^0,c
  6455                           
  6456                           ;ECU_Layer/led/led.c: 29:   } else {
  6457   002CB0  EF64  F016         	goto	l4208
  6458   002CB4                     l4206:
  6459                           
  6460                           ;ECU_Layer/led/led.c: 31:     gpio_pin_direction_intialize(&led);
  6461   002CB4  0E1D               	movlw	low led_initialize@led
  6462   002CB6  6E11               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
  6463   002CB8  ECC5  F011         	call	_gpio_pin_direction_intialize	;wreg free
  6464                           
  6465                           ;ECU_Layer/led/led.c: 32:     gpio_pin_write_logic(&led, logic_state);
  6466   002CBC  0E1D               	movlw	low led_initialize@led
  6467   002CBE  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  6468   002CC0  C01B  F012         	movff	led_initialize@logic_state,gpio_pin_write_logic@logic_status
  6469   002CC4  EC68  F013         	call	_gpio_pin_write_logic	;wreg free
  6470   002CC8                     l4208:
  6471                           
  6472                           ;ECU_Layer/led/led.c: 34:   return ret;
  6473   002CC8  501C               	movf	led_initialize@ret^0,w,c
  6474   002CCA  0012               	return		;funcret
  6475   002CCC                     __end_of_led_initialize:
  6476                           	callstack 0
  6477                           
  6478 ;; *************** function _gpio_pin_direction_intialize *****************
  6479 ;; Defined at:
  6480 ;;		line 21 in file "MCAL_Layer/GPIO/hal_gpio.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;  _pin_config     1   16[COMRAM] PTR const struct .
  6483 ;;		 -> relay_intialize@pin_config(1), led_initialize@led(1), 
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;  ret             1   22[COMRAM] unsigned char 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  1    wreg      unsigned char 
  6488 ;; Registers used:
  6489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6495 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6497 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6498 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6499 ;;Total ram usage:        7 bytes
  6500 ;; Hardware stack levels used: 1
  6501 ;; Hardware stack levels required when called: 5
  6502 ;; This function calls:
  6503 ;;		Nothing
  6504 ;; This function is called by:
  6505 ;;		_led_initialize
  6506 ;;		_motor_pin_intialize
  6507 ;;		_button_intialize
  6508 ;;		_relay_intialize
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text33
  6513   00238A                     __ptext33:
  6514                           	callstack 0
  6515   00238A                     _gpio_pin_direction_intialize:
  6516                           	callstack 22
  6517   00238A                     
  6518                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:     Std_RetuenType ret = (Std_RetuenType)0x01;
  6519   00238A  0E01               	movlw	1
  6520   00238C  6E17               	movwf	gpio_pin_direction_intialize@ret^0,c
  6521                           
  6522                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     if (_pin_config == ((void*)0) || _pin_config->pin >
      +                           8 - 1 ||
  6523   00238E  5011               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  6524   002390  B4D8               	btfsc	status,2,c
  6525   002392  EFCD  F011         	goto	u3141
  6526   002396  EFCF  F011         	goto	u3140
  6527   00239A                     u3141:
  6528   00239A  EFED  F011         	goto	l398
  6529   00239E                     u3140:
  6530   00239E  5011               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  6531   0023A0  6ED9               	movwf	fsr2l,c
  6532   0023A2  6ADA               	clrf	fsr2h,c
  6533   0023A4  30DF               	rrcf	223,w,c
  6534   0023A6  32E8               	rrcf	wreg,f,c
  6535   0023A8  32E8               	rrcf	wreg,f,c
  6536   0023AA  0B07               	andlw	7
  6537   0023AC  6E12               	movwf	??_gpio_pin_direction_intialize^0,c
  6538   0023AE  0E08               	movlw	8
  6539   0023B0  6012               	cpfslt	??_gpio_pin_direction_intialize^0,c
  6540   0023B2  EFDD  F011         	goto	u3151
  6541   0023B6  EFDF  F011         	goto	u3150
  6542   0023BA                     u3151:
  6543   0023BA  EFED  F011         	goto	l398
  6544   0023BE                     u3150:
  6545   0023BE  5011               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  6546   0023C0  6ED9               	movwf	fsr2l,c
  6547   0023C2  6ADA               	clrf	fsr2h,c
  6548   0023C4  50DF               	movf	223,w,c
  6549   0023C6  0B07               	andlw	7
  6550   0023C8  6E12               	movwf	??_gpio_pin_direction_intialize^0,c
  6551   0023CA  0E04               	movlw	4
  6552   0023CC  6412               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  6553   0023CE  EFEB  F011         	goto	u3161
  6554   0023D2  EFED  F011         	goto	u3160
  6555   0023D6                     u3161:
  6556   0023D6  EF43  F012         	goto	l3984
  6557   0023DA                     u3160:
  6558   0023DA                     l398:
  6559                           
  6560                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:             _pin_config->port > 5 - 1) {;MCAL_Layer/GPI
      +                          O/hal_gpio.c: 25:         ret = (Std_RetuenType)0x00;
  6561   0023DA  6A17               	clrf	gpio_pin_direction_intialize@ret^0,c
  6562                           
  6563                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     } else {
  6564   0023DC  EF59  F012         	goto	l3986
  6565   0023E0                     l3980:
  6566                           
  6567                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:                 ((*tris_register[_pin_config->port]) &=
      +                           ~((uint8)0x01 << (_pin_config->pin)));
  6568   0023E0  5011               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  6569   0023E2  6ED9               	movwf	fsr2l,c
  6570   0023E4  6ADA               	clrf	fsr2h,c
  6571   0023E6  30DF               	rrcf	223,w,c
  6572   0023E8  32E8               	rrcf	wreg,f,c
  6573   0023EA  32E8               	rrcf	wreg,f,c
  6574   0023EC  0B07               	andlw	7
  6575   0023EE  6E12               	movwf	??_gpio_pin_direction_intialize^0,c
  6576   0023F0  0E01               	movlw	1
  6577   0023F2  6E13               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  6578   0023F4  2A12               	incf	??_gpio_pin_direction_intialize^0,f,c
  6579   0023F6  EFFF  F011         	goto	u3174
  6580   0023FA                     u3175:
  6581   0023FA  90D8               	bcf	status,0,c
  6582   0023FC  3613               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  6583   0023FE                     u3174:
  6584   0023FE  2E12               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  6585   002400  EFFD  F011         	goto	u3175
  6586   002404  5013               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  6587   002406  0AFF               	xorlw	255
  6588   002408  6E14               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  6589   00240A  5011               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  6590   00240C  6ED9               	movwf	fsr2l,c
  6591   00240E  6ADA               	clrf	fsr2h,c
  6592   002410  50DF               	movf	223,w,c
  6593   002412  0B07               	andlw	7
  6594   002414  0D02               	mullw	2
  6595   002416  50F3               	movf	243,w,c
  6596   002418  0FA4               	addlw	low _tris_register
  6597   00241A  6ED9               	movwf	fsr2l,c
  6598   00241C  6ADA               	clrf	fsr2h,c
  6599   00241E  CFDE F015          	movff	postinc2,??_gpio_pin_direction_intialize+3
  6600   002422  CFDD F016          	movff	postdec2,??_gpio_pin_direction_intialize+4
  6601   002426  C015  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  6602   00242A  C016  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  6603   00242E  5014               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  6604   002430  16DF               	andwf	indf2,f,c
  6605                           
  6606                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 break;
  6607   002432  EF59  F012         	goto	l3986
  6608   002436                     l3982:
  6609                           
  6610                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 ((*tris_register[_pin_config->port]) |=
      +                           ((uint8)0x01 << (_pin_config->pin)));
  6611   002436  5011               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  6612   002438  6ED9               	movwf	fsr2l,c
  6613   00243A  6ADA               	clrf	fsr2h,c
  6614   00243C  30DF               	rrcf	223,w,c
  6615   00243E  32E8               	rrcf	wreg,f,c
  6616   002440  32E8               	rrcf	wreg,f,c
  6617   002442  0B07               	andlw	7
  6618   002444  6E12               	movwf	??_gpio_pin_direction_intialize^0,c
  6619   002446  0E01               	movlw	1
  6620   002448  6E13               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  6621   00244A  2A12               	incf	??_gpio_pin_direction_intialize^0,f,c
  6622   00244C  EF2A  F012         	goto	u3184
  6623   002450                     u3185:
  6624   002450  90D8               	bcf	status,0,c
  6625   002452  3613               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  6626   002454                     u3184:
  6627   002454  2E12               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  6628   002456  EF28  F012         	goto	u3185
  6629   00245A  5011               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  6630   00245C  6ED9               	movwf	fsr2l,c
  6631   00245E  6ADA               	clrf	fsr2h,c
  6632   002460  50DF               	movf	223,w,c
  6633   002462  0B07               	andlw	7
  6634   002464  0D02               	mullw	2
  6635   002466  50F3               	movf	243,w,c
  6636   002468  0FA4               	addlw	low _tris_register
  6637   00246A  6ED9               	movwf	fsr2l,c
  6638   00246C  6ADA               	clrf	fsr2h,c
  6639   00246E  CFDE F014          	movff	postinc2,??_gpio_pin_direction_intialize+2
  6640   002472  CFDD F015          	movff	postdec2,??_gpio_pin_direction_intialize+3
  6641   002476  C014  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  6642   00247A  C015  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  6643   00247E  5013               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  6644   002480  12DF               	iorwf	indf2,f,c
  6645                           
  6646                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:                 break;
  6647   002482  EF59  F012         	goto	l3986
  6648   002486                     l3984:
  6649   002486  5011               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  6650   002488  6ED9               	movwf	fsr2l,c
  6651   00248A  6ADA               	clrf	fsr2h,c
  6652   00248C  BCDF               	btfsc	indf2,6,c
  6653   00248E  EF4B  F012         	goto	u3191
  6654   002492  EF4E  F012         	goto	u3190
  6655   002496                     u3191:
  6656   002496  0E01               	movlw	1
  6657   002498  EF4F  F012         	goto	u3196
  6658   00249C                     u3190:
  6659   00249C  0E00               	movlw	0
  6660   00249E                     u3196:
  6661                           
  6662                           ; Switch size 1, requested type "simple"
  6663                           ; Number of cases is 2, Range of values is 0 to 1
  6664                           ; switch strategies available:
  6665                           ; Name         Instructions Cycles
  6666                           ; simple_byte            7     4 (average)
  6667                           ;	Chosen strategy is simple_byte
  6668   00249E  0A00               	xorlw	0	; case 0
  6669   0024A0  B4D8               	btfsc	status,2,c
  6670   0024A2  EFF0  F011         	goto	l3980
  6671   0024A6  0A01               	xorlw	1	; case 1
  6672   0024A8  B4D8               	btfsc	status,2,c
  6673   0024AA  EF1B  F012         	goto	l3982
  6674   0024AE  EFED  F011         	goto	l398
  6675   0024B2                     l3986:
  6676                           
  6677                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:     return ret;
  6678   0024B2  5017               	movf	gpio_pin_direction_intialize@ret^0,w,c
  6679   0024B4  0012               	return		;funcret
  6680   0024B6                     __end_of_gpio_pin_direction_intialize:
  6681                           	callstack 0
  6682                           
  6683 ;; *************** function _lcd_inintialize *****************
  6684 ;; Defined at:
  6685 ;;		line 16 in file "ECU_Layer/Lcd/lcd.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  lcd             1   33[COMRAM] PTR const struct .
  6688 ;;		 -> view(10), 
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;  wire            1   35[COMRAM] unsigned char 
  6691 ;;  ret             1   36[COMRAM] unsigned char 
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  1    wreg      unsigned char 
  6694 ;; Registers used:
  6695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6701 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6702 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6703 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6704 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;Total ram usage:        4 bytes
  6706 ;; Hardware stack levels used: 1
  6707 ;; Hardware stack levels required when called: 8
  6708 ;; This function calls:
  6709 ;;		_gpio_pin_write_direction
  6710 ;;		_gpio_pin_write_logic
  6711 ;;		_lcd_send_command
  6712 ;; This function is called by:
  6713 ;;		_ecu_layer_initialize
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           	psect	text34
  6718   0024B6                     __ptext34:
  6719                           	callstack 0
  6720   0024B6                     _lcd_inintialize:
  6721                           	callstack 20
  6722   0024B6                     
  6723                           ;ECU_Layer/Lcd/lcd.c: 17:     Std_RetuenType ret = (Std_RetuenType)0x01;
  6724   0024B6  0E01               	movlw	1
  6725   0024B8  6E25               	movwf	lcd_inintialize@ret^0,c
  6726                           
  6727                           ;ECU_Layer/Lcd/lcd.c: 18:     if(lcd == ((void*)0)){
  6728   0024BA  5022               	movf	lcd_inintialize@lcd^0,w,c
  6729   0024BC  A4D8               	btfss	status,2,c
  6730   0024BE  EF63  F012         	goto	u3351
  6731   0024C2  EF65  F012         	goto	u3350
  6732   0024C6                     u3351:
  6733   0024C6  EF68  F012         	goto	l4140
  6734   0024CA                     u3350:
  6735   0024CA                     
  6736                           ;ECU_Layer/Lcd/lcd.c: 19:         ret = (Std_RetuenType)0x00;
  6737   0024CA  6A25               	clrf	lcd_inintialize@ret^0,c
  6738                           
  6739                           ;ECU_Layer/Lcd/lcd.c: 20:     }else{
  6740   0024CC  EFE3  F012         	goto	l4172
  6741   0024D0                     l4140:
  6742                           
  6743                           ;ECU_Layer/Lcd/lcd.c: 24:     ret &= gpio_pin_write_direction(&(lcd->RS),OUTPUT);
  6744   0024D0  C022  F011         	movff	lcd_inintialize@lcd,gpio_pin_write_direction@pin_config
  6745   0024D4  0E00               	movlw	0
  6746   0024D6  6E12               	movwf	gpio_pin_write_direction@direction^0,c
  6747   0024D8  EC55  F014         	call	_gpio_pin_write_direction	;wreg free
  6748   0024DC  1625               	andwf	lcd_inintialize@ret^0,f,c
  6749                           
  6750                           ;ECU_Layer/Lcd/lcd.c: 25:     ret &= gpio_pin_write_logic(&(lcd->RS),LOW);
  6751   0024DE  C022  F011         	movff	lcd_inintialize@lcd,gpio_pin_write_logic@_pin_config
  6752   0024E2  0E00               	movlw	0
  6753   0024E4  6E12               	movwf	gpio_pin_write_logic@logic_status^0,c
  6754   0024E6  EC68  F013         	call	_gpio_pin_write_logic	;wreg free
  6755   0024EA  1625               	andwf	lcd_inintialize@ret^0,f,c
  6756                           
  6757                           ;ECU_Layer/Lcd/lcd.c: 27:     ret &= gpio_pin_write_direction(&(lcd->E),OUTPUT);
  6758   0024EC  2822               	incf	lcd_inintialize@lcd^0,w,c
  6759   0024EE  6E11               	movwf	gpio_pin_write_direction@pin_config^0,c
  6760   0024F0  0E00               	movlw	0
  6761   0024F2  6E12               	movwf	gpio_pin_write_direction@direction^0,c
  6762   0024F4  EC55  F014         	call	_gpio_pin_write_direction	;wreg free
  6763   0024F8  1625               	andwf	lcd_inintialize@ret^0,f,c
  6764                           
  6765                           ;ECU_Layer/Lcd/lcd.c: 28:     ret &= gpio_pin_write_logic(&(lcd->E),LOW);
  6766   0024FA  2822               	incf	lcd_inintialize@lcd^0,w,c
  6767   0024FC  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  6768   0024FE  0E00               	movlw	0
  6769   002500  6E12               	movwf	gpio_pin_write_logic@logic_status^0,c
  6770   002502  EC68  F013         	call	_gpio_pin_write_logic	;wreg free
  6771   002506  1625               	andwf	lcd_inintialize@ret^0,f,c
  6772   002508                     
  6773                           ;ECU_Layer/Lcd/lcd.c: 30:     for(uint8 wire = 0x00; wire <0x08; wire++){
  6774   002508  6A24               	clrf	lcd_inintialize@wire^0,c
  6775   00250A                     l4148:
  6776                           
  6777                           ;ECU_Layer/Lcd/lcd.c: 31:      ret &= gpio_pin_write_direction(&(lcd->data_bus[wire]),OU
      +                          TPUT);
  6778   00250A  5022               	movf	lcd_inintialize@lcd^0,w,c
  6779   00250C  2424               	addwf	lcd_inintialize@wire^0,w,c
  6780   00250E  0F02               	addlw	2
  6781   002510  6E11               	movwf	gpio_pin_write_direction@pin_config^0,c
  6782   002512  0E00               	movlw	0
  6783   002514  6E12               	movwf	gpio_pin_write_direction@direction^0,c
  6784   002516  EC55  F014         	call	_gpio_pin_write_direction	;wreg free
  6785   00251A  1625               	andwf	lcd_inintialize@ret^0,f,c
  6786                           
  6787                           ;ECU_Layer/Lcd/lcd.c: 32:      ret &= gpio_pin_write_logic(&(lcd->data_bus[wire]),LOW);
  6788   00251C  5022               	movf	lcd_inintialize@lcd^0,w,c
  6789   00251E  2424               	addwf	lcd_inintialize@wire^0,w,c
  6790   002520  0F02               	addlw	2
  6791   002522  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  6792   002524  0E00               	movlw	0
  6793   002526  6E12               	movwf	gpio_pin_write_logic@logic_status^0,c
  6794   002528  EC68  F013         	call	_gpio_pin_write_logic	;wreg free
  6795   00252C  1625               	andwf	lcd_inintialize@ret^0,f,c
  6796   00252E                     
  6797                           ;ECU_Layer/Lcd/lcd.c: 33:     }
  6798   00252E  2A24               	incf	lcd_inintialize@wire^0,f,c
  6799   002530  0E07               	movlw	7
  6800   002532  6424               	cpfsgt	lcd_inintialize@wire^0,c
  6801   002534  EF9E  F012         	goto	u3361
  6802   002538  EFA0  F012         	goto	u3360
  6803   00253C                     u3361:
  6804   00253C  EF85  F012         	goto	l4148
  6805   002540                     u3360:
  6806   002540                     
  6807                           ;ECU_Layer/Lcd/lcd.c: 37:     _delay((unsigned long)((15)*(8000000UL/4000.0)));
  6808   002540  0E27               	movlw	39
  6809   002542  6E23               	movwf	??_lcd_inintialize^0,c
  6810   002544  0EF5               	movlw	245
  6811   002546                     u5887:
  6812   002546  2EE8               	decfsz	wreg,f,c
  6813   002548  D7FE               	bra	u5887
  6814   00254A  2E23               	decfsz	??_lcd_inintialize^0,f,c
  6815   00254C  D7FC               	bra	u5887
  6816   00254E  0000               	nop	
  6817   002550                     
  6818                           ;ECU_Layer/Lcd/lcd.c: 38:     ret &= lcd_send_command(lcd, 0x38);
  6819   002550  C022  F01F         	movff	lcd_inintialize@lcd,lcd_send_command@lcd
  6820   002554  0E38               	movlw	56
  6821   002556  6E20               	movwf	lcd_send_command@command^0,c
  6822   002558  EC17  F019         	call	_lcd_send_command	;wreg free
  6823   00255C  1625               	andwf	lcd_inintialize@ret^0,f,c
  6824   00255E                     
  6825                           ;ECU_Layer/Lcd/lcd.c: 39:     _delay((unsigned long)((5)*(8000000UL/4000.0)));
  6826   00255E  0E0D               	movlw	13
  6827   002560  6E23               	movwf	??_lcd_inintialize^0,c
  6828   002562  0EFC               	movlw	252
  6829   002564                     u5897:
  6830   002564  2EE8               	decfsz	wreg,f,c
  6831   002566  D7FE               	bra	u5897
  6832   002568  2E23               	decfsz	??_lcd_inintialize^0,f,c
  6833   00256A  D7FC               	bra	u5897
  6834                           
  6835                           ;ECU_Layer/Lcd/lcd.c: 40:     ret &= lcd_send_command(lcd, 0x38);
  6836   00256C  C022  F01F         	movff	lcd_inintialize@lcd,lcd_send_command@lcd
  6837   002570  0E38               	movlw	56
  6838   002572  6E20               	movwf	lcd_send_command@command^0,c
  6839   002574  EC17  F019         	call	_lcd_send_command	;wreg free
  6840   002578  1625               	andwf	lcd_inintialize@ret^0,f,c
  6841   00257A                     
  6842                           ;ECU_Layer/Lcd/lcd.c: 41:     _delay((unsigned long)((150)*(8000000UL/4000000.0)));
  6843   00257A  0E64               	movlw	100
  6844   00257C                     u5907:
  6845   00257C  2EE8               	decfsz	wreg,f,c
  6846   00257E  D7FE               	bra	u5907
  6847   002580                     
  6848                           ;ECU_Layer/Lcd/lcd.c: 42:     ret &= lcd_send_command(lcd, 0x38);
  6849   002580  C022  F01F         	movff	lcd_inintialize@lcd,lcd_send_command@lcd
  6850   002584  0E38               	movlw	56
  6851   002586  6E20               	movwf	lcd_send_command@command^0,c
  6852   002588  EC17  F019         	call	_lcd_send_command	;wreg free
  6853   00258C  1625               	andwf	lcd_inintialize@ret^0,f,c
  6854   00258E                     
  6855                           ;ECU_Layer/Lcd/lcd.c: 46:     ret &= lcd_send_command(lcd,0x01);
  6856   00258E  C022  F01F         	movff	lcd_inintialize@lcd,lcd_send_command@lcd
  6857   002592  0E01               	movlw	1
  6858   002594  6E20               	movwf	lcd_send_command@command^0,c
  6859   002596  EC17  F019         	call	_lcd_send_command	;wreg free
  6860   00259A  1625               	andwf	lcd_inintialize@ret^0,f,c
  6861   00259C                     
  6862                           ;ECU_Layer/Lcd/lcd.c: 47:     ret &= lcd_send_command(lcd,0x02);
  6863   00259C  C022  F01F         	movff	lcd_inintialize@lcd,lcd_send_command@lcd
  6864   0025A0  0E02               	movlw	2
  6865   0025A2  6E20               	movwf	lcd_send_command@command^0,c
  6866   0025A4  EC17  F019         	call	_lcd_send_command	;wreg free
  6867   0025A8  1625               	andwf	lcd_inintialize@ret^0,f,c
  6868   0025AA                     
  6869                           ;ECU_Layer/Lcd/lcd.c: 48:     ret &= lcd_send_command(lcd, 0x06);
  6870   0025AA  C022  F01F         	movff	lcd_inintialize@lcd,lcd_send_command@lcd
  6871   0025AE  0E06               	movlw	6
  6872   0025B0  6E20               	movwf	lcd_send_command@command^0,c
  6873   0025B2  EC17  F019         	call	_lcd_send_command	;wreg free
  6874   0025B6  1625               	andwf	lcd_inintialize@ret^0,f,c
  6875   0025B8                     
  6876                           ;ECU_Layer/Lcd/lcd.c: 49:     ret &= lcd_send_command(lcd,0x0C);
  6877   0025B8  C022  F01F         	movff	lcd_inintialize@lcd,lcd_send_command@lcd
  6878   0025BC  0E0C               	movlw	12
  6879   0025BE  6E20               	movwf	lcd_send_command@command^0,c
  6880   0025C0  EC17  F019         	call	_lcd_send_command	;wreg free
  6881   0025C4  1625               	andwf	lcd_inintialize@ret^0,f,c
  6882   0025C6                     l4172:
  6883                           
  6884                           ;ECU_Layer/Lcd/lcd.c: 51:  return ret;
  6885   0025C6  5025               	movf	lcd_inintialize@ret^0,w,c
  6886   0025C8  0012               	return		;funcret
  6887   0025CA                     __end_of_lcd_inintialize:
  6888                           	callstack 0
  6889                           
  6890 ;; *************** function _lcd_send_command *****************
  6891 ;; Defined at:
  6892 ;;		line 54 in file "ECU_Layer/Lcd/lcd.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  lcd             1   30[COMRAM] PTR const struct .
  6895 ;;		 -> view(10), 
  6896 ;;  command         1   31[COMRAM] unsigned char 
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  ret             1   32[COMRAM] unsigned char 
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  1    wreg      unsigned char 
  6901 ;; Registers used:
  6902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6912 ;;Total ram usage:        3 bytes
  6913 ;; Hardware stack levels used: 1
  6914 ;; Hardware stack levels required when called: 7
  6915 ;; This function calls:
  6916 ;;		_gpio_pin_write_logic
  6917 ;;		_send_byte
  6918 ;;		_send_enable_signal
  6919 ;; This function is called by:
  6920 ;;		_lcd_inintialize
  6921 ;;		_lcd_clear_display
  6922 ;;		_lcd_set_cursor
  6923 ;;		_lcd_print_custom_chr
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text35
  6928   00322E                     __ptext35:
  6929                           	callstack 0
  6930   00322E                     _lcd_send_command:
  6931                           	callstack 21
  6932   00322E                     
  6933                           ;ECU_Layer/Lcd/lcd.c: 56:     if(lcd == ((void*)0)){
  6934   00322E  501F               	movf	lcd_send_command@lcd^0,w,c
  6935   003230  A4D8               	btfss	status,2,c
  6936   003232  EF1D  F019         	goto	u3201
  6937   003236  EF1F  F019         	goto	u3200
  6938   00323A                     u3201:
  6939   00323A  EF22  F019         	goto	l3996
  6940   00323E                     u3200:
  6941   00323E                     
  6942                           ;ECU_Layer/Lcd/lcd.c: 57:         ret = (Std_RetuenType)0x00;
  6943   00323E  6A21               	clrf	lcd_send_command@ret^0,c
  6944                           
  6945                           ;ECU_Layer/Lcd/lcd.c: 58:     }else{
  6946   003240  EF35  F019         	goto	l3998
  6947   003244                     l3996:
  6948                           
  6949                           ;ECU_Layer/Lcd/lcd.c: 59:         ret = gpio_pin_write_logic(&(lcd->RS), 0x00);
  6950   003244  C01F  F011         	movff	lcd_send_command@lcd,gpio_pin_write_logic@_pin_config
  6951   003248  0E00               	movlw	0
  6952   00324A  6E12               	movwf	gpio_pin_write_logic@logic_status^0,c
  6953   00324C  EC68  F013         	call	_gpio_pin_write_logic	;wreg free
  6954   003250  6E21               	movwf	lcd_send_command@ret^0,c
  6955                           
  6956                           ;ECU_Layer/Lcd/lcd.c: 67:         ret = send_byte(lcd, command);
  6957   003252  C01F  F019         	movff	lcd_send_command@lcd,send_byte@lcd
  6958   003256  C020  F01A         	movff	lcd_send_command@command,send_byte@command
  6959   00325A  EC96  F017         	call	_send_byte	;wreg free
  6960   00325E  6E21               	movwf	lcd_send_command@ret^0,c
  6961                           
  6962                           ;ECU_Layer/Lcd/lcd.c: 68:         ret = send_enable_signal(lcd);
  6963   003260  C01F  F019         	movff	lcd_send_command@lcd,send_enable_signal@lcd
  6964   003264  EC56  F019         	call	_send_enable_signal	;wreg free
  6965   003268  6E21               	movwf	lcd_send_command@ret^0,c
  6966   00326A                     l3998:
  6967                           
  6968                           ;ECU_Layer/Lcd/lcd.c: 71:     return ret;
  6969   00326A  5021               	movf	lcd_send_command@ret^0,w,c
  6970   00326C  0012               	return		;funcret
  6971   00326E                     __end_of_lcd_send_command:
  6972                           	callstack 0
  6973                           
  6974 ;; *************** function _send_enable_signal *****************
  6975 ;; Defined at:
  6976 ;;		line 212 in file "ECU_Layer/Lcd/lcd.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;  lcd             1   24[COMRAM] PTR const struct .
  6979 ;;		 -> view(10), 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;  ret             1   25[COMRAM] unsigned char 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      unsigned char 
  6984 ;; Registers used:
  6985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6991 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;Total ram usage:        2 bytes
  6996 ;; Hardware stack levels used: 1
  6997 ;; Hardware stack levels required when called: 6
  6998 ;; This function calls:
  6999 ;;		_gpio_pin_write_logic
  7000 ;; This function is called by:
  7001 ;;		_lcd_send_command
  7002 ;;		_lcd_print_chr
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           	psect	text36
  7007   0032AC                     __ptext36:
  7008                           	callstack 0
  7009   0032AC                     _send_enable_signal:
  7010                           	callstack 21
  7011   0032AC                     
  7012                           ;ECU_Layer/Lcd/lcd.c: 214:     if(lcd == ((void*)0)){
  7013   0032AC  5019               	movf	send_enable_signal@lcd^0,w,c
  7014   0032AE  A4D8               	btfss	status,2,c
  7015   0032B0  EF5C  F019         	goto	u2971
  7016   0032B4  EF5E  F019         	goto	u2970
  7017   0032B8                     u2971:
  7018   0032B8  EF61  F019         	goto	l3864
  7019   0032BC                     u2970:
  7020   0032BC                     
  7021                           ;ECU_Layer/Lcd/lcd.c: 215:         ret = (Std_RetuenType)0x00;
  7022   0032BC  6A1A               	clrf	send_enable_signal@ret^0,c
  7023                           
  7024                           ;ECU_Layer/Lcd/lcd.c: 216:     }else{
  7025   0032BE  EF72  F019         	goto	l3870
  7026   0032C2                     l3864:
  7027   0032C2  2819               	incf	send_enable_signal@lcd^0,w,c
  7028   0032C4  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  7029   0032C6  0E01               	movlw	1
  7030   0032C8  6E12               	movwf	gpio_pin_write_logic@logic_status^0,c
  7031   0032CA  EC68  F013         	call	_gpio_pin_write_logic	;wreg free
  7032   0032CE                     
  7033                           ;ECU_Layer/Lcd/lcd.c: 218:     _delay((unsigned long)((5)*(8000000UL/4000000.0)));
  7034   0032CE  0E03               	movlw	3
  7035   0032D0                     u5917:
  7036   0032D0  2EE8               	decfsz	wreg,f,c
  7037   0032D2  D7FE               	bra	u5917
  7038   0032D4  0000               	nop	
  7039   0032D6                     
  7040                           ;ECU_Layer/Lcd/lcd.c: 219:     ret = gpio_pin_write_logic(&(lcd->E), LOW);
  7041   0032D6  2819               	incf	send_enable_signal@lcd^0,w,c
  7042   0032D8  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  7043   0032DA  0E00               	movlw	0
  7044   0032DC  6E12               	movwf	gpio_pin_write_logic@logic_status^0,c
  7045   0032DE  EC68  F013         	call	_gpio_pin_write_logic	;wreg free
  7046   0032E2  6E1A               	movwf	send_enable_signal@ret^0,c
  7047   0032E4                     l3870:
  7048                           
  7049                           ;ECU_Layer/Lcd/lcd.c: 221:     return ret;
  7050   0032E4  501A               	movf	send_enable_signal@ret^0,w,c
  7051   0032E6  0012               	return		;funcret
  7052   0032E8                     __end_of_send_enable_signal:
  7053                           	callstack 0
  7054                           
  7055 ;; *************** function _send_byte *****************
  7056 ;; Defined at:
  7057 ;;		line 200 in file "ECU_Layer/Lcd/lcd.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;  lcd             1   24[COMRAM] PTR const struct .
  7060 ;;		 -> view(10), 
  7061 ;;  command         1   25[COMRAM] unsigned char 
  7062 ;; Auto vars:     Size  Location     Type
  7063 ;;  wire            1   29[COMRAM] unsigned char 
  7064 ;;  ret             1   28[COMRAM] unsigned char 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  1    wreg      unsigned char 
  7067 ;; Registers used:
  7068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7076 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7077 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7078 ;;Total ram usage:        6 bytes
  7079 ;; Hardware stack levels used: 1
  7080 ;; Hardware stack levels required when called: 6
  7081 ;; This function calls:
  7082 ;;		_gpio_pin_write_logic
  7083 ;; This function is called by:
  7084 ;;		_lcd_send_command
  7085 ;;		_lcd_print_chr
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text37
  7090   002F2C                     __ptext37:
  7091                           	callstack 0
  7092   002F2C                     _send_byte:
  7093                           	callstack 21
  7094   002F2C                     
  7095                           ;ECU_Layer/Lcd/lcd.c: 202:     if(lcd == ((void*)0)){
  7096   002F2C  5019               	movf	send_byte@lcd^0,w,c
  7097   002F2E  A4D8               	btfss	status,2,c
  7098   002F30  EF9C  F017         	goto	u2941
  7099   002F34  EF9E  F017         	goto	u2940
  7100   002F38                     u2941:
  7101   002F38  EFA1  F017         	goto	l214
  7102   002F3C                     u2940:
  7103   002F3C                     
  7104                           ;ECU_Layer/Lcd/lcd.c: 203:         ret = (Std_RetuenType)0x00;
  7105   002F3C  6A1D               	clrf	send_byte@ret^0,c
  7106                           
  7107                           ;ECU_Layer/Lcd/lcd.c: 204:     }else{
  7108   002F3E  EFC1  F017         	goto	l3854
  7109   002F42                     l214:
  7110                           
  7111                           ;ECU_Layer/Lcd/lcd.c: 205:     for(uint8 wire = 0x00; wire <0x08 ; wire++){
  7112   002F42  6A1E               	clrf	send_byte@wire^0,c
  7113   002F44                     l3848:
  7114                           
  7115                           ;ECU_Layer/Lcd/lcd.c: 206:       ret = gpio_pin_write_logic(&(lcd->data_bus[wire]), (((c
      +                          ommand) >> (wire)) & (uint8)0x01));
  7116   002F44  5019               	movf	send_byte@lcd^0,w,c
  7117   002F46  241E               	addwf	send_byte@wire^0,w,c
  7118   002F48  0F02               	addlw	2
  7119   002F4A  6E11               	movwf	gpio_pin_write_logic@_pin_config^0,c
  7120   002F4C  C01E  F01B         	movff	send_byte@wire,??_send_byte
  7121   002F50  C01A  F01C         	movff	send_byte@command,??_send_byte+1
  7122   002F54  2A1B               	incf	??_send_byte^0,f,c
  7123   002F56  EFAF  F017         	goto	u2954
  7124   002F5A                     u2955:
  7125   002F5A  90D8               	bcf	status,0,c
  7126   002F5C  321C               	rrcf	(??_send_byte+1)^0,f,c
  7127   002F5E                     u2954:
  7128   002F5E  2E1B               	decfsz	??_send_byte^0,f,c
  7129   002F60  EFAD  F017         	goto	u2955
  7130   002F64  501C               	movf	(??_send_byte+1)^0,w,c
  7131   002F66  0B01               	andlw	1
  7132   002F68  6E12               	movwf	gpio_pin_write_logic@logic_status^0,c
  7133   002F6A  EC68  F013         	call	_gpio_pin_write_logic	;wreg free
  7134   002F6E  6E1D               	movwf	send_byte@ret^0,c
  7135   002F70                     
  7136                           ;ECU_Layer/Lcd/lcd.c: 207:     }
  7137   002F70  2A1E               	incf	send_byte@wire^0,f,c
  7138   002F72  0E07               	movlw	7
  7139   002F74  641E               	cpfsgt	send_byte@wire^0,c
  7140   002F76  EFBF  F017         	goto	u2961
  7141   002F7A  EFC1  F017         	goto	u2960
  7142   002F7E                     u2961:
  7143   002F7E  EFA2  F017         	goto	l3848
  7144   002F82                     u2960:
  7145   002F82                     l3854:
  7146                           
  7147                           ;ECU_Layer/Lcd/lcd.c: 209:     return ret ;
  7148   002F82  501D               	movf	send_byte@ret^0,w,c
  7149   002F84  0012               	return		;funcret
  7150   002F86                     __end_of_send_byte:
  7151                           	callstack 0
  7152                           
  7153 ;; *************** function _gpio_pin_write_logic *****************
  7154 ;; Defined at:
  7155 ;;		line 112 in file "MCAL_Layer/GPIO/hal_gpio.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;  _pin_config     1   16[COMRAM] PTR const struct .
  7158 ;;		 -> view$data_bus(8), view(10), relay_turn_off@pin_config(1), relay_turn_on@pin_config(1), 
  7159 ;;		 -> led_turn_off@led(1), led_turn_on@led(1), led_initialize@led(1), 
  7160 ;;  logic_status    1   17[COMRAM] enum E2997
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;  ret             1   23[COMRAM] unsigned char 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  1    wreg      unsigned char 
  7165 ;; Registers used:
  7166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7176 ;;Total ram usage:        8 bytes
  7177 ;; Hardware stack levels used: 1
  7178 ;; Hardware stack levels required when called: 5
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_lcd_inintialize
  7183 ;;		_lcd_send_command
  7184 ;;		_lcd_print_chr
  7185 ;;		_send_byte
  7186 ;;		_send_enable_signal
  7187 ;;		_led_initialize
  7188 ;;		_sev_seg_intialize
  7189 ;;		_sev_seg_write_num
  7190 ;;		_motor_no_move
  7191 ;;		_motor_move_forward
  7192 ;;		_motor_move_backward
  7193 ;;		_keypad_initialize
  7194 ;;		_keypad_get_coordinates
  7195 ;;		_send_nipple
  7196 ;;		_led_turn_on
  7197 ;;		_led_turn_off
  7198 ;;		_relay_turn_on
  7199 ;;		_relay_turn_off
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           	psect	text38
  7204   0026D0                     __ptext38:
  7205                           	callstack 0
  7206   0026D0                     _gpio_pin_write_logic:
  7207                           	callstack 21
  7208   0026D0                     
  7209                           ;MCAL_Layer/GPIO/hal_gpio.c: 112: Std_RetuenType gpio_pin_write_logic(const pin_config_t
      +                           *_pin_config,;MCAL_Layer/GPIO/hal_gpio.c: 113:         logic_t logic_status) {;MCAL_Lay
      +                          er/GPIO/hal_gpio.c: 114:     Std_RetuenType ret = (Std_RetuenType)0x01;
  7210   0026D0  0E01               	movlw	1
  7211   0026D2  6E18               	movwf	gpio_pin_write_logic@ret^0,c
  7212                           
  7213                           ;MCAL_Layer/GPIO/hal_gpio.c: 115:     if (_pin_config == ((void*)0)) {
  7214   0026D4  5011               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  7215   0026D6  A4D8               	btfss	status,2,c
  7216   0026D8  EF70  F013         	goto	u2911
  7217   0026DC  EF72  F013         	goto	u2910
  7218   0026E0                     u2911:
  7219   0026E0  EFC8  F013         	goto	l3824
  7220   0026E4                     u2910:
  7221   0026E4                     l3818:
  7222                           
  7223                           ;MCAL_Layer/GPIO/hal_gpio.c: 116:         ret = (Std_RetuenType)0x00;
  7224   0026E4  6A18               	clrf	gpio_pin_write_logic@ret^0,c
  7225                           
  7226                           ;MCAL_Layer/GPIO/hal_gpio.c: 117:     } else {
  7227   0026E6  EFDD  F013         	goto	l3826
  7228   0026EA                     l3820:
  7229                           
  7230                           ;MCAL_Layer/GPIO/hal_gpio.c: 120:                 ((*lat_register[_pin_config->port]) &=
      +                           ~((uint8)0x01 << (_pin_config->pin)));
  7231   0026EA  5011               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  7232   0026EC  6ED9               	movwf	fsr2l,c
  7233   0026EE  6ADA               	clrf	fsr2h,c
  7234   0026F0  30DF               	rrcf	223,w,c
  7235   0026F2  32E8               	rrcf	wreg,f,c
  7236   0026F4  32E8               	rrcf	wreg,f,c
  7237   0026F6  0B07               	andlw	7
  7238   0026F8  6E13               	movwf	??_gpio_pin_write_logic^0,c
  7239   0026FA  0E01               	movlw	1
  7240   0026FC  6E14               	movwf	(??_gpio_pin_write_logic+1)^0,c
  7241   0026FE  2A13               	incf	??_gpio_pin_write_logic^0,f,c
  7242   002700  EF84  F013         	goto	u2924
  7243   002704                     u2925:
  7244   002704  90D8               	bcf	status,0,c
  7245   002706  3614               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  7246   002708                     u2924:
  7247   002708  2E13               	decfsz	??_gpio_pin_write_logic^0,f,c
  7248   00270A  EF82  F013         	goto	u2925
  7249   00270E  5014               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  7250   002710  0AFF               	xorlw	255
  7251   002712  6E15               	movwf	(??_gpio_pin_write_logic+2)^0,c
  7252   002714  5011               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  7253   002716  6ED9               	movwf	fsr2l,c
  7254   002718  6ADA               	clrf	fsr2h,c
  7255   00271A  50DF               	movf	223,w,c
  7256   00271C  0B07               	andlw	7
  7257   00271E  0D02               	mullw	2
  7258   002720  50F3               	movf	243,w,c
  7259   002722  0F9A               	addlw	low _lat_register
  7260   002724  6ED9               	movwf	fsr2l,c
  7261   002726  6ADA               	clrf	fsr2h,c
  7262   002728  CFDE F016          	movff	postinc2,??_gpio_pin_write_logic+3
  7263   00272C  CFDD F017          	movff	postdec2,??_gpio_pin_write_logic+4
  7264   002730  C016  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  7265   002734  C017  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  7266   002738  5015               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  7267   00273A  16DF               	andwf	indf2,f,c
  7268                           
  7269                           ;MCAL_Layer/GPIO/hal_gpio.c: 121:                 break;
  7270   00273C  EFDD  F013         	goto	l3826
  7271   002740                     l3822:
  7272                           
  7273                           ;MCAL_Layer/GPIO/hal_gpio.c: 124:                 ((*lat_register[_pin_config->port]) |=
      +                           ((uint8)0x01 << (_pin_config->pin)));
  7274   002740  5011               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  7275   002742  6ED9               	movwf	fsr2l,c
  7276   002744  6ADA               	clrf	fsr2h,c
  7277   002746  30DF               	rrcf	223,w,c
  7278   002748  32E8               	rrcf	wreg,f,c
  7279   00274A  32E8               	rrcf	wreg,f,c
  7280   00274C  0B07               	andlw	7
  7281   00274E  6E13               	movwf	??_gpio_pin_write_logic^0,c
  7282   002750  0E01               	movlw	1
  7283   002752  6E14               	movwf	(??_gpio_pin_write_logic+1)^0,c
  7284   002754  2A13               	incf	??_gpio_pin_write_logic^0,f,c
  7285   002756  EFAF  F013         	goto	u2934
  7286   00275A                     u2935:
  7287   00275A  90D8               	bcf	status,0,c
  7288   00275C  3614               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  7289   00275E                     u2934:
  7290   00275E  2E13               	decfsz	??_gpio_pin_write_logic^0,f,c
  7291   002760  EFAD  F013         	goto	u2935
  7292   002764  5011               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  7293   002766  6ED9               	movwf	fsr2l,c
  7294   002768  6ADA               	clrf	fsr2h,c
  7295   00276A  50DF               	movf	223,w,c
  7296   00276C  0B07               	andlw	7
  7297   00276E  0D02               	mullw	2
  7298   002770  50F3               	movf	243,w,c
  7299   002772  0F9A               	addlw	low _lat_register
  7300   002774  6ED9               	movwf	fsr2l,c
  7301   002776  6ADA               	clrf	fsr2h,c
  7302   002778  CFDE F015          	movff	postinc2,??_gpio_pin_write_logic+2
  7303   00277C  CFDD F016          	movff	postdec2,??_gpio_pin_write_logic+3
  7304   002780  C015  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  7305   002784  C016  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  7306   002788  5014               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  7307   00278A  12DF               	iorwf	indf2,f,c
  7308                           
  7309                           ;MCAL_Layer/GPIO/hal_gpio.c: 125:                 break;
  7310   00278C  EFDD  F013         	goto	l3826
  7311   002790                     l3824:
  7312   002790  5012               	movf	gpio_pin_write_logic@logic_status^0,w,c
  7313   002792  6E13               	movwf	??_gpio_pin_write_logic^0,c
  7314   002794  6A14               	clrf	(??_gpio_pin_write_logic+1)^0,c
  7315                           
  7316                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7317                           ; Switch size 1, requested type "simple"
  7318                           ; Number of cases is 1, Range of values is 0 to 0
  7319                           ; switch strategies available:
  7320                           ; Name         Instructions Cycles
  7321                           ; simple_byte            4     3 (average)
  7322                           ;	Chosen strategy is simple_byte
  7323   002796  5014               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  7324   002798  0A00               	xorlw	0	; case 0
  7325   00279A  B4D8               	btfsc	status,2,c
  7326   00279C  EFD2  F013         	goto	l5900
  7327   0027A0  EF72  F013         	goto	l3818
  7328   0027A4                     l5900:
  7329                           
  7330                           ; Switch size 1, requested type "simple"
  7331                           ; Number of cases is 2, Range of values is 0 to 1
  7332                           ; switch strategies available:
  7333                           ; Name         Instructions Cycles
  7334                           ; simple_byte            7     4 (average)
  7335                           ;	Chosen strategy is simple_byte
  7336   0027A4  5013               	movf	??_gpio_pin_write_logic^0,w,c
  7337   0027A6  0A00               	xorlw	0	; case 0
  7338   0027A8  B4D8               	btfsc	status,2,c
  7339   0027AA  EF75  F013         	goto	l3820
  7340   0027AE  0A01               	xorlw	1	; case 1
  7341   0027B0  B4D8               	btfsc	status,2,c
  7342   0027B2  EFA0  F013         	goto	l3822
  7343   0027B6  EF72  F013         	goto	l3818
  7344   0027BA                     l3826:
  7345                           
  7346                           ;MCAL_Layer/GPIO/hal_gpio.c: 132:     return ret;
  7347   0027BA  5018               	movf	gpio_pin_write_logic@ret^0,w,c
  7348   0027BC  0012               	return		;funcret
  7349   0027BE                     __end_of_gpio_pin_write_logic:
  7350                           	callstack 0
  7351                           
  7352 ;; *************** function _gpio_pin_write_direction *****************
  7353 ;; Defined at:
  7354 ;;		line 58 in file "MCAL_Layer/GPIO/hal_gpio.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;  pin_config      1   16[COMRAM] PTR const struct .
  7357 ;;		 -> view$data_bus(8), view(10), 
  7358 ;;  direction       1   17[COMRAM] enum E3001
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;  ret             1   23[COMRAM] unsigned char 
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  1    wreg      unsigned char 
  7363 ;; Registers used:
  7364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7373 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7374 ;;Total ram usage:        8 bytes
  7375 ;; Hardware stack levels used: 1
  7376 ;; Hardware stack levels required when called: 5
  7377 ;; This function calls:
  7378 ;;		Nothing
  7379 ;; This function is called by:
  7380 ;;		_lcd_inintialize
  7381 ;;		_sev_seg_intialize
  7382 ;;		_keypad_initialize
  7383 ;; This function uses a non-reentrant model
  7384 ;;
  7385                           
  7386                           	psect	text39
  7387   0028AA                     __ptext39:
  7388                           	callstack 0
  7389   0028AA                     _gpio_pin_write_direction:
  7390                           	callstack 22
  7391   0028AA                     
  7392                           ;MCAL_Layer/GPIO/hal_gpio.c: 59:     Std_RetuenType ret = (Std_RetuenType)0x01;
  7393   0028AA  0E01               	movlw	1
  7394   0028AC  6E18               	movwf	gpio_pin_write_direction@ret^0,c
  7395                           
  7396                           ;MCAL_Layer/GPIO/hal_gpio.c: 60:     if (pin_config == ((void*)0)) {
  7397   0028AE  5011               	movf	gpio_pin_write_direction@pin_config^0,w,c
  7398   0028B0  A4D8               	btfss	status,2,c
  7399   0028B2  EF5D  F014         	goto	u3101
  7400   0028B6  EF5F  F014         	goto	u3100
  7401   0028BA                     u3101:
  7402   0028BA  EFB5  F014         	goto	l3954
  7403   0028BE                     u3100:
  7404   0028BE                     l3948:
  7405                           
  7406                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:         ret = (Std_RetuenType)0x00;
  7407   0028BE  6A18               	clrf	gpio_pin_write_direction@ret^0,c
  7408                           
  7409                           ;MCAL_Layer/GPIO/hal_gpio.c: 62:     } else {
  7410   0028C0  EFC0  F014         	goto	l3956
  7411   0028C4                     l3950:
  7412                           
  7413                           ;MCAL_Layer/GPIO/hal_gpio.c: 66:                 ((*tris_register[pin_config->port]) &= 
      +                          ~((uint8)0x01 << (pin_config->pin)));
  7414   0028C4  5011               	movf	gpio_pin_write_direction@pin_config^0,w,c
  7415   0028C6  6ED9               	movwf	fsr2l,c
  7416   0028C8  6ADA               	clrf	fsr2h,c
  7417   0028CA  30DF               	rrcf	223,w,c
  7418   0028CC  32E8               	rrcf	wreg,f,c
  7419   0028CE  32E8               	rrcf	wreg,f,c
  7420   0028D0  0B07               	andlw	7
  7421   0028D2  6E13               	movwf	??_gpio_pin_write_direction^0,c
  7422   0028D4  0E01               	movlw	1
  7423   0028D6  6E14               	movwf	(??_gpio_pin_write_direction+1)^0,c
  7424   0028D8  2A13               	incf	??_gpio_pin_write_direction^0,f,c
  7425   0028DA  EF71  F014         	goto	u3114
  7426   0028DE                     u3115:
  7427   0028DE  90D8               	bcf	status,0,c
  7428   0028E0  3614               	rlcf	(??_gpio_pin_write_direction+1)^0,f,c
  7429   0028E2                     u3114:
  7430   0028E2  2E13               	decfsz	??_gpio_pin_write_direction^0,f,c
  7431   0028E4  EF6F  F014         	goto	u3115
  7432   0028E8  5014               	movf	(??_gpio_pin_write_direction+1)^0,w,c
  7433   0028EA  0AFF               	xorlw	255
  7434   0028EC  6E15               	movwf	(??_gpio_pin_write_direction+2)^0,c
  7435   0028EE  5011               	movf	gpio_pin_write_direction@pin_config^0,w,c
  7436   0028F0  6ED9               	movwf	fsr2l,c
  7437   0028F2  6ADA               	clrf	fsr2h,c
  7438   0028F4  50DF               	movf	223,w,c
  7439   0028F6  0B07               	andlw	7
  7440   0028F8  0D02               	mullw	2
  7441   0028FA  50F3               	movf	243,w,c
  7442   0028FC  0FA4               	addlw	low _tris_register
  7443   0028FE  6ED9               	movwf	fsr2l,c
  7444   002900  6ADA               	clrf	fsr2h,c
  7445   002902  CFDE F016          	movff	postinc2,??_gpio_pin_write_direction+3
  7446   002906  CFDD F017          	movff	postdec2,??_gpio_pin_write_direction+4
  7447   00290A  C016  FFD9         	movff	??_gpio_pin_write_direction+3,fsr2l
  7448   00290E  C017  FFDA         	movff	??_gpio_pin_write_direction+4,fsr2h
  7449   002912  5015               	movf	(??_gpio_pin_write_direction+2)^0,w,c
  7450   002914  16DF               	andwf	indf2,f,c
  7451                           
  7452                           ;MCAL_Layer/GPIO/hal_gpio.c: 67:                 break;
  7453   002916  EFC0  F014         	goto	l3956
  7454   00291A                     l3952:
  7455                           
  7456                           ;MCAL_Layer/GPIO/hal_gpio.c: 70:                 ((*tris_register[pin_config->port]) |= 
      +                          ((uint8)0x01 << (pin_config->pin)));
  7457   00291A  5011               	movf	gpio_pin_write_direction@pin_config^0,w,c
  7458   00291C  6ED9               	movwf	fsr2l,c
  7459   00291E  6ADA               	clrf	fsr2h,c
  7460   002920  30DF               	rrcf	223,w,c
  7461   002922  32E8               	rrcf	wreg,f,c
  7462   002924  32E8               	rrcf	wreg,f,c
  7463   002926  0B07               	andlw	7
  7464   002928  6E13               	movwf	??_gpio_pin_write_direction^0,c
  7465   00292A  0E01               	movlw	1
  7466   00292C  6E14               	movwf	(??_gpio_pin_write_direction+1)^0,c
  7467   00292E  2A13               	incf	??_gpio_pin_write_direction^0,f,c
  7468   002930  EF9C  F014         	goto	u3124
  7469   002934                     u3125:
  7470   002934  90D8               	bcf	status,0,c
  7471   002936  3614               	rlcf	(??_gpio_pin_write_direction+1)^0,f,c
  7472   002938                     u3124:
  7473   002938  2E13               	decfsz	??_gpio_pin_write_direction^0,f,c
  7474   00293A  EF9A  F014         	goto	u3125
  7475   00293E  5011               	movf	gpio_pin_write_direction@pin_config^0,w,c
  7476   002940  6ED9               	movwf	fsr2l,c
  7477   002942  6ADA               	clrf	fsr2h,c
  7478   002944  50DF               	movf	223,w,c
  7479   002946  0B07               	andlw	7
  7480   002948  0D02               	mullw	2
  7481   00294A  50F3               	movf	243,w,c
  7482   00294C  0FA4               	addlw	low _tris_register
  7483   00294E  6ED9               	movwf	fsr2l,c
  7484   002950  6ADA               	clrf	fsr2h,c
  7485   002952  CFDE F015          	movff	postinc2,??_gpio_pin_write_direction+2
  7486   002956  CFDD F016          	movff	postdec2,??_gpio_pin_write_direction+3
  7487   00295A  C015  FFD9         	movff	??_gpio_pin_write_direction+2,fsr2l
  7488   00295E  C016  FFDA         	movff	??_gpio_pin_write_direction+3,fsr2h
  7489   002962  5014               	movf	(??_gpio_pin_write_direction+1)^0,w,c
  7490   002964  12DF               	iorwf	indf2,f,c
  7491                           
  7492                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:                 break;
  7493   002966  EFC0  F014         	goto	l3956
  7494   00296A                     l3954:
  7495   00296A  5012               	movf	gpio_pin_write_direction@direction^0,w,c
  7496                           
  7497                           ; Switch size 1, requested type "simple"
  7498                           ; Number of cases is 2, Range of values is 0 to 1
  7499                           ; switch strategies available:
  7500                           ; Name         Instructions Cycles
  7501                           ; simple_byte            7     4 (average)
  7502                           ;	Chosen strategy is simple_byte
  7503   00296C  0A00               	xorlw	0	; case 0
  7504   00296E  B4D8               	btfsc	status,2,c
  7505   002970  EF62  F014         	goto	l3950
  7506   002974  0A01               	xorlw	1	; case 1
  7507   002976  B4D8               	btfsc	status,2,c
  7508   002978  EF8D  F014         	goto	l3952
  7509   00297C  EF5F  F014         	goto	l3948
  7510   002980                     l3956:
  7511                           
  7512                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     return ret;
  7513   002980  5018               	movf	gpio_pin_write_direction@ret^0,w,c
  7514   002982  0012               	return		;funcret
  7515   002984                     __end_of_gpio_pin_write_direction:
  7516                           	callstack 0
  7517                           
  7518 ;; *************** function ___xxtofl *****************
  7519 ;; Defined at:
  7520 ;;		line 10 in file "D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  7521 ;; Parameters:    Size  Location     Type
  7522 ;;  sign            1    wreg     unsigned char 
  7523 ;;  val             4   16[COMRAM] long 
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;  sign            1   24[COMRAM] unsigned char 
  7526 ;;  arg             4   26[COMRAM] unsigned long 
  7527 ;;  exp             1   25[COMRAM] unsigned char 
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  4   16[COMRAM] unsigned char 
  7530 ;; Registers used:
  7531 ;;		wreg, status,2, status,0
  7532 ;; Tracked objects:
  7533 ;;		On entry : 0/0
  7534 ;;		On exit  : 0/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7537 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7538 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7539 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7540 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7541 ;;Total ram usage:       14 bytes
  7542 ;; Hardware stack levels used: 1
  7543 ;; Hardware stack levels required when called: 5
  7544 ;; This function calls:
  7545 ;;		Nothing
  7546 ;; This function is called by:
  7547 ;;		_main
  7548 ;; This function uses a non-reentrant model
  7549 ;;
  7550                           
  7551                           	psect	text40
  7552   001EBA                     __ptext40:
  7553                           	callstack 0
  7554   001EBA                     ___xxtofl:
  7555                           	callstack 25
  7556                           
  7557                           ;incstack = 0
  7558                           ;___xxtofl@sign stored from wreg
  7559   001EBA  6E19               	movwf	___xxtofl@sign^0,c
  7560   001EBC  5019               	movf	___xxtofl@sign^0,w,c
  7561   001EBE  B4D8               	btfsc	status,2,c
  7562   001EC0  EF64  F00F         	goto	u4631
  7563   001EC4  EF66  F00F         	goto	u4630
  7564   001EC8                     u4631:
  7565   001EC8  EF88  F00F         	goto	l1598
  7566   001ECC                     u4630:
  7567   001ECC  BE14               	btfsc	(___xxtofl@val+3)^0,7,c
  7568   001ECE  EF6D  F00F         	goto	u4640
  7569   001ED2  EF6B  F00F         	goto	u4641
  7570   001ED6                     u4641:
  7571   001ED6  EF88  F00F         	goto	l1598
  7572   001EDA                     u4640:
  7573   001EDA  C011  F015         	movff	___xxtofl@val,??___xxtofl
  7574   001EDE  C012  F016         	movff	___xxtofl@val+1,??___xxtofl+1
  7575   001EE2  C013  F017         	movff	___xxtofl@val+2,??___xxtofl+2
  7576   001EE6  C014  F018         	movff	___xxtofl@val+3,??___xxtofl+3
  7577   001EEA  1E15               	comf	??___xxtofl^0,f,c
  7578   001EEC  1E16               	comf	(??___xxtofl+1)^0,f,c
  7579   001EEE  1E17               	comf	(??___xxtofl+2)^0,f,c
  7580   001EF0  1E18               	comf	(??___xxtofl+3)^0,f,c
  7581   001EF2  2A15               	incf	??___xxtofl^0,f,c
  7582   001EF4  0E00               	movlw	0
  7583   001EF6  2216               	addwfc	(??___xxtofl+1)^0,f,c
  7584   001EF8  2217               	addwfc	(??___xxtofl+2)^0,f,c
  7585   001EFA  2218               	addwfc	(??___xxtofl+3)^0,f,c
  7586   001EFC  C015  F01B         	movff	??___xxtofl,___xxtofl@arg
  7587   001F00  C016  F01C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7588   001F04  C017  F01D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7589   001F08  C018  F01E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7590   001F0C  EF90  F00F         	goto	l4992
  7591   001F10                     l1598:
  7592   001F10  C011  F01B         	movff	___xxtofl@val,___xxtofl@arg
  7593   001F14  C012  F01C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7594   001F18  C013  F01D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7595   001F1C  C014  F01E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7596   001F20                     l4992:
  7597   001F20  5011               	movf	___xxtofl@val^0,w,c
  7598   001F22  1012               	iorwf	(___xxtofl@val+1)^0,w,c
  7599   001F24  1013               	iorwf	(___xxtofl@val+2)^0,w,c
  7600   001F26  1014               	iorwf	(___xxtofl@val+3)^0,w,c
  7601   001F28  A4D8               	btfss	status,2,c
  7602   001F2A  EF99  F00F         	goto	u4651
  7603   001F2E  EF9B  F00F         	goto	u4650
  7604   001F32                     u4651:
  7605   001F32  EFA5  F00F         	goto	l4998
  7606   001F36                     u4650:
  7607   001F36  0E00               	movlw	0
  7608   001F38  6E11               	movwf	?___xxtofl^0,c
  7609   001F3A  0E00               	movlw	0
  7610   001F3C  6E12               	movwf	(?___xxtofl+1)^0,c
  7611   001F3E  0E00               	movlw	0
  7612   001F40  6E13               	movwf	(?___xxtofl+2)^0,c
  7613   001F42  0E00               	movlw	0
  7614   001F44  6E14               	movwf	(?___xxtofl+3)^0,c
  7615   001F46  EF36  F010         	goto	l1601
  7616   001F4A                     l4998:
  7617   001F4A  0E96               	movlw	150
  7618   001F4C  6E1A               	movwf	___xxtofl@exp^0,c
  7619   001F4E  EFAF  F00F         	goto	l5002
  7620   001F52                     l5000:
  7621   001F52  2A1A               	incf	___xxtofl@exp^0,f,c
  7622   001F54  90D8               	bcf	status,0,c
  7623   001F56  321E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7624   001F58  321D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7625   001F5A  321C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7626   001F5C  321B               	rrcf	___xxtofl@arg^0,f,c
  7627   001F5E                     l5002:
  7628   001F5E  0E00               	movlw	0
  7629   001F60  141B               	andwf	___xxtofl@arg^0,w,c
  7630   001F62  6E15               	movwf	??___xxtofl^0,c
  7631   001F64  0E00               	movlw	0
  7632   001F66  141C               	andwf	(___xxtofl@arg+1)^0,w,c
  7633   001F68  6E16               	movwf	(??___xxtofl+1)^0,c
  7634   001F6A  0E00               	movlw	0
  7635   001F6C  141D               	andwf	(___xxtofl@arg+2)^0,w,c
  7636   001F6E  6E17               	movwf	(??___xxtofl+2)^0,c
  7637   001F70  0EFE               	movlw	254
  7638   001F72  141E               	andwf	(___xxtofl@arg+3)^0,w,c
  7639   001F74  6E18               	movwf	(??___xxtofl+3)^0,c
  7640   001F76  5015               	movf	??___xxtofl^0,w,c
  7641   001F78  1016               	iorwf	(??___xxtofl+1)^0,w,c
  7642   001F7A  1017               	iorwf	(??___xxtofl+2)^0,w,c
  7643   001F7C  1018               	iorwf	(??___xxtofl+3)^0,w,c
  7644   001F7E  A4D8               	btfss	status,2,c
  7645   001F80  EFC4  F00F         	goto	u4661
  7646   001F84  EFC6  F00F         	goto	u4660
  7647   001F88                     u4661:
  7648   001F88  EFA9  F00F         	goto	l5000
  7649   001F8C                     u4660:
  7650   001F8C  EFD4  F00F         	goto	l1605
  7651   001F90                     l5004:
  7652   001F90  2A1A               	incf	___xxtofl@exp^0,f,c
  7653   001F92  0E01               	movlw	1
  7654   001F94  261B               	addwf	___xxtofl@arg^0,f,c
  7655   001F96  0E00               	movlw	0
  7656   001F98  221C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7657   001F9A  221D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7658   001F9C  221E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7659   001F9E  90D8               	bcf	status,0,c
  7660   001FA0  321E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7661   001FA2  321D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7662   001FA4  321C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7663   001FA6  321B               	rrcf	___xxtofl@arg^0,f,c
  7664   001FA8                     l1605:
  7665   001FA8  0E00               	movlw	0
  7666   001FAA  141B               	andwf	___xxtofl@arg^0,w,c
  7667   001FAC  6E15               	movwf	??___xxtofl^0,c
  7668   001FAE  0E00               	movlw	0
  7669   001FB0  141C               	andwf	(___xxtofl@arg+1)^0,w,c
  7670   001FB2  6E16               	movwf	(??___xxtofl+1)^0,c
  7671   001FB4  0E00               	movlw	0
  7672   001FB6  141D               	andwf	(___xxtofl@arg+2)^0,w,c
  7673   001FB8  6E17               	movwf	(??___xxtofl+2)^0,c
  7674   001FBA  0EFF               	movlw	255
  7675   001FBC  141E               	andwf	(___xxtofl@arg+3)^0,w,c
  7676   001FBE  6E18               	movwf	(??___xxtofl+3)^0,c
  7677   001FC0  5015               	movf	??___xxtofl^0,w,c
  7678   001FC2  1016               	iorwf	(??___xxtofl+1)^0,w,c
  7679   001FC4  1017               	iorwf	(??___xxtofl+2)^0,w,c
  7680   001FC6  1018               	iorwf	(??___xxtofl+3)^0,w,c
  7681   001FC8  A4D8               	btfss	status,2,c
  7682   001FCA  EFE9  F00F         	goto	u4671
  7683   001FCE  EFEB  F00F         	goto	u4670
  7684   001FD2                     u4671:
  7685   001FD2  EFC8  F00F         	goto	l5004
  7686   001FD6                     u4670:
  7687   001FD6  EFF3  F00F         	goto	l5012
  7688   001FDA                     l5010:
  7689   001FDA  061A               	decf	___xxtofl@exp^0,f,c
  7690   001FDC  90D8               	bcf	status,0,c
  7691   001FDE  361B               	rlcf	___xxtofl@arg^0,f,c
  7692   001FE0  361C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7693   001FE2  361D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7694   001FE4  361E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7695   001FE6                     l5012:
  7696   001FE6  BE1D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7697   001FE8  EFF8  F00F         	goto	u4681
  7698   001FEC  EFFA  F00F         	goto	u4680
  7699   001FF0                     u4681:
  7700   001FF0  EF02  F010         	goto	l1612
  7701   001FF4                     u4680:
  7702   001FF4  0E02               	movlw	2
  7703   001FF6  601A               	cpfslt	___xxtofl@exp^0,c
  7704   001FF8  EF00  F010         	goto	u4691
  7705   001FFC  EF02  F010         	goto	u4690
  7706   002000                     u4691:
  7707   002000  EFED  F00F         	goto	l5010
  7708   002004                     u4690:
  7709   002004                     l1612:
  7710   002004  B01A               	btfsc	___xxtofl@exp^0,0,c
  7711   002006  EF07  F010         	goto	u4701
  7712   00200A  EF09  F010         	goto	u4700
  7713   00200E                     u4701:
  7714   00200E  EF0A  F010         	goto	l5018
  7715   002012                     u4700:
  7716   002012  9E1D               	bcf	(___xxtofl@arg+2)^0,7,c
  7717   002014                     l5018:
  7718   002014  90D8               	bcf	status,0,c
  7719   002016  321A               	rrcf	___xxtofl@exp^0,f,c
  7720   002018  C01A  F015         	movff	___xxtofl@exp,??___xxtofl
  7721   00201C  6A16               	clrf	(??___xxtofl+1)^0,c
  7722   00201E  6A17               	clrf	(??___xxtofl+2)^0,c
  7723   002020  6A18               	clrf	(??___xxtofl+3)^0,c
  7724   002022  C015  F018         	movff	??___xxtofl,??___xxtofl+3
  7725   002026  6A17               	clrf	(??___xxtofl+2)^0,c
  7726   002028  6A16               	clrf	(??___xxtofl+1)^0,c
  7727   00202A  6A15               	clrf	??___xxtofl^0,c
  7728   00202C  5015               	movf	??___xxtofl^0,w,c
  7729   00202E  121B               	iorwf	___xxtofl@arg^0,f,c
  7730   002030  5016               	movf	(??___xxtofl+1)^0,w,c
  7731   002032  121C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7732   002034  5017               	movf	(??___xxtofl+2)^0,w,c
  7733   002036  121D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7734   002038  5018               	movf	(??___xxtofl+3)^0,w,c
  7735   00203A  121E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7736   00203C  5019               	movf	___xxtofl@sign^0,w,c
  7737   00203E  B4D8               	btfsc	status,2,c
  7738   002040  EF24  F010         	goto	u4711
  7739   002044  EF26  F010         	goto	u4710
  7740   002048                     u4711:
  7741   002048  EF2E  F010         	goto	l5028
  7742   00204C                     u4710:
  7743   00204C  BE14               	btfsc	(___xxtofl@val+3)^0,7,c
  7744   00204E  EF2D  F010         	goto	u4720
  7745   002052  EF2B  F010         	goto	u4721
  7746   002056                     u4721:
  7747   002056  EF2E  F010         	goto	l5028
  7748   00205A                     u4720:
  7749   00205A  8E1E               	bsf	(___xxtofl@arg+3)^0,7,c
  7750   00205C                     l5028:
  7751   00205C  C01B  F011         	movff	___xxtofl@arg,?___xxtofl
  7752   002060  C01C  F012         	movff	___xxtofl@arg+1,?___xxtofl+1
  7753   002064  C01D  F013         	movff	___xxtofl@arg+2,?___xxtofl+2
  7754   002068  C01E  F014         	movff	___xxtofl@arg+3,?___xxtofl+3
  7755   00206C                     l1601:
  7756   00206C  0012               	return		;funcret
  7757   00206E                     __end_of___xxtofl:
  7758                           	callstack 0
  7759                           
  7760 ;; *************** function ___fltol *****************
  7761 ;; Defined at:
  7762 ;;		line 43 in file "D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  f1              4   65[COMRAM] unsigned char 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  exp1            1   74[COMRAM] unsigned char 
  7767 ;;  sign1           1   73[COMRAM] unsigned char 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  4   65[COMRAM] long 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7777 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7778 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7779 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7780 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7781 ;;Total ram usage:       10 bytes
  7782 ;; Hardware stack levels used: 1
  7783 ;; Hardware stack levels required when called: 5
  7784 ;; This function calls:
  7785 ;;		Nothing
  7786 ;; This function is called by:
  7787 ;;		_main
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           	psect	text41
  7792   0025CA                     __ptext41:
  7793                           	callstack 0
  7794   0025CA                     ___fltol:
  7795                           	callstack 25
  7796   0025CA  3444               	rlcf	(___fltol@f1+2)^0,w,c
  7797   0025CC  3445               	rlcf	(___fltol@f1+3)^0,w,c
  7798   0025CE  6E4B               	movwf	___fltol@exp1^0,c
  7799   0025D0  504B               	movf	___fltol@exp1^0,w,c
  7800   0025D2  A4D8               	btfss	status,2,c
  7801   0025D4  EFEE  F012         	goto	u4561
  7802   0025D8  EFF0  F012         	goto	u4560
  7803   0025DC                     u4561:
  7804   0025DC  EFFA  F012         	goto	l4948
  7805   0025E0                     u4560:
  7806   0025E0                     l4944:
  7807   0025E0  0E00               	movlw	0
  7808   0025E2  6E42               	movwf	?___fltol^0,c
  7809   0025E4  0E00               	movlw	0
  7810   0025E6  6E43               	movwf	(?___fltol+1)^0,c
  7811   0025E8  0E00               	movlw	0
  7812   0025EA  6E44               	movwf	(?___fltol+2)^0,c
  7813   0025EC  0E00               	movlw	0
  7814   0025EE  6E45               	movwf	(?___fltol+3)^0,c
  7815   0025F0  EF67  F013         	goto	l1240
  7816   0025F4                     l4948:
  7817   0025F4  C042  F046         	movff	___fltol@f1,??___fltol
  7818   0025F8  C043  F047         	movff	___fltol@f1+1,??___fltol+1
  7819   0025FC  C044  F048         	movff	___fltol@f1+2,??___fltol+2
  7820   002600  C045  F049         	movff	___fltol@f1+3,??___fltol+3
  7821   002604  0E20               	movlw	32
  7822   002606  EF0A  F013         	goto	u4570
  7823   00260A                     u4575:
  7824   00260A  90D8               	bcf	status,0,c
  7825   00260C  3249               	rrcf	(??___fltol+3)^0,f,c
  7826   00260E  3248               	rrcf	(??___fltol+2)^0,f,c
  7827   002610  3247               	rrcf	(??___fltol+1)^0,f,c
  7828   002612  3246               	rrcf	??___fltol^0,f,c
  7829   002614                     u4570:
  7830   002614  2EE8               	decfsz	wreg,f,c
  7831   002616  EF05  F013         	goto	u4575
  7832   00261A  5046               	movf	??___fltol^0,w,c
  7833   00261C  6E4A               	movwf	___fltol@sign1^0,c
  7834   00261E  8E44               	bsf	(___fltol@f1+2)^0,7,c
  7835   002620  0EFF               	movlw	255
  7836   002622  1642               	andwf	___fltol@f1^0,f,c
  7837   002624  0EFF               	movlw	255
  7838   002626  1643               	andwf	(___fltol@f1+1)^0,f,c
  7839   002628  0EFF               	movlw	255
  7840   00262A  1644               	andwf	(___fltol@f1+2)^0,f,c
  7841   00262C  0E00               	movlw	0
  7842   00262E  1645               	andwf	(___fltol@f1+3)^0,f,c
  7843   002630  0E96               	movlw	150
  7844   002632  5E4B               	subwf	___fltol@exp1^0,f,c
  7845   002634  BE4B               	btfsc	___fltol@exp1^0,7,c
  7846   002636  EF21  F013         	goto	u4580
  7847   00263A  EF1F  F013         	goto	u4581
  7848   00263E                     u4581:
  7849   00263E  EF37  F013         	goto	l4968
  7850   002642                     u4580:
  7851   002642  504B               	movf	___fltol@exp1^0,w,c
  7852   002644  0A80               	xorlw	128
  7853   002646  0F97               	addlw	151
  7854   002648  B0D8               	btfsc	status,0,c
  7855   00264A  EF29  F013         	goto	u4591
  7856   00264E  EF2B  F013         	goto	u4590
  7857   002652                     u4591:
  7858   002652  EF2D  F013         	goto	l4964
  7859   002656                     u4590:
  7860   002656  EFF0  F012         	goto	l4944
  7861   00265A                     l4964:
  7862   00265A  90D8               	bcf	status,0,c
  7863   00265C  3245               	rrcf	(___fltol@f1+3)^0,f,c
  7864   00265E  3244               	rrcf	(___fltol@f1+2)^0,f,c
  7865   002660  3243               	rrcf	(___fltol@f1+1)^0,f,c
  7866   002662  3242               	rrcf	___fltol@f1^0,f,c
  7867   002664  3E4B               	incfsz	___fltol@exp1^0,f,c
  7868   002666  EF2D  F013         	goto	l4964
  7869   00266A  EF4F  F013         	goto	l4978
  7870   00266E                     l4968:
  7871   00266E  0E1F               	movlw	31
  7872   002670  644B               	cpfsgt	___fltol@exp1^0,c
  7873   002672  EF3D  F013         	goto	u4601
  7874   002676  EF3F  F013         	goto	u4600
  7875   00267A                     u4601:
  7876   00267A  EF47  F013         	goto	l4976
  7877   00267E                     u4600:
  7878   00267E  EFF0  F012         	goto	l4944
  7879   002682                     l4974:
  7880   002682  90D8               	bcf	status,0,c
  7881   002684  3642               	rlcf	___fltol@f1^0,f,c
  7882   002686  3643               	rlcf	(___fltol@f1+1)^0,f,c
  7883   002688  3644               	rlcf	(___fltol@f1+2)^0,f,c
  7884   00268A  3645               	rlcf	(___fltol@f1+3)^0,f,c
  7885   00268C  064B               	decf	___fltol@exp1^0,f,c
  7886   00268E                     l4976:
  7887   00268E  504B               	movf	___fltol@exp1^0,w,c
  7888   002690  A4D8               	btfss	status,2,c
  7889   002692  EF4D  F013         	goto	u4611
  7890   002696  EF4F  F013         	goto	u4610
  7891   00269A                     u4611:
  7892   00269A  EF41  F013         	goto	l4974
  7893   00269E                     u4610:
  7894   00269E                     l4978:
  7895   00269E  504A               	movf	___fltol@sign1^0,w,c
  7896   0026A0  B4D8               	btfsc	status,2,c
  7897   0026A2  EF55  F013         	goto	u4621
  7898   0026A6  EF57  F013         	goto	u4620
  7899   0026AA                     u4621:
  7900   0026AA  EF5F  F013         	goto	l4982
  7901   0026AE                     u4620:
  7902   0026AE  1E45               	comf	(___fltol@f1+3)^0,f,c
  7903   0026B0  1E44               	comf	(___fltol@f1+2)^0,f,c
  7904   0026B2  1E43               	comf	(___fltol@f1+1)^0,f,c
  7905   0026B4  6C42               	negf	___fltol@f1^0,c
  7906   0026B6  0E00               	movlw	0
  7907   0026B8  2243               	addwfc	(___fltol@f1+1)^0,f,c
  7908   0026BA  2244               	addwfc	(___fltol@f1+2)^0,f,c
  7909   0026BC  2245               	addwfc	(___fltol@f1+3)^0,f,c
  7910   0026BE                     l4982:
  7911   0026BE  C042  F042         	movff	___fltol@f1,?___fltol
  7912   0026C2  C043  F043         	movff	___fltol@f1+1,?___fltol+1
  7913   0026C6  C044  F044         	movff	___fltol@f1+2,?___fltol+2
  7914   0026CA  C045  F045         	movff	___fltol@f1+3,?___fltol+3
  7915   0026CE                     l1240:
  7916   0026CE  0012               	return		;funcret
  7917   0026D0                     __end_of___fltol:
  7918                           	callstack 0
  7919                           
  7920 ;; *************** function ___flsub *****************
  7921 ;; Defined at:
  7922 ;;		line 245 in file "D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;  b               4   32[COMRAM] long 
  7925 ;;  a               4   36[COMRAM] long 
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;		None
  7928 ;; Return value:  Size  Location     Type
  7929 ;;                  4   32[COMRAM] long 
  7930 ;; Registers used:
  7931 ;;		wreg, status,2, status,0, cstack
  7932 ;; Tracked objects:
  7933 ;;		On entry : 0/0
  7934 ;;		On exit  : 0/0
  7935 ;;		Unchanged: 0/0
  7936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7937 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7940 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7941 ;;Total ram usage:        8 bytes
  7942 ;; Hardware stack levels used: 1
  7943 ;; Hardware stack levels required when called: 6
  7944 ;; This function calls:
  7945 ;;		___fladd
  7946 ;; This function is called by:
  7947 ;;		_main
  7948 ;; This function uses a non-reentrant model
  7949 ;;
  7950                           
  7951                           	psect	text42
  7952   003122                     __ptext42:
  7953                           	callstack 0
  7954   003122                     ___flsub:
  7955                           	callstack 24
  7956   003122  0E00               	movlw	0
  7957   003124  1A25               	xorwf	___flsub@a^0,f,c
  7958   003126  0E00               	movlw	0
  7959   003128  1A26               	xorwf	(___flsub@a+1)^0,f,c
  7960   00312A  0E00               	movlw	0
  7961   00312C  1A27               	xorwf	(___flsub@a+2)^0,f,c
  7962   00312E  0E80               	movlw	128
  7963   003130  1A28               	xorwf	(___flsub@a+3)^0,f,c
  7964   003132  C021  F011         	movff	___flsub@b,___fladd@b
  7965   003136  C022  F012         	movff	___flsub@b+1,___fladd@b+1
  7966   00313A  C023  F013         	movff	___flsub@b+2,___fladd@b+2
  7967   00313E  C024  F014         	movff	___flsub@b+3,___fladd@b+3
  7968   003142  C025  F015         	movff	___flsub@a,___fladd@a
  7969   003146  C026  F016         	movff	___flsub@a+1,___fladd@a+1
  7970   00314A  C027  F017         	movff	___flsub@a+2,___fladd@a+2
  7971   00314E  C028  F018         	movff	___flsub@a+3,___fladd@a+3
  7972   003152  EC09  F008         	call	___fladd	;wreg free
  7973   003156  C011  F021         	movff	?___fladd,?___flsub
  7974   00315A  C012  F022         	movff	?___fladd+1,?___flsub+1
  7975   00315E  C013  F023         	movff	?___fladd+2,?___flsub+2
  7976   003162  C014  F024         	movff	?___fladd+3,?___flsub+3
  7977   003166  0012               	return		;funcret
  7978   003168                     __end_of___flsub:
  7979                           	callstack 0
  7980                           
  7981 ;; *************** function ___fladd *****************
  7982 ;; Defined at:
  7983 ;;		line 10 in file "D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;  b               4   16[COMRAM] long 
  7986 ;;  a               4   20[COMRAM] long 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;  grs             1   31[COMRAM] unsigned char 
  7989 ;;  bexp            1   30[COMRAM] unsigned char 
  7990 ;;  aexp            1   29[COMRAM] unsigned char 
  7991 ;;  signs           1   28[COMRAM] unsigned char 
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  4   16[COMRAM] unsigned char 
  7994 ;; Registers used:
  7995 ;;		wreg, status,2, status,0
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8001 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8002 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8003 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8004 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8005 ;;Total ram usage:       16 bytes
  8006 ;; Hardware stack levels used: 1
  8007 ;; Hardware stack levels required when called: 5
  8008 ;; This function calls:
  8009 ;;		Nothing
  8010 ;; This function is called by:
  8011 ;;		___flsub
  8012 ;; This function uses a non-reentrant model
  8013 ;;
  8014                           
  8015                           	psect	text43
  8016   001012                     __ptext43:
  8017                           	callstack 0
  8018   001012                     ___fladd:
  8019                           	callstack 24
  8020   001012  5014               	movf	(___fladd@b+3)^0,w,c
  8021   001014  0B80               	andlw	128
  8022   001016  6E1D               	movwf	___fladd@signs^0,c
  8023   001018  5014               	movf	(___fladd@b+3)^0,w,c
  8024   00101A  2414               	addwf	(___fladd@b+3)^0,w,c
  8025   00101C  6E1F               	movwf	___fladd@bexp^0,c
  8026   00101E  AE13               	btfss	(___fladd@b+2)^0,7,c
  8027   001020  EF14  F008         	goto	u3561
  8028   001024  EF16  F008         	goto	u3560
  8029   001028                     u3561:
  8030   001028  EF17  F008         	goto	l4368
  8031   00102C                     u3560:
  8032   00102C  801F               	bsf	___fladd@bexp^0,0,c
  8033   00102E                     l4368:
  8034   00102E  501F               	movf	___fladd@bexp^0,w,c
  8035   001030  B4D8               	btfsc	status,2,c
  8036   001032  EF1D  F008         	goto	u3571
  8037   001036  EF1F  F008         	goto	u3570
  8038   00103A                     u3571:
  8039   00103A  EF33  F008         	goto	l4378
  8040   00103E                     u3570:
  8041   00103E  281F               	incf	___fladd@bexp^0,w,c
  8042   001040  A4D8               	btfss	status,2,c
  8043   001042  EF25  F008         	goto	u3581
  8044   001046  EF27  F008         	goto	u3580
  8045   00104A                     u3581:
  8046   00104A  EF2F  F008         	goto	l4374
  8047   00104E                     u3580:
  8048   00104E  0E00               	movlw	0
  8049   001050  6E11               	movwf	___fladd@b^0,c
  8050   001052  0E00               	movlw	0
  8051   001054  6E12               	movwf	(___fladd@b+1)^0,c
  8052   001056  0E00               	movlw	0
  8053   001058  6E13               	movwf	(___fladd@b+2)^0,c
  8054   00105A  0E00               	movlw	0
  8055   00105C  6E14               	movwf	(___fladd@b+3)^0,c
  8056   00105E                     l4374:
  8057   00105E  8E13               	bsf	(___fladd@b+2)^0,7,c
  8058   001060  6A14               	clrf	(___fladd@b+3)^0,c
  8059   001062  EF3B  F008         	goto	l4380
  8060   001066                     l4378:
  8061   001066  0E00               	movlw	0
  8062   001068  6E11               	movwf	___fladd@b^0,c
  8063   00106A  0E00               	movlw	0
  8064   00106C  6E12               	movwf	(___fladd@b+1)^0,c
  8065   00106E  0E00               	movlw	0
  8066   001070  6E13               	movwf	(___fladd@b+2)^0,c
  8067   001072  0E00               	movlw	0
  8068   001074  6E14               	movwf	(___fladd@b+3)^0,c
  8069   001076                     l4380:
  8070   001076  5018               	movf	(___fladd@a+3)^0,w,c
  8071   001078  0B80               	andlw	128
  8072   00107A  6E1E               	movwf	___fladd@aexp^0,c
  8073   00107C  501D               	movf	___fladd@signs^0,w,c
  8074   00107E  181E               	xorwf	___fladd@aexp^0,w,c
  8075   001080  B4D8               	btfsc	status,2,c
  8076   001082  EF45  F008         	goto	u3591
  8077   001086  EF47  F008         	goto	u3590
  8078   00108A                     u3591:
  8079   00108A  EF48  F008         	goto	l4386
  8080   00108E                     u3590:
  8081   00108E  8C1D               	bsf	___fladd@signs^0,6,c
  8082   001090                     l4386:
  8083   001090  5018               	movf	(___fladd@a+3)^0,w,c
  8084   001092  2418               	addwf	(___fladd@a+3)^0,w,c
  8085   001094  6E1E               	movwf	___fladd@aexp^0,c
  8086   001096  AE17               	btfss	(___fladd@a+2)^0,7,c
  8087   001098  EF50  F008         	goto	u3601
  8088   00109C  EF52  F008         	goto	u3600
  8089   0010A0                     u3601:
  8090   0010A0  EF53  F008         	goto	l4392
  8091   0010A4                     u3600:
  8092   0010A4  801E               	bsf	___fladd@aexp^0,0,c
  8093   0010A6                     l4392:
  8094   0010A6  501E               	movf	___fladd@aexp^0,w,c
  8095   0010A8  B4D8               	btfsc	status,2,c
  8096   0010AA  EF59  F008         	goto	u3611
  8097   0010AE  EF5B  F008         	goto	u3610
  8098   0010B2                     u3611:
  8099   0010B2  EF6F  F008         	goto	l4402
  8100   0010B6                     u3610:
  8101   0010B6  281E               	incf	___fladd@aexp^0,w,c
  8102   0010B8  A4D8               	btfss	status,2,c
  8103   0010BA  EF61  F008         	goto	u3621
  8104   0010BE  EF63  F008         	goto	u3620
  8105   0010C2                     u3621:
  8106   0010C2  EF6B  F008         	goto	l4398
  8107   0010C6                     u3620:
  8108   0010C6  0E00               	movlw	0
  8109   0010C8  6E15               	movwf	___fladd@a^0,c
  8110   0010CA  0E00               	movlw	0
  8111   0010CC  6E16               	movwf	(___fladd@a+1)^0,c
  8112   0010CE  0E00               	movlw	0
  8113   0010D0  6E17               	movwf	(___fladd@a+2)^0,c
  8114   0010D2  0E00               	movlw	0
  8115   0010D4  6E18               	movwf	(___fladd@a+3)^0,c
  8116   0010D6                     l4398:
  8117   0010D6  8E17               	bsf	(___fladd@a+2)^0,7,c
  8118   0010D8  6A18               	clrf	(___fladd@a+3)^0,c
  8119   0010DA  EF77  F008         	goto	l4404
  8120   0010DE                     l4402:
  8121   0010DE  0E00               	movlw	0
  8122   0010E0  6E15               	movwf	___fladd@a^0,c
  8123   0010E2  0E00               	movlw	0
  8124   0010E4  6E16               	movwf	(___fladd@a+1)^0,c
  8125   0010E6  0E00               	movlw	0
  8126   0010E8  6E17               	movwf	(___fladd@a+2)^0,c
  8127   0010EA  0E00               	movlw	0
  8128   0010EC  6E18               	movwf	(___fladd@a+3)^0,c
  8129   0010EE                     l4404:
  8130   0010EE  501F               	movf	___fladd@bexp^0,w,c
  8131   0010F0  5C1E               	subwf	___fladd@aexp^0,w,c
  8132   0010F2  B0D8               	btfsc	status,0,c
  8133   0010F4  EF7E  F008         	goto	u3631
  8134   0010F8  EF80  F008         	goto	u3630
  8135   0010FC                     u3631:
  8136   0010FC  EFA7  F008         	goto	l4440
  8137   001100                     u3630:
  8138   001100  AC1D               	btfss	___fladd@signs^0,6,c
  8139   001102  EF85  F008         	goto	u3641
  8140   001106  EF87  F008         	goto	u3640
  8141   00110A                     u3641:
  8142   00110A  EF89  F008         	goto	l4410
  8143   00110E                     u3640:
  8144   00110E  0E80               	movlw	128
  8145   001110  1A1D               	xorwf	___fladd@signs^0,f,c
  8146   001112                     l4410:
  8147   001112  C01F  F020         	movff	___fladd@bexp,___fladd@grs
  8148   001116  C01E  F01F         	movff	___fladd@aexp,___fladd@bexp
  8149   00111A  C020  F01E         	movff	___fladd@grs,___fladd@aexp
  8150   00111E  C011  F020         	movff	___fladd@b,___fladd@grs
  8151   001122  C015  F011         	movff	___fladd@a,___fladd@b
  8152   001126  C020  F015         	movff	___fladd@grs,___fladd@a
  8153   00112A  C012  F020         	movff	___fladd@b+1,___fladd@grs
  8154   00112E  C016  F012         	movff	___fladd@a+1,___fladd@b+1
  8155   001132  C020  F016         	movff	___fladd@grs,___fladd@a+1
  8156   001136  C013  F020         	movff	___fladd@b+2,___fladd@grs
  8157   00113A  C017  F013         	movff	___fladd@a+2,___fladd@b+2
  8158   00113E  C020  F017         	movff	___fladd@grs,___fladd@a+2
  8159   001142  C014  F020         	movff	___fladd@b+3,___fladd@grs
  8160   001146  C018  F014         	movff	___fladd@a+3,___fladd@b+3
  8161   00114A  C020  F018         	movff	___fladd@grs,___fladd@a+3
  8162   00114E                     l4440:
  8163   00114E  6A20               	clrf	___fladd@grs^0,c
  8164   001150  501F               	movf	___fladd@bexp^0,w,c
  8165   001152  C01E  F019         	movff	___fladd@aexp,??___fladd
  8166   001156  6A1A               	clrf	(??___fladd+1)^0,c
  8167   001158  5E19               	subwf	??___fladd^0,f,c
  8168   00115A  0E00               	movlw	0
  8169   00115C  5A1A               	subwfb	(??___fladd+1)^0,f,c
  8170   00115E  BE1A               	btfsc	(??___fladd+1)^0,7,c
  8171   001160  EFBB  F008         	goto	u3651
  8172   001164  501A               	movf	(??___fladd+1)^0,w,c
  8173   001166  E109               	bnz	u3650
  8174   001168  0E1A               	movlw	26
  8175   00116A  5C19               	subwf	??___fladd^0,w,c
  8176   00116C  A0D8               	btfss	status,0,c
  8177   00116E  EFBB  F008         	goto	u3651
  8178   001172  EFBD  F008         	goto	u3650
  8179   001176                     u3651:
  8180   001176  EFF4  F008         	goto	l1472
  8181   00117A                     u3650:
  8182   00117A  5011               	movf	___fladd@b^0,w,c
  8183   00117C  1012               	iorwf	(___fladd@b+1)^0,w,c
  8184   00117E  1013               	iorwf	(___fladd@b+2)^0,w,c
  8185   001180  1014               	iorwf	(___fladd@b+3)^0,w,c
  8186   001182  A4D8               	btfss	status,2,c
  8187   001184  EFC6  F008         	goto	u3661
  8188   001188  EFC9  F008         	goto	u3660
  8189   00118C                     u3661:
  8190   00118C  0E01               	movlw	1
  8191   00118E  EFCA  F008         	goto	u3670
  8192   001192                     u3660:
  8193   001192  0E00               	movlw	0
  8194   001194                     u3670:
  8195   001194  6E20               	movwf	___fladd@grs^0,c
  8196   001196  0E00               	movlw	0
  8197   001198  6E11               	movwf	___fladd@b^0,c
  8198   00119A  0E00               	movlw	0
  8199   00119C  6E12               	movwf	(___fladd@b+1)^0,c
  8200   00119E  0E00               	movlw	0
  8201   0011A0  6E13               	movwf	(___fladd@b+2)^0,c
  8202   0011A2  0E00               	movlw	0
  8203   0011A4  6E14               	movwf	(___fladd@b+3)^0,c
  8204   0011A6  C01E  F01F         	movff	___fladd@aexp,___fladd@bexp
  8205   0011AA  EFFD  F008         	goto	l1471
  8206   0011AE                     l1473:
  8207   0011AE  A020               	btfss	___fladd@grs^0,0,c
  8208   0011B0  EFDC  F008         	goto	u3681
  8209   0011B4  EFDE  F008         	goto	u3680
  8210   0011B8                     u3681:
  8211   0011B8  EFE4  F008         	goto	l4450
  8212   0011BC                     u3680:
  8213   0011BC  90D8               	bcf	status,0,c
  8214   0011BE  3020               	rrcf	___fladd@grs^0,w,c
  8215   0011C0  0901               	iorlw	1
  8216   0011C2  6E20               	movwf	___fladd@grs^0,c
  8217   0011C4  EFE6  F008         	goto	l4452
  8218   0011C8                     l4450:
  8219   0011C8  90D8               	bcf	status,0,c
  8220   0011CA  3220               	rrcf	___fladd@grs^0,f,c
  8221   0011CC                     l4452:
  8222   0011CC  A011               	btfss	___fladd@b^0,0,c
  8223   0011CE  EFEB  F008         	goto	u3691
  8224   0011D2  EFED  F008         	goto	u3690
  8225   0011D6                     u3691:
  8226   0011D6  EFEE  F008         	goto	l4456
  8227   0011DA                     u3690:
  8228   0011DA  8E20               	bsf	___fladd@grs^0,7,c
  8229   0011DC                     l4456:
  8230   0011DC  3414               	rlcf	(___fladd@b+3)^0,w,c
  8231   0011DE  3214               	rrcf	(___fladd@b+3)^0,f,c
  8232   0011E0  3213               	rrcf	(___fladd@b+2)^0,f,c
  8233   0011E2  3212               	rrcf	(___fladd@b+1)^0,f,c
  8234   0011E4  3211               	rrcf	___fladd@b^0,f,c
  8235   0011E6  2A1F               	incf	___fladd@bexp^0,f,c
  8236   0011E8                     l1472:
  8237   0011E8  501E               	movf	___fladd@aexp^0,w,c
  8238   0011EA  5C1F               	subwf	___fladd@bexp^0,w,c
  8239   0011EC  A0D8               	btfss	status,0,c
  8240   0011EE  EFFB  F008         	goto	u3701
  8241   0011F2  EFFD  F008         	goto	u3700
  8242   0011F6                     u3701:
  8243   0011F6  EFD7  F008         	goto	l1473
  8244   0011FA                     u3700:
  8245   0011FA                     l1471:
  8246   0011FA  BC1D               	btfsc	___fladd@signs^0,6,c
  8247   0011FC  EF02  F009         	goto	u3711
  8248   001200  EF04  F009         	goto	u3710
  8249   001204                     u3711:
  8250   001204  EF44  F009         	goto	l4484
  8251   001208                     u3710:
  8252   001208  501F               	movf	___fladd@bexp^0,w,c
  8253   00120A  A4D8               	btfss	status,2,c
  8254   00120C  EF0A  F009         	goto	u3721
  8255   001210  EF0C  F009         	goto	u3720
  8256   001214                     u3721:
  8257   001214  EF16  F009         	goto	l4466
  8258   001218                     u3720:
  8259   001218  0E00               	movlw	0
  8260   00121A  6E11               	movwf	?___fladd^0,c
  8261   00121C  0E00               	movlw	0
  8262   00121E  6E12               	movwf	(?___fladd+1)^0,c
  8263   001220  0E00               	movlw	0
  8264   001222  6E13               	movwf	(?___fladd+2)^0,c
  8265   001224  0E00               	movlw	0
  8266   001226  6E14               	movwf	(?___fladd+3)^0,c
  8267   001228  EF63  F00A         	goto	l1480
  8268   00122C                     l4466:
  8269   00122C  5015               	movf	___fladd@a^0,w,c
  8270   00122E  2611               	addwf	___fladd@b^0,f,c
  8271   001230  5016               	movf	(___fladd@a+1)^0,w,c
  8272   001232  2212               	addwfc	(___fladd@b+1)^0,f,c
  8273   001234  5017               	movf	(___fladd@a+2)^0,w,c
  8274   001236  2213               	addwfc	(___fladd@b+2)^0,f,c
  8275   001238  5018               	movf	(___fladd@a+3)^0,w,c
  8276   00123A  2214               	addwfc	(___fladd@b+3)^0,f,c
  8277   00123C  A014               	btfss	(___fladd@b+3)^0,0,c
  8278   00123E  EF23  F009         	goto	u3731
  8279   001242  EF25  F009         	goto	u3730
  8280   001246                     u3731:
  8281   001246  EFD1  F009         	goto	l1485
  8282   00124A                     u3730:
  8283   00124A  A020               	btfss	___fladd@grs^0,0,c
  8284   00124C  EF2A  F009         	goto	u3741
  8285   001250  EF2C  F009         	goto	u3740
  8286   001254                     u3741:
  8287   001254  EF32  F009         	goto	l4474
  8288   001258                     u3740:
  8289   001258  90D8               	bcf	status,0,c
  8290   00125A  3020               	rrcf	___fladd@grs^0,w,c
  8291   00125C  0901               	iorlw	1
  8292   00125E  6E20               	movwf	___fladd@grs^0,c
  8293   001260  EF34  F009         	goto	l4476
  8294   001264                     l4474:
  8295   001264  90D8               	bcf	status,0,c
  8296   001266  3220               	rrcf	___fladd@grs^0,f,c
  8297   001268                     l4476:
  8298   001268  A011               	btfss	___fladd@b^0,0,c
  8299   00126A  EF39  F009         	goto	u3751
  8300   00126E  EF3B  F009         	goto	u3750
  8301   001272                     u3751:
  8302   001272  EF3C  F009         	goto	l4480
  8303   001276                     u3750:
  8304   001276  8E20               	bsf	___fladd@grs^0,7,c
  8305   001278                     l4480:
  8306   001278  3414               	rlcf	(___fladd@b+3)^0,w,c
  8307   00127A  3214               	rrcf	(___fladd@b+3)^0,f,c
  8308   00127C  3213               	rrcf	(___fladd@b+2)^0,f,c
  8309   00127E  3212               	rrcf	(___fladd@b+1)^0,f,c
  8310   001280  3211               	rrcf	___fladd@b^0,f,c
  8311   001282  2A1F               	incf	___fladd@bexp^0,f,c
  8312   001284  EFD1  F009         	goto	l1485
  8313   001288                     l4484:
  8314   001288  5015               	movf	___fladd@a^0,w,c
  8315   00128A  5C11               	subwf	___fladd@b^0,w,c
  8316   00128C  5016               	movf	(___fladd@a+1)^0,w,c
  8317   00128E  5812               	subwfb	(___fladd@b+1)^0,w,c
  8318   001290  5017               	movf	(___fladd@a+2)^0,w,c
  8319   001292  5813               	subwfb	(___fladd@b+2)^0,w,c
  8320   001294  5014               	movf	(___fladd@b+3)^0,w,c
  8321   001296  0A80               	xorlw	128
  8322   001298  6E19               	movwf	??___fladd^0,c
  8323   00129A  5018               	movf	(___fladd@a+3)^0,w,c
  8324   00129C  0A80               	xorlw	128
  8325   00129E  5819               	subwfb	??___fladd^0,w,c
  8326   0012A0  B0D8               	btfsc	status,0,c
  8327   0012A2  EF55  F009         	goto	u3761
  8328   0012A6  EF57  F009         	goto	u3760
  8329   0012AA                     u3761:
  8330   0012AA  EF82  F009         	goto	l4494
  8331   0012AE                     u3760:
  8332   0012AE  5011               	movf	___fladd@b^0,w,c
  8333   0012B0  5C15               	subwf	___fladd@a^0,w,c
  8334   0012B2  6E19               	movwf	??___fladd^0,c
  8335   0012B4  5012               	movf	(___fladd@b+1)^0,w,c
  8336   0012B6  5816               	subwfb	(___fladd@a+1)^0,w,c
  8337   0012B8  6E1A               	movwf	(??___fladd+1)^0,c
  8338   0012BA  5013               	movf	(___fladd@b+2)^0,w,c
  8339   0012BC  5817               	subwfb	(___fladd@a+2)^0,w,c
  8340   0012BE  6E1B               	movwf	(??___fladd+2)^0,c
  8341   0012C0  5014               	movf	(___fladd@b+3)^0,w,c
  8342   0012C2  5818               	subwfb	(___fladd@a+3)^0,w,c
  8343   0012C4  6E1C               	movwf	(??___fladd+3)^0,c
  8344   0012C6  0EFF               	movlw	255
  8345   0012C8  2419               	addwf	??___fladd^0,w,c
  8346   0012CA  6E11               	movwf	___fladd@b^0,c
  8347   0012CC  0EFF               	movlw	255
  8348   0012CE  201A               	addwfc	(??___fladd+1)^0,w,c
  8349   0012D0  6E12               	movwf	(___fladd@b+1)^0,c
  8350   0012D2  0EFF               	movlw	255
  8351   0012D4  201B               	addwfc	(??___fladd+2)^0,w,c
  8352   0012D6  6E13               	movwf	(___fladd@b+2)^0,c
  8353   0012D8  0EFF               	movlw	255
  8354   0012DA  201C               	addwfc	(??___fladd+3)^0,w,c
  8355   0012DC  6E14               	movwf	(___fladd@b+3)^0,c
  8356   0012DE  0E80               	movlw	128
  8357   0012E0  1A1D               	xorwf	___fladd@signs^0,f,c
  8358   0012E2  6C20               	negf	___fladd@grs^0,c
  8359   0012E4  5020               	movf	___fladd@grs^0,w,c
  8360   0012E6  A4D8               	btfss	status,2,c
  8361   0012E8  EF78  F009         	goto	u3771
  8362   0012EC  EF7A  F009         	goto	u3770
  8363   0012F0                     u3771:
  8364   0012F0  EF8A  F009         	goto	l1488
  8365   0012F4                     u3770:
  8366   0012F4  0E01               	movlw	1
  8367   0012F6  2611               	addwf	___fladd@b^0,f,c
  8368   0012F8  0E00               	movlw	0
  8369   0012FA  2212               	addwfc	(___fladd@b+1)^0,f,c
  8370   0012FC  2213               	addwfc	(___fladd@b+2)^0,f,c
  8371   0012FE  2214               	addwfc	(___fladd@b+3)^0,f,c
  8372   001300  EF8A  F009         	goto	l1488
  8373   001304                     l4494:
  8374   001304  5015               	movf	___fladd@a^0,w,c
  8375   001306  5E11               	subwf	___fladd@b^0,f,c
  8376   001308  5016               	movf	(___fladd@a+1)^0,w,c
  8377   00130A  5A12               	subwfb	(___fladd@b+1)^0,f,c
  8378   00130C  5017               	movf	(___fladd@a+2)^0,w,c
  8379   00130E  5A13               	subwfb	(___fladd@b+2)^0,f,c
  8380   001310  5018               	movf	(___fladd@a+3)^0,w,c
  8381   001312  5A14               	subwfb	(___fladd@b+3)^0,f,c
  8382   001314                     l1488:
  8383   001314  5011               	movf	___fladd@b^0,w,c
  8384   001316  1012               	iorwf	(___fladd@b+1)^0,w,c
  8385   001318  1013               	iorwf	(___fladd@b+2)^0,w,c
  8386   00131A  1014               	iorwf	(___fladd@b+3)^0,w,c
  8387   00131C  A4D8               	btfss	status,2,c
  8388   00131E  EF93  F009         	goto	u3781
  8389   001322  EF95  F009         	goto	u3780
  8390   001326                     u3781:
  8391   001326  EFCA  F009         	goto	l4518
  8392   00132A                     u3780:
  8393   00132A  5020               	movf	___fladd@grs^0,w,c
  8394   00132C  A4D8               	btfss	status,2,c
  8395   00132E  EF9B  F009         	goto	u3791
  8396   001332  EF9D  F009         	goto	u3790
  8397   001336                     u3791:
  8398   001336  EFCA  F009         	goto	l4518
  8399   00133A                     u3790:
  8400   00133A  0E00               	movlw	0
  8401   00133C  6E11               	movwf	?___fladd^0,c
  8402   00133E  0E00               	movlw	0
  8403   001340  6E12               	movwf	(?___fladd+1)^0,c
  8404   001342  0E00               	movlw	0
  8405   001344  6E13               	movwf	(?___fladd+2)^0,c
  8406   001346  0E00               	movlw	0
  8407   001348  6E14               	movwf	(?___fladd+3)^0,c
  8408   00134A  EF63  F00A         	goto	l1480
  8409   00134E                     l4502:
  8410   00134E  90D8               	bcf	status,0,c
  8411   001350  3611               	rlcf	___fladd@b^0,f,c
  8412   001352  3612               	rlcf	(___fladd@b+1)^0,f,c
  8413   001354  3613               	rlcf	(___fladd@b+2)^0,f,c
  8414   001356  3614               	rlcf	(___fladd@b+3)^0,f,c
  8415   001358  AE20               	btfss	___fladd@grs^0,7,c
  8416   00135A  EFB1  F009         	goto	u3801
  8417   00135E  EFB3  F009         	goto	u3800
  8418   001362                     u3801:
  8419   001362  EFB4  F009         	goto	l4508
  8420   001366                     u3800:
  8421   001366  8011               	bsf	___fladd@b^0,0,c
  8422   001368                     l4508:
  8423   001368  A020               	btfss	___fladd@grs^0,0,c
  8424   00136A  EFB9  F009         	goto	u3811
  8425   00136E  EFBB  F009         	goto	u3810
  8426   001372                     u3811:
  8427   001372  EFBF  F009         	goto	l4512
  8428   001376                     u3810:
  8429   001376  80D8               	bsf	status,0,c
  8430   001378  3620               	rlcf	___fladd@grs^0,f,c
  8431   00137A  EFC1  F009         	goto	l4514
  8432   00137E                     l4512:
  8433   00137E  90D8               	bcf	status,0,c
  8434   001380  3620               	rlcf	___fladd@grs^0,f,c
  8435   001382                     l4514:
  8436   001382  501F               	movf	___fladd@bexp^0,w,c
  8437   001384  B4D8               	btfsc	status,2,c
  8438   001386  EFC7  F009         	goto	u3821
  8439   00138A  EFC9  F009         	goto	u3820
  8440   00138E                     u3821:
  8441   00138E  EFCA  F009         	goto	l4518
  8442   001392                     u3820:
  8443   001392  061F               	decf	___fladd@bexp^0,f,c
  8444   001394                     l4518:
  8445   001394  AE13               	btfss	(___fladd@b+2)^0,7,c
  8446   001396  EFCF  F009         	goto	u3831
  8447   00139A  EFD1  F009         	goto	u3830
  8448   00139E                     u3831:
  8449   00139E  EFA7  F009         	goto	l4502
  8450   0013A2                     u3830:
  8451   0013A2                     l1485:
  8452   0013A2  6A1E               	clrf	___fladd@aexp^0,c
  8453   0013A4  AE20               	btfss	___fladd@grs^0,7,c
  8454   0013A6  EFD7  F009         	goto	u3841
  8455   0013AA  EFD9  F009         	goto	u3840
  8456   0013AE                     u3841:
  8457   0013AE  EFF1  F009         	goto	l1497
  8458   0013B2                     u3840:
  8459   0013B2  C020  F019         	movff	___fladd@grs,??___fladd
  8460   0013B6  0E7F               	movlw	127
  8461   0013B8  1619               	andwf	??___fladd^0,f,c
  8462   0013BA  B4D8               	btfsc	status,2,c
  8463   0013BC  EFE2  F009         	goto	u3851
  8464   0013C0  EFE4  F009         	goto	u3850
  8465   0013C4                     u3851:
  8466   0013C4  EFE8  F009         	goto	l1498
  8467   0013C8                     u3850:
  8468   0013C8                     l4522:
  8469   0013C8  0E01               	movlw	1
  8470   0013CA  6E1E               	movwf	___fladd@aexp^0,c
  8471   0013CC  EFF1  F009         	goto	l1497
  8472   0013D0                     l1498:
  8473   0013D0  A011               	btfss	___fladd@b^0,0,c
  8474   0013D2  EFED  F009         	goto	u3861
  8475   0013D6  EFEF  F009         	goto	u3860
  8476   0013DA                     u3861:
  8477   0013DA  EFF1  F009         	goto	l1497
  8478   0013DE                     u3860:
  8479   0013DE  EFE4  F009         	goto	l4522
  8480   0013E2                     l1497:
  8481   0013E2  501E               	movf	___fladd@aexp^0,w,c
  8482   0013E4  B4D8               	btfsc	status,2,c
  8483   0013E6  EFF7  F009         	goto	u3871
  8484   0013EA  EFF9  F009         	goto	u3870
  8485   0013EE                     u3871:
  8486   0013EE  EF24  F00A         	goto	l4534
  8487   0013F2                     u3870:
  8488   0013F2  0E01               	movlw	1
  8489   0013F4  2611               	addwf	___fladd@b^0,f,c
  8490   0013F6  0E00               	movlw	0
  8491   0013F8  2212               	addwfc	(___fladd@b+1)^0,f,c
  8492   0013FA  2213               	addwfc	(___fladd@b+2)^0,f,c
  8493   0013FC  2214               	addwfc	(___fladd@b+3)^0,f,c
  8494   0013FE  A014               	btfss	(___fladd@b+3)^0,0,c
  8495   001400  EF04  F00A         	goto	u3881
  8496   001404  EF06  F00A         	goto	u3880
  8497   001408                     u3881:
  8498   001408  EF24  F00A         	goto	l4534
  8499   00140C                     u3880:
  8500   00140C  C011  F019         	movff	___fladd@b,??___fladd
  8501   001410  C012  F01A         	movff	___fladd@b+1,??___fladd+1
  8502   001414  C013  F01B         	movff	___fladd@b+2,??___fladd+2
  8503   001418  C014  F01C         	movff	___fladd@b+3,??___fladd+3
  8504   00141C  341C               	rlcf	(??___fladd+3)^0,w,c
  8505   00141E  321C               	rrcf	(??___fladd+3)^0,f,c
  8506   001420  321B               	rrcf	(??___fladd+2)^0,f,c
  8507   001422  321A               	rrcf	(??___fladd+1)^0,f,c
  8508   001424  3219               	rrcf	??___fladd^0,f,c
  8509   001426  C019  F011         	movff	??___fladd,___fladd@b
  8510   00142A  C01A  F012         	movff	??___fladd+1,___fladd@b+1
  8511   00142E  C01B  F013         	movff	??___fladd+2,___fladd@b+2
  8512   001432  C01C  F014         	movff	??___fladd+3,___fladd@b+3
  8513   001436  281F               	incf	___fladd@bexp^0,w,c
  8514   001438  B4D8               	btfsc	status,2,c
  8515   00143A  EF21  F00A         	goto	u3891
  8516   00143E  EF23  F00A         	goto	u3890
  8517   001442                     u3891:
  8518   001442  EF24  F00A         	goto	l4534
  8519   001446                     u3890:
  8520   001446  2A1F               	incf	___fladd@bexp^0,f,c
  8521   001448                     l4534:
  8522   001448  281F               	incf	___fladd@bexp^0,w,c
  8523   00144A  B4D8               	btfsc	status,2,c
  8524   00144C  EF2A  F00A         	goto	u3901
  8525   001450  EF2C  F00A         	goto	u3900
  8526   001454                     u3901:
  8527   001454  EF34  F00A         	goto	l4538
  8528   001458                     u3900:
  8529   001458  501F               	movf	___fladd@bexp^0,w,c
  8530   00145A  A4D8               	btfss	status,2,c
  8531   00145C  EF32  F00A         	goto	u3911
  8532   001460  EF34  F00A         	goto	u3910
  8533   001464                     u3911:
  8534   001464  EF45  F00A         	goto	l1504
  8535   001468                     u3910:
  8536   001468                     l4538:
  8537   001468  0E00               	movlw	0
  8538   00146A  6E11               	movwf	___fladd@b^0,c
  8539   00146C  0E00               	movlw	0
  8540   00146E  6E12               	movwf	(___fladd@b+1)^0,c
  8541   001470  0E00               	movlw	0
  8542   001472  6E13               	movwf	(___fladd@b+2)^0,c
  8543   001474  0E00               	movlw	0
  8544   001476  6E14               	movwf	(___fladd@b+3)^0,c
  8545   001478  501F               	movf	___fladd@bexp^0,w,c
  8546   00147A  A4D8               	btfss	status,2,c
  8547   00147C  EF42  F00A         	goto	u3921
  8548   001480  EF44  F00A         	goto	u3920
  8549   001484                     u3921:
  8550   001484  EF45  F00A         	goto	l1504
  8551   001488                     u3920:
  8552   001488  6A1D               	clrf	___fladd@signs^0,c
  8553   00148A                     l1504:
  8554   00148A  A01F               	btfss	___fladd@bexp^0,0,c
  8555   00148C  EF4A  F00A         	goto	u3931
  8556   001490  EF4C  F00A         	goto	u3930
  8557   001494                     u3931:
  8558   001494  EF4F  F00A         	goto	l4544
  8559   001498                     u3930:
  8560   001498  8E13               	bsf	(___fladd@b+2)^0,7,c
  8561   00149A  EF50  F00A         	goto	l4546
  8562   00149E                     l4544:
  8563   00149E  9E13               	bcf	(___fladd@b+2)^0,7,c
  8564   0014A0                     l4546:
  8565   0014A0  90D8               	bcf	status,0,c
  8566   0014A2  301F               	rrcf	___fladd@bexp^0,w,c
  8567   0014A4  6E14               	movwf	(___fladd@b+3)^0,c
  8568   0014A6  AE1D               	btfss	___fladd@signs^0,7,c
  8569   0014A8  EF58  F00A         	goto	u3941
  8570   0014AC  EF5A  F00A         	goto	u3940
  8571   0014B0                     u3941:
  8572   0014B0  EF5B  F00A         	goto	l4552
  8573   0014B4                     u3940:
  8574   0014B4  8E14               	bsf	(___fladd@b+3)^0,7,c
  8575   0014B6                     l4552:
  8576   0014B6  C011  F011         	movff	___fladd@b,?___fladd
  8577   0014BA  C012  F012         	movff	___fladd@b+1,?___fladd+1
  8578   0014BE  C013  F013         	movff	___fladd@b+2,?___fladd+2
  8579   0014C2  C014  F014         	movff	___fladd@b+3,?___fladd+3
  8580   0014C6                     l1480:
  8581   0014C6  0012               	return		;funcret
  8582   0014C8                     __end_of___fladd:
  8583                           	callstack 0
  8584                           
  8585 ;; *************** function ___flmul *****************
  8586 ;; Defined at:
  8587 ;;		line 8 in file "D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;  b               4   40[COMRAM] unsigned char 
  8590 ;;  a               4   44[COMRAM] unsigned char 
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;  prod            4   59[COMRAM] struct .
  8593 ;;  grs             4   53[COMRAM] unsigned long 
  8594 ;;  temp            2   63[COMRAM] struct .
  8595 ;;  bexp            1   58[COMRAM] unsigned char 
  8596 ;;  aexp            1   57[COMRAM] unsigned char 
  8597 ;;  sign            1   52[COMRAM] unsigned char 
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  4   40[COMRAM] unsigned char 
  8600 ;; Registers used:
  8601 ;;		wreg, status,2, status,0, prodl, prodh
  8602 ;; Tracked objects:
  8603 ;;		On entry : 0/0
  8604 ;;		On exit  : 0/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8607 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8608 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8609 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8610 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8611 ;;Total ram usage:       25 bytes
  8612 ;; Hardware stack levels used: 1
  8613 ;; Hardware stack levels required when called: 5
  8614 ;; This function calls:
  8615 ;;		Nothing
  8616 ;; This function is called by:
  8617 ;;		_main
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           	psect	text44
  8622   0014C8                     __ptext44:
  8623                           	callstack 0
  8624   0014C8                     ___flmul:
  8625                           	callstack 25
  8626   0014C8  502C               	movf	(___flmul@b+3)^0,w,c
  8627   0014CA  0B80               	andlw	128
  8628   0014CC  6E35               	movwf	___flmul@sign^0,c
  8629   0014CE  502C               	movf	(___flmul@b+3)^0,w,c
  8630   0014D0  242C               	addwf	(___flmul@b+3)^0,w,c
  8631   0014D2  6E3B               	movwf	___flmul@bexp^0,c
  8632   0014D4  AE2B               	btfss	(___flmul@b+2)^0,7,c
  8633   0014D6  EF6F  F00A         	goto	u4371
  8634   0014DA  EF71  F00A         	goto	u4370
  8635   0014DE                     u4371:
  8636   0014DE  EF72  F00A         	goto	l4814
  8637   0014E2                     u4370:
  8638   0014E2  803B               	bsf	___flmul@bexp^0,0,c
  8639   0014E4                     l4814:
  8640   0014E4  503B               	movf	___flmul@bexp^0,w,c
  8641   0014E6  B4D8               	btfsc	status,2,c
  8642   0014E8  EF78  F00A         	goto	u4381
  8643   0014EC  EF7A  F00A         	goto	u4380
  8644   0014F0                     u4381:
  8645   0014F0  EF8D  F00A         	goto	l4822
  8646   0014F4                     u4380:
  8647   0014F4  283B               	incf	___flmul@bexp^0,w,c
  8648   0014F6  A4D8               	btfss	status,2,c
  8649   0014F8  EF80  F00A         	goto	u4391
  8650   0014FC  EF82  F00A         	goto	u4390
  8651   001500                     u4391:
  8652   001500  EF8A  F00A         	goto	l4820
  8653   001504                     u4390:
  8654   001504  0E00               	movlw	0
  8655   001506  6E29               	movwf	___flmul@b^0,c
  8656   001508  0E00               	movlw	0
  8657   00150A  6E2A               	movwf	(___flmul@b+1)^0,c
  8658   00150C  0E00               	movlw	0
  8659   00150E  6E2B               	movwf	(___flmul@b+2)^0,c
  8660   001510  0E00               	movlw	0
  8661   001512  6E2C               	movwf	(___flmul@b+3)^0,c
  8662   001514                     l4820:
  8663   001514  8E2B               	bsf	(___flmul@b+2)^0,7,c
  8664   001516  EF95  F00A         	goto	l4824
  8665   00151A                     l4822:
  8666   00151A  0E00               	movlw	0
  8667   00151C  6E29               	movwf	___flmul@b^0,c
  8668   00151E  0E00               	movlw	0
  8669   001520  6E2A               	movwf	(___flmul@b+1)^0,c
  8670   001522  0E00               	movlw	0
  8671   001524  6E2B               	movwf	(___flmul@b+2)^0,c
  8672   001526  0E00               	movlw	0
  8673   001528  6E2C               	movwf	(___flmul@b+3)^0,c
  8674   00152A                     l4824:
  8675   00152A  5030               	movf	(___flmul@a+3)^0,w,c
  8676   00152C  0B80               	andlw	128
  8677   00152E  1A35               	xorwf	___flmul@sign^0,f,c
  8678   001530  5030               	movf	(___flmul@a+3)^0,w,c
  8679   001532  2430               	addwf	(___flmul@a+3)^0,w,c
  8680   001534  6E3A               	movwf	___flmul@aexp^0,c
  8681   001536  AE2F               	btfss	(___flmul@a+2)^0,7,c
  8682   001538  EFA0  F00A         	goto	u4401
  8683   00153C  EFA2  F00A         	goto	u4400
  8684   001540                     u4401:
  8685   001540  EFA3  F00A         	goto	l4832
  8686   001544                     u4400:
  8687   001544  803A               	bsf	___flmul@aexp^0,0,c
  8688   001546                     l4832:
  8689   001546  503A               	movf	___flmul@aexp^0,w,c
  8690   001548  B4D8               	btfsc	status,2,c
  8691   00154A  EFA9  F00A         	goto	u4411
  8692   00154E  EFAB  F00A         	goto	u4410
  8693   001552                     u4411:
  8694   001552  EFBE  F00A         	goto	l4840
  8695   001556                     u4410:
  8696   001556  283A               	incf	___flmul@aexp^0,w,c
  8697   001558  A4D8               	btfss	status,2,c
  8698   00155A  EFB1  F00A         	goto	u4421
  8699   00155E  EFB3  F00A         	goto	u4420
  8700   001562                     u4421:
  8701   001562  EFBB  F00A         	goto	l4838
  8702   001566                     u4420:
  8703   001566  0E00               	movlw	0
  8704   001568  6E2D               	movwf	___flmul@a^0,c
  8705   00156A  0E00               	movlw	0
  8706   00156C  6E2E               	movwf	(___flmul@a+1)^0,c
  8707   00156E  0E00               	movlw	0
  8708   001570  6E2F               	movwf	(___flmul@a+2)^0,c
  8709   001572  0E00               	movlw	0
  8710   001574  6E30               	movwf	(___flmul@a+3)^0,c
  8711   001576                     l4838:
  8712   001576  8E2F               	bsf	(___flmul@a+2)^0,7,c
  8713   001578  EFC6  F00A         	goto	l1557
  8714   00157C                     l4840:
  8715   00157C  0E00               	movlw	0
  8716   00157E  6E2D               	movwf	___flmul@a^0,c
  8717   001580  0E00               	movlw	0
  8718   001582  6E2E               	movwf	(___flmul@a+1)^0,c
  8719   001584  0E00               	movlw	0
  8720   001586  6E2F               	movwf	(___flmul@a+2)^0,c
  8721   001588  0E00               	movlw	0
  8722   00158A  6E30               	movwf	(___flmul@a+3)^0,c
  8723   00158C                     l1557:
  8724   00158C  503A               	movf	___flmul@aexp^0,w,c
  8725   00158E  B4D8               	btfsc	status,2,c
  8726   001590  EFCC  F00A         	goto	u4431
  8727   001594  EFCE  F00A         	goto	u4430
  8728   001598                     u4431:
  8729   001598  EFD6  F00A         	goto	l4844
  8730   00159C                     u4430:
  8731   00159C  503B               	movf	___flmul@bexp^0,w,c
  8732   00159E  A4D8               	btfss	status,2,c
  8733   0015A0  EFD4  F00A         	goto	u4441
  8734   0015A4  EFD6  F00A         	goto	u4440
  8735   0015A8                     u4441:
  8736   0015A8  EFE0  F00A         	goto	l4848
  8737   0015AC                     u4440:
  8738   0015AC                     l4844:
  8739   0015AC  0E00               	movlw	0
  8740   0015AE  6E29               	movwf	?___flmul^0,c
  8741   0015B0  0E00               	movlw	0
  8742   0015B2  6E2A               	movwf	(?___flmul+1)^0,c
  8743   0015B4  0E00               	movlw	0
  8744   0015B6  6E2B               	movwf	(?___flmul+2)^0,c
  8745   0015B8  0E00               	movlw	0
  8746   0015BA  6E2C               	movwf	(?___flmul+3)^0,c
  8747   0015BC  EF76  F00C         	goto	l1561
  8748   0015C0                     l4848:
  8749   0015C0  502F               	movf	(___flmul@a+2)^0,w,c
  8750   0015C2  0229               	mulwf	___flmul@b^0,c
  8751   0015C4  CFF3 F040          	movff	prodl,___flmul@temp
  8752   0015C8  CFF4 F041          	movff	prodh,___flmul@temp+1
  8753   0015CC  5040               	movf	___flmul@temp^0,w,c
  8754   0015CE  6E36               	movwf	___flmul@grs^0,c
  8755   0015D0  6A37               	clrf	(___flmul@grs+1)^0,c
  8756   0015D2  6A38               	clrf	(___flmul@grs+2)^0,c
  8757   0015D4  6A39               	clrf	(___flmul@grs+3)^0,c
  8758   0015D6  5041               	movf	(___flmul@temp+1)^0,w,c
  8759   0015D8  6E3C               	movwf	___flmul@prod^0,c
  8760   0015DA  6A3D               	clrf	(___flmul@prod+1)^0,c
  8761   0015DC  6A3E               	clrf	(___flmul@prod+2)^0,c
  8762   0015DE  6A3F               	clrf	(___flmul@prod+3)^0,c
  8763   0015E0  502E               	movf	(___flmul@a+1)^0,w,c
  8764   0015E2  022A               	mulwf	(___flmul@b+1)^0,c
  8765   0015E4  CFF3 F040          	movff	prodl,___flmul@temp
  8766   0015E8  CFF4 F041          	movff	prodh,___flmul@temp+1
  8767   0015EC  5040               	movf	___flmul@temp^0,w,c
  8768   0015EE  2636               	addwf	___flmul@grs^0,f,c
  8769   0015F0  0E00               	movlw	0
  8770   0015F2  2237               	addwfc	(___flmul@grs+1)^0,f,c
  8771   0015F4  2238               	addwfc	(___flmul@grs+2)^0,f,c
  8772   0015F6  2239               	addwfc	(___flmul@grs+3)^0,f,c
  8773   0015F8  5041               	movf	(___flmul@temp+1)^0,w,c
  8774   0015FA  263C               	addwf	___flmul@prod^0,f,c
  8775   0015FC  0E00               	movlw	0
  8776   0015FE  223D               	addwfc	(___flmul@prod+1)^0,f,c
  8777   001600  223E               	addwfc	(___flmul@prod+2)^0,f,c
  8778   001602  223F               	addwfc	(___flmul@prod+3)^0,f,c
  8779   001604  502D               	movf	___flmul@a^0,w,c
  8780   001606  022B               	mulwf	(___flmul@b+2)^0,c
  8781   001608  CFF3 F040          	movff	prodl,___flmul@temp
  8782   00160C  CFF4 F041          	movff	prodh,___flmul@temp+1
  8783   001610  5040               	movf	___flmul@temp^0,w,c
  8784   001612  2636               	addwf	___flmul@grs^0,f,c
  8785   001614  0E00               	movlw	0
  8786   001616  2237               	addwfc	(___flmul@grs+1)^0,f,c
  8787   001618  2238               	addwfc	(___flmul@grs+2)^0,f,c
  8788   00161A  2239               	addwfc	(___flmul@grs+3)^0,f,c
  8789   00161C  5041               	movf	(___flmul@temp+1)^0,w,c
  8790   00161E  263C               	addwf	___flmul@prod^0,f,c
  8791   001620  0E00               	movlw	0
  8792   001622  223D               	addwfc	(___flmul@prod+1)^0,f,c
  8793   001624  223E               	addwfc	(___flmul@prod+2)^0,f,c
  8794   001626  223F               	addwfc	(___flmul@prod+3)^0,f,c
  8795   001628  C038  F039         	movff	___flmul@grs+2,___flmul@grs+3
  8796   00162C  C037  F038         	movff	___flmul@grs+1,___flmul@grs+2
  8797   001630  C036  F037         	movff	___flmul@grs,___flmul@grs+1
  8798   001634  6A36               	clrf	___flmul@grs^0,c
  8799   001636  502D               	movf	___flmul@a^0,w,c
  8800   001638  022A               	mulwf	(___flmul@b+1)^0,c
  8801   00163A  CFF3 F040          	movff	prodl,___flmul@temp
  8802   00163E  CFF4 F041          	movff	prodh,___flmul@temp+1
  8803   001642  5040               	movf	___flmul@temp^0,w,c
  8804   001644  2636               	addwf	___flmul@grs^0,f,c
  8805   001646  5041               	movf	(___flmul@temp+1)^0,w,c
  8806   001648  2237               	addwfc	(___flmul@grs+1)^0,f,c
  8807   00164A  0E00               	movlw	0
  8808   00164C  2238               	addwfc	(___flmul@grs+2)^0,f,c
  8809   00164E  0E00               	movlw	0
  8810   001650  2239               	addwfc	(___flmul@grs+3)^0,f,c
  8811   001652  502E               	movf	(___flmul@a+1)^0,w,c
  8812   001654  0229               	mulwf	___flmul@b^0,c
  8813   001656  CFF3 F040          	movff	prodl,___flmul@temp
  8814   00165A  CFF4 F041          	movff	prodh,___flmul@temp+1
  8815   00165E  5040               	movf	___flmul@temp^0,w,c
  8816   001660  2636               	addwf	___flmul@grs^0,f,c
  8817   001662  5041               	movf	(___flmul@temp+1)^0,w,c
  8818   001664  2237               	addwfc	(___flmul@grs+1)^0,f,c
  8819   001666  0E00               	movlw	0
  8820   001668  2238               	addwfc	(___flmul@grs+2)^0,f,c
  8821   00166A  0E00               	movlw	0
  8822   00166C  2239               	addwfc	(___flmul@grs+3)^0,f,c
  8823   00166E  C038  F039         	movff	___flmul@grs+2,___flmul@grs+3
  8824   001672  C037  F038         	movff	___flmul@grs+1,___flmul@grs+2
  8825   001676  C036  F037         	movff	___flmul@grs,___flmul@grs+1
  8826   00167A  6A36               	clrf	___flmul@grs^0,c
  8827   00167C  502D               	movf	___flmul@a^0,w,c
  8828   00167E  0229               	mulwf	___flmul@b^0,c
  8829   001680  CFF3 F040          	movff	prodl,___flmul@temp
  8830   001684  CFF4 F041          	movff	prodh,___flmul@temp+1
  8831   001688  5040               	movf	___flmul@temp^0,w,c
  8832   00168A  2636               	addwf	___flmul@grs^0,f,c
  8833   00168C  5041               	movf	(___flmul@temp+1)^0,w,c
  8834   00168E  2237               	addwfc	(___flmul@grs+1)^0,f,c
  8835   001690  0E00               	movlw	0
  8836   001692  2238               	addwfc	(___flmul@grs+2)^0,f,c
  8837   001694  0E00               	movlw	0
  8838   001696  2239               	addwfc	(___flmul@grs+3)^0,f,c
  8839   001698  502F               	movf	(___flmul@a+2)^0,w,c
  8840   00169A  022A               	mulwf	(___flmul@b+1)^0,c
  8841   00169C  CFF3 F040          	movff	prodl,___flmul@temp
  8842   0016A0  CFF4 F041          	movff	prodh,___flmul@temp+1
  8843   0016A4  5040               	movf	___flmul@temp^0,w,c
  8844   0016A6  263C               	addwf	___flmul@prod^0,f,c
  8845   0016A8  5041               	movf	(___flmul@temp+1)^0,w,c
  8846   0016AA  223D               	addwfc	(___flmul@prod+1)^0,f,c
  8847   0016AC  0E00               	movlw	0
  8848   0016AE  223E               	addwfc	(___flmul@prod+2)^0,f,c
  8849   0016B0  0E00               	movlw	0
  8850   0016B2  223F               	addwfc	(___flmul@prod+3)^0,f,c
  8851   0016B4  502E               	movf	(___flmul@a+1)^0,w,c
  8852   0016B6  022B               	mulwf	(___flmul@b+2)^0,c
  8853   0016B8  CFF3 F040          	movff	prodl,___flmul@temp
  8854   0016BC  CFF4 F041          	movff	prodh,___flmul@temp+1
  8855   0016C0  5040               	movf	___flmul@temp^0,w,c
  8856   0016C2  263C               	addwf	___flmul@prod^0,f,c
  8857   0016C4  5041               	movf	(___flmul@temp+1)^0,w,c
  8858   0016C6  223D               	addwfc	(___flmul@prod+1)^0,f,c
  8859   0016C8  0E00               	movlw	0
  8860   0016CA  223E               	addwfc	(___flmul@prod+2)^0,f,c
  8861   0016CC  0E00               	movlw	0
  8862   0016CE  223F               	addwfc	(___flmul@prod+3)^0,f,c
  8863   0016D0  502F               	movf	(___flmul@a+2)^0,w,c
  8864   0016D2  022B               	mulwf	(___flmul@b+2)^0,c
  8865   0016D4  CFF3 F040          	movff	prodl,___flmul@temp
  8866   0016D8  CFF4 F041          	movff	prodh,___flmul@temp+1
  8867   0016DC  5040               	movf	___flmul@temp^0,w,c
  8868   0016DE  6E31               	movwf	??___flmul^0,c
  8869   0016E0  5041               	movf	(___flmul@temp+1)^0,w,c
  8870   0016E2  6E32               	movwf	(??___flmul+1)^0,c
  8871   0016E4  6A33               	clrf	(??___flmul+2)^0,c
  8872   0016E6  6A34               	clrf	(??___flmul+3)^0,c
  8873   0016E8  C033  F034         	movff	??___flmul+2,??___flmul+3
  8874   0016EC  C032  F033         	movff	??___flmul+1,??___flmul+2
  8875   0016F0  C031  F032         	movff	??___flmul,??___flmul+1
  8876   0016F4  6A31               	clrf	??___flmul^0,c
  8877   0016F6  5031               	movf	??___flmul^0,w,c
  8878   0016F8  263C               	addwf	___flmul@prod^0,f,c
  8879   0016FA  5032               	movf	(??___flmul+1)^0,w,c
  8880   0016FC  223D               	addwfc	(___flmul@prod+1)^0,f,c
  8881   0016FE  5033               	movf	(??___flmul+2)^0,w,c
  8882   001700  223E               	addwfc	(___flmul@prod+2)^0,f,c
  8883   001702  5034               	movf	(??___flmul+3)^0,w,c
  8884   001704  223F               	addwfc	(___flmul@prod+3)^0,f,c
  8885   001706  C036  F031         	movff	___flmul@grs,??___flmul
  8886   00170A  C037  F032         	movff	___flmul@grs+1,??___flmul+1
  8887   00170E  C038  F033         	movff	___flmul@grs+2,??___flmul+2
  8888   001712  C039  F034         	movff	___flmul@grs+3,??___flmul+3
  8889   001716  0E19               	movlw	25
  8890   001718  EF93  F00B         	goto	u4450
  8891   00171C                     u4455:
  8892   00171C  90D8               	bcf	status,0,c
  8893   00171E  3234               	rrcf	(??___flmul+3)^0,f,c
  8894   001720  3233               	rrcf	(??___flmul+2)^0,f,c
  8895   001722  3232               	rrcf	(??___flmul+1)^0,f,c
  8896   001724  3231               	rrcf	??___flmul^0,f,c
  8897   001726                     u4450:
  8898   001726  2EE8               	decfsz	wreg,f,c
  8899   001728  EF8E  F00B         	goto	u4455
  8900   00172C  5031               	movf	??___flmul^0,w,c
  8901   00172E  263C               	addwf	___flmul@prod^0,f,c
  8902   001730  5032               	movf	(??___flmul+1)^0,w,c
  8903   001732  223D               	addwfc	(___flmul@prod+1)^0,f,c
  8904   001734  5033               	movf	(??___flmul+2)^0,w,c
  8905   001736  223E               	addwfc	(___flmul@prod+2)^0,f,c
  8906   001738  5034               	movf	(??___flmul+3)^0,w,c
  8907   00173A  223F               	addwfc	(___flmul@prod+3)^0,f,c
  8908   00173C  C038  F039         	movff	___flmul@grs+2,___flmul@grs+3
  8909   001740  C037  F038         	movff	___flmul@grs+1,___flmul@grs+2
  8910   001744  C036  F037         	movff	___flmul@grs,___flmul@grs+1
  8911   001748  6A36               	clrf	___flmul@grs^0,c
  8912   00174A  503A               	movf	___flmul@aexp^0,w,c
  8913   00174C  C03B  F031         	movff	___flmul@bexp,??___flmul
  8914   001750  6A32               	clrf	(??___flmul+1)^0,c
  8915   001752  2631               	addwf	??___flmul^0,f,c
  8916   001754  0E00               	movlw	0
  8917   001756  2232               	addwfc	(??___flmul+1)^0,f,c
  8918   001758  0E82               	movlw	130
  8919   00175A  2431               	addwf	??___flmul^0,w,c
  8920   00175C  6E40               	movwf	___flmul@temp^0,c
  8921   00175E  0EFF               	movlw	255
  8922   001760  2032               	addwfc	(??___flmul+1)^0,w,c
  8923   001762  6E41               	movwf	(___flmul@temp+1)^0,c
  8924   001764  EFC9  F00B         	goto	l4896
  8925   001768                     l4890:
  8926   001768  90D8               	bcf	status,0,c
  8927   00176A  363C               	rlcf	___flmul@prod^0,f,c
  8928   00176C  363D               	rlcf	(___flmul@prod+1)^0,f,c
  8929   00176E  363E               	rlcf	(___flmul@prod+2)^0,f,c
  8930   001770  363F               	rlcf	(___flmul@prod+3)^0,f,c
  8931   001772  AE39               	btfss	(___flmul@grs+3)^0,7,c
  8932   001774  EFBE  F00B         	goto	u4461
  8933   001778  EFC0  F00B         	goto	u4460
  8934   00177C                     u4461:
  8935   00177C  EFC1  F00B         	goto	l1564
  8936   001780                     u4460:
  8937   001780  803C               	bsf	___flmul@prod^0,0,c
  8938   001782                     l1564:
  8939   001782  90D8               	bcf	status,0,c
  8940   001784  3636               	rlcf	___flmul@grs^0,f,c
  8941   001786  3637               	rlcf	(___flmul@grs+1)^0,f,c
  8942   001788  3638               	rlcf	(___flmul@grs+2)^0,f,c
  8943   00178A  3639               	rlcf	(___flmul@grs+3)^0,f,c
  8944   00178C  0640               	decf	___flmul@temp^0,f,c
  8945   00178E  A0D8               	btfss	status,0,c
  8946   001790  0641               	decf	(___flmul@temp+1)^0,f,c
  8947   001792                     l4896:
  8948   001792  AE3E               	btfss	(___flmul@prod+2)^0,7,c
  8949   001794  EFCE  F00B         	goto	u4471
  8950   001798  EFD0  F00B         	goto	u4470
  8951   00179C                     u4471:
  8952   00179C  EFB4  F00B         	goto	l4890
  8953   0017A0                     u4470:
  8954   0017A0  6A3A               	clrf	___flmul@aexp^0,c
  8955   0017A2  AE39               	btfss	(___flmul@grs+3)^0,7,c
  8956   0017A4  EFD6  F00B         	goto	u4481
  8957   0017A8  EFD8  F00B         	goto	u4480
  8958   0017AC                     u4481:
  8959   0017AC  EFFC  F00B         	goto	l1566
  8960   0017B0                     u4480:
  8961   0017B0  0EFF               	movlw	255
  8962   0017B2  1436               	andwf	___flmul@grs^0,w,c
  8963   0017B4  6E31               	movwf	??___flmul^0,c
  8964   0017B6  0EFF               	movlw	255
  8965   0017B8  1437               	andwf	(___flmul@grs+1)^0,w,c
  8966   0017BA  6E32               	movwf	(??___flmul+1)^0,c
  8967   0017BC  0EFF               	movlw	255
  8968   0017BE  1438               	andwf	(___flmul@grs+2)^0,w,c
  8969   0017C0  6E33               	movwf	(??___flmul+2)^0,c
  8970   0017C2  0E7F               	movlw	127
  8971   0017C4  1439               	andwf	(___flmul@grs+3)^0,w,c
  8972   0017C6  6E34               	movwf	(??___flmul+3)^0,c
  8973   0017C8  5031               	movf	??___flmul^0,w,c
  8974   0017CA  1032               	iorwf	(??___flmul+1)^0,w,c
  8975   0017CC  1033               	iorwf	(??___flmul+2)^0,w,c
  8976   0017CE  1034               	iorwf	(??___flmul+3)^0,w,c
  8977   0017D0  B4D8               	btfsc	status,2,c
  8978   0017D2  EFED  F00B         	goto	u4491
  8979   0017D6  EFEF  F00B         	goto	u4490
  8980   0017DA                     u4491:
  8981   0017DA  EFF3  F00B         	goto	l1567
  8982   0017DE                     u4490:
  8983   0017DE                     l4900:
  8984   0017DE  0E01               	movlw	1
  8985   0017E0  6E3A               	movwf	___flmul@aexp^0,c
  8986   0017E2  EFFC  F00B         	goto	l1566
  8987   0017E6                     l1567:
  8988   0017E6  A03C               	btfss	___flmul@prod^0,0,c
  8989   0017E8  EFF8  F00B         	goto	u4501
  8990   0017EC  EFFA  F00B         	goto	u4500
  8991   0017F0                     u4501:
  8992   0017F0  EFFC  F00B         	goto	l1566
  8993   0017F4                     u4500:
  8994   0017F4  EFEF  F00B         	goto	l4900
  8995   0017F8                     l1566:
  8996   0017F8  503A               	movf	___flmul@aexp^0,w,c
  8997   0017FA  B4D8               	btfsc	status,2,c
  8998   0017FC  EF02  F00C         	goto	u4511
  8999   001800  EF04  F00C         	goto	u4510
  9000   001804                     u4511:
  9001   001804  EF28  F00C         	goto	l4912
  9002   001808                     u4510:
  9003   001808  0E01               	movlw	1
  9004   00180A  263C               	addwf	___flmul@prod^0,f,c
  9005   00180C  0E00               	movlw	0
  9006   00180E  223D               	addwfc	(___flmul@prod+1)^0,f,c
  9007   001810  223E               	addwfc	(___flmul@prod+2)^0,f,c
  9008   001812  223F               	addwfc	(___flmul@prod+3)^0,f,c
  9009   001814  A03F               	btfss	(___flmul@prod+3)^0,0,c
  9010   001816  EF0F  F00C         	goto	u4521
  9011   00181A  EF11  F00C         	goto	u4520
  9012   00181E                     u4521:
  9013   00181E  EF28  F00C         	goto	l4912
  9014   001822                     u4520:
  9015   001822  C03C  F031         	movff	___flmul@prod,??___flmul
  9016   001826  C03D  F032         	movff	___flmul@prod+1,??___flmul+1
  9017   00182A  C03E  F033         	movff	___flmul@prod+2,??___flmul+2
  9018   00182E  C03F  F034         	movff	___flmul@prod+3,??___flmul+3
  9019   001832  3434               	rlcf	(??___flmul+3)^0,w,c
  9020   001834  3234               	rrcf	(??___flmul+3)^0,f,c
  9021   001836  3233               	rrcf	(??___flmul+2)^0,f,c
  9022   001838  3232               	rrcf	(??___flmul+1)^0,f,c
  9023   00183A  3231               	rrcf	??___flmul^0,f,c
  9024   00183C  C031  F03C         	movff	??___flmul,___flmul@prod
  9025   001840  C032  F03D         	movff	??___flmul+1,___flmul@prod+1
  9026   001844  C033  F03E         	movff	??___flmul+2,___flmul@prod+2
  9027   001848  C034  F03F         	movff	??___flmul+3,___flmul@prod+3
  9028   00184C  4A40               	infsnz	___flmul@temp^0,f,c
  9029   00184E  2A41               	incf	(___flmul@temp+1)^0,f,c
  9030   001850                     l4912:
  9031   001850  BE41               	btfsc	(___flmul@temp+1)^0,7,c
  9032   001852  EF33  F00C         	goto	u4531
  9033   001856  5041               	movf	(___flmul@temp+1)^0,w,c
  9034   001858  E108               	bnz	u4530
  9035   00185A  2840               	incf	___flmul@temp^0,w,c
  9036   00185C  A0D8               	btfss	status,0,c
  9037   00185E  EF33  F00C         	goto	u4531
  9038   001862  EF35  F00C         	goto	u4530
  9039   001866                     u4531:
  9040   001866  EF3F  F00C         	goto	l4916
  9041   00186A                     u4530:
  9042   00186A  0E00               	movlw	0
  9043   00186C  6E3C               	movwf	___flmul@prod^0,c
  9044   00186E  0E00               	movlw	0
  9045   001870  6E3D               	movwf	(___flmul@prod+1)^0,c
  9046   001872  0E80               	movlw	128
  9047   001874  6E3E               	movwf	(___flmul@prod+2)^0,c
  9048   001876  0E7F               	movlw	127
  9049   001878  6E3F               	movwf	(___flmul@prod+3)^0,c
  9050   00187A  EF6C  F00C         	goto	l4930
  9051   00187E                     l4916:
  9052   00187E  BE41               	btfsc	(___flmul@temp+1)^0,7,c
  9053   001880  EF4C  F00C         	goto	u4540
  9054   001884  5041               	movf	(___flmul@temp+1)^0,w,c
  9055   001886  E106               	bnz	u4541
  9056   001888  0440               	decf	___flmul@temp^0,w,c
  9057   00188A  B0D8               	btfsc	status,0,c
  9058   00188C  EF4A  F00C         	goto	u4541
  9059   001890  EF4C  F00C         	goto	u4540
  9060   001894                     u4541:
  9061   001894  EF57  F00C         	goto	l1574
  9062   001898                     u4540:
  9063   001898  0E00               	movlw	0
  9064   00189A  6E3C               	movwf	___flmul@prod^0,c
  9065   00189C  0E00               	movlw	0
  9066   00189E  6E3D               	movwf	(___flmul@prod+1)^0,c
  9067   0018A0  0E00               	movlw	0
  9068   0018A2  6E3E               	movwf	(___flmul@prod+2)^0,c
  9069   0018A4  0E00               	movlw	0
  9070   0018A6  6E3F               	movwf	(___flmul@prod+3)^0,c
  9071   0018A8  6A35               	clrf	___flmul@sign^0,c
  9072   0018AA  EF6C  F00C         	goto	l4930
  9073   0018AE                     l1574:
  9074   0018AE  C040  F03B         	movff	___flmul@temp,___flmul@bexp
  9075   0018B2  0EFF               	movlw	255
  9076   0018B4  163C               	andwf	___flmul@prod^0,f,c
  9077   0018B6  0EFF               	movlw	255
  9078   0018B8  163D               	andwf	(___flmul@prod+1)^0,f,c
  9079   0018BA  0E7F               	movlw	127
  9080   0018BC  163E               	andwf	(___flmul@prod+2)^0,f,c
  9081   0018BE  0E00               	movlw	0
  9082   0018C0  163F               	andwf	(___flmul@prod+3)^0,f,c
  9083   0018C2  A03B               	btfss	___flmul@bexp^0,0,c
  9084   0018C4  EF66  F00C         	goto	u4551
  9085   0018C8  EF68  F00C         	goto	u4550
  9086   0018CC                     u4551:
  9087   0018CC  EF69  F00C         	goto	l4928
  9088   0018D0                     u4550:
  9089   0018D0  8E3E               	bsf	(___flmul@prod+2)^0,7,c
  9090   0018D2                     l4928:
  9091   0018D2  90D8               	bcf	status,0,c
  9092   0018D4  303B               	rrcf	___flmul@bexp^0,w,c
  9093   0018D6  6E3F               	movwf	(___flmul@prod+3)^0,c
  9094   0018D8                     l4930:
  9095   0018D8  5035               	movf	___flmul@sign^0,w,c
  9096   0018DA  123F               	iorwf	(___flmul@prod+3)^0,f,c
  9097   0018DC  C03C  F029         	movff	___flmul@prod,?___flmul
  9098   0018E0  C03D  F02A         	movff	___flmul@prod+1,?___flmul+1
  9099   0018E4  C03E  F02B         	movff	___flmul@prod+2,?___flmul+2
  9100   0018E8  C03F  F02C         	movff	___flmul@prod+3,?___flmul+3
  9101   0018EC                     l1561:
  9102   0018EC  0012               	return		;funcret
  9103   0018EE                     __end_of___flmul:
  9104                           	callstack 0
  9105                           
  9106 ;; *************** function ___fldiv *****************
  9107 ;; Defined at:
  9108 ;;		line 11 in file "D:\C extend\programe Setup\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  9109 ;; Parameters:    Size  Location     Type
  9110 ;;  b               4   65[COMRAM] unsigned char 
  9111 ;;  a               4   69[COMRAM] unsigned char 
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;  grs             4    7[BANK1 ] unsigned long 
  9114 ;;  rem             4    0[BANK1 ] unsigned long 
  9115 ;;  new_exp         2    5[BANK1 ] short 
  9116 ;;  aexp            1   12[BANK1 ] unsigned char 
  9117 ;;  bexp            1   11[BANK1 ] unsigned char 
  9118 ;;  sign            1    4[BANK1 ] unsigned char 
  9119 ;; Return value:  Size  Location     Type
  9120 ;;                  4   65[COMRAM] unsigned char 
  9121 ;; Registers used:
  9122 ;;		wreg, status,2, status,0
  9123 ;; Tracked objects:
  9124 ;;		On entry : 0/0
  9125 ;;		On exit  : 0/0
  9126 ;;		Unchanged: 0/0
  9127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9128 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9129 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9130 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9131 ;;      Totals:         8       4      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9132 ;;Total ram usage:       25 bytes
  9133 ;; Hardware stack levels used: 1
  9134 ;; Hardware stack levels required when called: 5
  9135 ;; This function calls:
  9136 ;;		Nothing
  9137 ;; This function is called by:
  9138 ;;		_main
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           	psect	text45
  9143   0018EE                     __ptext45:
  9144                           	callstack 0
  9145   0018EE                     ___fldiv:
  9146                           	callstack 25
  9147   0018EE  5045               	movf	(___fldiv@b+3)^0,w,c
  9148   0018F0  0B80               	andlw	128
  9149   0018F2  0101               	movlb	1	; () banked
  9150   0018F4  6F04               	movwf	___fldiv@sign& (0+255),b
  9151   0018F6  5045               	movf	(___fldiv@b+3)^0,w,c
  9152   0018F8  2445               	addwf	(___fldiv@b+3)^0,w,c
  9153   0018FA  6F0B               	movwf	___fldiv@bexp& (0+255),b
  9154   0018FC                     
  9155                           ; BSR set to: 1
  9156   0018FC  AE44               	btfss	(___fldiv@b+2)^0,7,c
  9157   0018FE  EF83  F00C         	goto	u5641
  9158   001902  EF85  F00C         	goto	u5640
  9159   001906                     u5641:
  9160   001906  EF86  F00C         	goto	l5704
  9161   00190A                     u5640:
  9162   00190A                     
  9163                           ; BSR set to: 1
  9164   00190A  810B               	bsf	___fldiv@bexp& (0+255),0,b
  9165   00190C                     l5704:
  9166                           
  9167                           ; BSR set to: 1
  9168   00190C  510B               	movf	___fldiv@bexp& (0+255),w,b
  9169   00190E  B4D8               	btfsc	status,2,c
  9170   001910  EF8C  F00C         	goto	u5651
  9171   001914  EF8E  F00C         	goto	u5650
  9172   001918                     u5651:
  9173   001918  EFA2  F00C         	goto	l5714
  9174   00191C                     u5650:
  9175   00191C                     
  9176                           ; BSR set to: 1
  9177   00191C  290B               	incf	___fldiv@bexp& (0+255),w,b
  9178   00191E  A4D8               	btfss	status,2,c
  9179   001920  EF94  F00C         	goto	u5661
  9180   001924  EF96  F00C         	goto	u5660
  9181   001928                     u5661:
  9182   001928  EF9E  F00C         	goto	l5710
  9183   00192C                     u5660:
  9184   00192C                     
  9185                           ; BSR set to: 1
  9186   00192C  0E00               	movlw	0
  9187   00192E  6E42               	movwf	___fldiv@b^0,c
  9188   001930  0E00               	movlw	0
  9189   001932  6E43               	movwf	(___fldiv@b+1)^0,c
  9190   001934  0E00               	movlw	0
  9191   001936  6E44               	movwf	(___fldiv@b+2)^0,c
  9192   001938  0E00               	movlw	0
  9193   00193A  6E45               	movwf	(___fldiv@b+3)^0,c
  9194   00193C                     l5710:
  9195                           
  9196                           ; BSR set to: 1
  9197   00193C  8E44               	bsf	(___fldiv@b+2)^0,7,c
  9198   00193E                     
  9199                           ; BSR set to: 1
  9200   00193E  6A45               	clrf	(___fldiv@b+3)^0,c
  9201   001940  EFAA  F00C         	goto	l5716
  9202   001944                     l5714:
  9203                           
  9204                           ; BSR set to: 1
  9205   001944  0E00               	movlw	0
  9206   001946  6E42               	movwf	___fldiv@b^0,c
  9207   001948  0E00               	movlw	0
  9208   00194A  6E43               	movwf	(___fldiv@b+1)^0,c
  9209   00194C  0E00               	movlw	0
  9210   00194E  6E44               	movwf	(___fldiv@b+2)^0,c
  9211   001950  0E00               	movlw	0
  9212   001952  6E45               	movwf	(___fldiv@b+3)^0,c
  9213   001954                     l5716:
  9214                           
  9215                           ; BSR set to: 1
  9216   001954  5049               	movf	(___fldiv@a+3)^0,w,c
  9217   001956  0B80               	andlw	128
  9218   001958  1B04               	xorwf	___fldiv@sign& (0+255),f,b
  9219   00195A                     
  9220                           ; BSR set to: 1
  9221   00195A  5049               	movf	(___fldiv@a+3)^0,w,c
  9222   00195C  2449               	addwf	(___fldiv@a+3)^0,w,c
  9223   00195E  6F0C               	movwf	___fldiv@aexp& (0+255),b
  9224   001960                     
  9225                           ; BSR set to: 1
  9226   001960  AE48               	btfss	(___fldiv@a+2)^0,7,c
  9227   001962  EFB5  F00C         	goto	u5671
  9228   001966  EFB7  F00C         	goto	u5670
  9229   00196A                     u5671:
  9230   00196A  EFB8  F00C         	goto	l5724
  9231   00196E                     u5670:
  9232   00196E                     
  9233                           ; BSR set to: 1
  9234   00196E  810C               	bsf	___fldiv@aexp& (0+255),0,b
  9235   001970                     l5724:
  9236                           
  9237                           ; BSR set to: 1
  9238   001970  510C               	movf	___fldiv@aexp& (0+255),w,b
  9239   001972  B4D8               	btfsc	status,2,c
  9240   001974  EFBE  F00C         	goto	u5681
  9241   001978  EFC0  F00C         	goto	u5680
  9242   00197C                     u5681:
  9243   00197C  EFD4  F00C         	goto	l5734
  9244   001980                     u5680:
  9245   001980                     
  9246                           ; BSR set to: 1
  9247   001980  290C               	incf	___fldiv@aexp& (0+255),w,b
  9248   001982  A4D8               	btfss	status,2,c
  9249   001984  EFC6  F00C         	goto	u5691
  9250   001988  EFC8  F00C         	goto	u5690
  9251   00198C                     u5691:
  9252   00198C  EFD0  F00C         	goto	l5730
  9253   001990                     u5690:
  9254   001990                     
  9255                           ; BSR set to: 1
  9256   001990  0E00               	movlw	0
  9257   001992  6E46               	movwf	___fldiv@a^0,c
  9258   001994  0E00               	movlw	0
  9259   001996  6E47               	movwf	(___fldiv@a+1)^0,c
  9260   001998  0E00               	movlw	0
  9261   00199A  6E48               	movwf	(___fldiv@a+2)^0,c
  9262   00199C  0E00               	movlw	0
  9263   00199E  6E49               	movwf	(___fldiv@a+3)^0,c
  9264   0019A0                     l5730:
  9265                           
  9266                           ; BSR set to: 1
  9267   0019A0  8E48               	bsf	(___fldiv@a+2)^0,7,c
  9268   0019A2                     
  9269                           ; BSR set to: 1
  9270   0019A2  6A49               	clrf	(___fldiv@a+3)^0,c
  9271   0019A4  EFDC  F00C         	goto	l5736
  9272   0019A8                     l5734:
  9273                           
  9274                           ; BSR set to: 1
  9275   0019A8  0E00               	movlw	0
  9276   0019AA  6E46               	movwf	___fldiv@a^0,c
  9277   0019AC  0E00               	movlw	0
  9278   0019AE  6E47               	movwf	(___fldiv@a+1)^0,c
  9279   0019B0  0E00               	movlw	0
  9280   0019B2  6E48               	movwf	(___fldiv@a+2)^0,c
  9281   0019B4  0E00               	movlw	0
  9282   0019B6  6E49               	movwf	(___fldiv@a+3)^0,c
  9283   0019B8                     l5736:
  9284                           
  9285                           ; BSR set to: 1
  9286   0019B8  5046               	movf	___fldiv@a^0,w,c
  9287   0019BA  1047               	iorwf	(___fldiv@a+1)^0,w,c
  9288   0019BC  1048               	iorwf	(___fldiv@a+2)^0,w,c
  9289   0019BE  1049               	iorwf	(___fldiv@a+3)^0,w,c
  9290   0019C0  A4D8               	btfss	status,2,c
  9291   0019C2  EFE5  F00C         	goto	u5701
  9292   0019C6  EFE7  F00C         	goto	u5700
  9293   0019CA                     u5701:
  9294   0019CA  EFFF  F00C         	goto	l5748
  9295   0019CE                     u5700:
  9296   0019CE                     
  9297                           ; BSR set to: 1
  9298   0019CE  0E00               	movlw	0
  9299   0019D0  6E42               	movwf	___fldiv@b^0,c
  9300   0019D2  0E00               	movlw	0
  9301   0019D4  6E43               	movwf	(___fldiv@b+1)^0,c
  9302   0019D6  0E00               	movlw	0
  9303   0019D8  6E44               	movwf	(___fldiv@b+2)^0,c
  9304   0019DA  0E00               	movlw	0
  9305   0019DC  6E45               	movwf	(___fldiv@b+3)^0,c
  9306   0019DE                     
  9307                           ; BSR set to: 1
  9308   0019DE  0E80               	movlw	128
  9309   0019E0  1244               	iorwf	(___fldiv@b+2)^0,f,c
  9310   0019E2  0E7F               	movlw	127
  9311   0019E4  1245               	iorwf	(___fldiv@b+3)^0,f,c
  9312   0019E6                     l5742:
  9313                           
  9314                           ; BSR set to: 1
  9315   0019E6  5104               	movf	___fldiv@sign& (0+255),w,b
  9316   0019E8  1245               	iorwf	(___fldiv@b+3)^0,f,c
  9317   0019EA                     
  9318                           ; BSR set to: 1
  9319   0019EA  C042  F042         	movff	___fldiv@b,?___fldiv
  9320   0019EE  C043  F043         	movff	___fldiv@b+1,?___fldiv+1
  9321   0019F2  C044  F044         	movff	___fldiv@b+2,?___fldiv+2
  9322   0019F6  C045  F045         	movff	___fldiv@b+3,?___fldiv+3
  9323   0019FA  EF4E  F00E         	goto	l1525
  9324   0019FE                     l5748:
  9325                           
  9326                           ; BSR set to: 1
  9327   0019FE  510B               	movf	___fldiv@bexp& (0+255),w,b
  9328   001A00  A4D8               	btfss	status,2,c
  9329   001A02  EF05  F00D         	goto	u5711
  9330   001A06  EF07  F00D         	goto	u5710
  9331   001A0A                     u5711:
  9332   001A0A  EF11  F00D         	goto	l5756
  9333   001A0E                     u5710:
  9334   001A0E                     
  9335                           ; BSR set to: 1
  9336   001A0E  0E00               	movlw	0
  9337   001A10  6E42               	movwf	?___fldiv^0,c
  9338   001A12  0E00               	movlw	0
  9339   001A14  6E43               	movwf	(?___fldiv+1)^0,c
  9340   001A16  0E00               	movlw	0
  9341   001A18  6E44               	movwf	(?___fldiv+2)^0,c
  9342   001A1A  0E00               	movlw	0
  9343   001A1C  6E45               	movwf	(?___fldiv+3)^0,c
  9344   001A1E  EF4E  F00E         	goto	l1525
  9345   001A22                     l5756:
  9346                           
  9347                           ; BSR set to: 1
  9348   001A22  510C               	movf	___fldiv@aexp& (0+255),w,b
  9349   001A24  C10B  F0FA         	movff	___fldiv@bexp,??___fldiv
  9350   001A28  0100               	movlb	0	; () banked
  9351   001A2A  6BFB               	clrf	(??___fldiv+1)& (0+255),b
  9352   001A2C  5FFA               	subwf	??___fldiv& (0+255),f,b
  9353   001A2E  0E00               	movlw	0
  9354   001A30  5BFB               	subwfb	(??___fldiv+1)& (0+255),f,b
  9355   001A32  0E7F               	movlw	127
  9356   001A34  25FA               	addwf	??___fldiv& (0+255),w,b
  9357   001A36  0101               	movlb	1	; () banked
  9358   001A38  6F05               	movwf	___fldiv@new_exp& (0+255),b
  9359   001A3A  0E00               	movlw	0
  9360   001A3C  0100               	movlb	0	; () banked
  9361   001A3E  21FB               	addwfc	(??___fldiv+1)& (0+255),w,b
  9362   001A40  0101               	movlb	1	; () banked
  9363   001A42  6F06               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9364   001A44                     
  9365                           ; BSR set to: 1
  9366   001A44  C042  F100         	movff	___fldiv@b,___fldiv@rem
  9367   001A48  C043  F101         	movff	___fldiv@b+1,___fldiv@rem+1
  9368   001A4C  C044  F102         	movff	___fldiv@b+2,___fldiv@rem+2
  9369   001A50  C045  F103         	movff	___fldiv@b+3,___fldiv@rem+3
  9370   001A54                     
  9371                           ; BSR set to: 1
  9372   001A54  0E00               	movlw	0
  9373   001A56  6E42               	movwf	___fldiv@b^0,c
  9374   001A58  0E00               	movlw	0
  9375   001A5A  6E43               	movwf	(___fldiv@b+1)^0,c
  9376   001A5C  0E00               	movlw	0
  9377   001A5E  6E44               	movwf	(___fldiv@b+2)^0,c
  9378   001A60  0E00               	movlw	0
  9379   001A62  6E45               	movwf	(___fldiv@b+3)^0,c
  9380   001A64                     
  9381                           ; BSR set to: 1
  9382   001A64  0E00               	movlw	0
  9383   001A66  6F07               	movwf	___fldiv@grs& (0+255),b
  9384   001A68  0E00               	movlw	0
  9385   001A6A  6F08               	movwf	(___fldiv@grs+1)& (0+255),b
  9386   001A6C  0E00               	movlw	0
  9387   001A6E  6F09               	movwf	(___fldiv@grs+2)& (0+255),b
  9388   001A70  0E00               	movlw	0
  9389   001A72  6F0A               	movwf	(___fldiv@grs+3)& (0+255),b
  9390   001A74                     
  9391                           ; BSR set to: 1
  9392   001A74  6B0C               	clrf	___fldiv@aexp& (0+255),b
  9393   001A76  EF75  F00D         	goto	l1527
  9394   001A7A                     l5766:
  9395                           
  9396                           ; BSR set to: 1
  9397   001A7A  510C               	movf	___fldiv@aexp& (0+255),w,b
  9398   001A7C  B4D8               	btfsc	status,2,c
  9399   001A7E  EF43  F00D         	goto	u5721
  9400   001A82  EF45  F00D         	goto	u5720
  9401   001A86                     u5721:
  9402   001A86  EF5C  F00D         	goto	l5774
  9403   001A8A                     u5720:
  9404   001A8A                     
  9405                           ; BSR set to: 1
  9406   001A8A  90D8               	bcf	status,0,c
  9407   001A8C  3700               	rlcf	___fldiv@rem& (0+255),f,b
  9408   001A8E  3701               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9409   001A90  3702               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9410   001A92  3703               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9411   001A94  90D8               	bcf	status,0,c
  9412   001A96  3642               	rlcf	___fldiv@b^0,f,c
  9413   001A98  3643               	rlcf	(___fldiv@b+1)^0,f,c
  9414   001A9A  3644               	rlcf	(___fldiv@b+2)^0,f,c
  9415   001A9C  3645               	rlcf	(___fldiv@b+3)^0,f,c
  9416   001A9E                     
  9417                           ; BSR set to: 1
  9418   001A9E  AF0A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9419   001AA0  EF54  F00D         	goto	u5731
  9420   001AA4  EF56  F00D         	goto	u5730
  9421   001AA8                     u5731:
  9422   001AA8  EF57  F00D         	goto	l1530
  9423   001AAC                     u5730:
  9424   001AAC                     
  9425                           ; BSR set to: 1
  9426   001AAC  8042               	bsf	___fldiv@b^0,0,c
  9427   001AAE                     l1530:
  9428                           
  9429                           ; BSR set to: 1
  9430   001AAE  90D8               	bcf	status,0,c
  9431   001AB0  3707               	rlcf	___fldiv@grs& (0+255),f,b
  9432   001AB2  3708               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9433   001AB4  3709               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9434   001AB6  370A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9435   001AB8                     l5774:
  9436                           
  9437                           ; BSR set to: 1
  9438   001AB8  5046               	movf	___fldiv@a^0,w,c
  9439   001ABA  5D00               	subwf	___fldiv@rem& (0+255),w,b
  9440   001ABC  5047               	movf	(___fldiv@a+1)^0,w,c
  9441   001ABE  5901               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9442   001AC0  5048               	movf	(___fldiv@a+2)^0,w,c
  9443   001AC2  5902               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9444   001AC4  5049               	movf	(___fldiv@a+3)^0,w,c
  9445   001AC6  5903               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9446   001AC8  A0D8               	btfss	status,0,c
  9447   001ACA  EF69  F00D         	goto	u5741
  9448   001ACE  EF6B  F00D         	goto	u5740
  9449   001AD2                     u5741:
  9450   001AD2  EF74  F00D         	goto	l5780
  9451   001AD6                     u5740:
  9452   001AD6                     
  9453                           ; BSR set to: 1
  9454   001AD6  8D0A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9455   001AD8                     
  9456                           ; BSR set to: 1
  9457   001AD8  5046               	movf	___fldiv@a^0,w,c
  9458   001ADA  5F00               	subwf	___fldiv@rem& (0+255),f,b
  9459   001ADC  5047               	movf	(___fldiv@a+1)^0,w,c
  9460   001ADE  5B01               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9461   001AE0  5048               	movf	(___fldiv@a+2)^0,w,c
  9462   001AE2  5B02               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9463   001AE4  5049               	movf	(___fldiv@a+3)^0,w,c
  9464   001AE6  5B03               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9465   001AE8                     l5780:
  9466                           
  9467                           ; BSR set to: 1
  9468   001AE8  2B0C               	incf	___fldiv@aexp& (0+255),f,b
  9469   001AEA                     l1527:
  9470                           
  9471                           ; BSR set to: 1
  9472   001AEA  0E19               	movlw	25
  9473   001AEC  650C               	cpfsgt	___fldiv@aexp& (0+255),b
  9474   001AEE  EF7B  F00D         	goto	u5751
  9475   001AF2  EF7D  F00D         	goto	u5750
  9476   001AF6                     u5751:
  9477   001AF6  EF3D  F00D         	goto	l5766
  9478   001AFA                     u5750:
  9479   001AFA                     
  9480                           ; BSR set to: 1
  9481   001AFA  5100               	movf	___fldiv@rem& (0+255),w,b
  9482   001AFC  1101               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9483   001AFE  1102               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9484   001B00  1103               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9485   001B02  B4D8               	btfsc	status,2,c
  9486   001B04  EF86  F00D         	goto	u5761
  9487   001B08  EF88  F00D         	goto	u5760
  9488   001B0C                     u5761:
  9489   001B0C  EFA0  F00D         	goto	l5792
  9490   001B10                     u5760:
  9491   001B10                     
  9492                           ; BSR set to: 1
  9493   001B10  8107               	bsf	___fldiv@grs& (0+255),0,b
  9494   001B12  EFA0  F00D         	goto	l5792
  9495   001B16                     l5786:
  9496                           
  9497                           ; BSR set to: 1
  9498   001B16  90D8               	bcf	status,0,c
  9499   001B18  3642               	rlcf	___fldiv@b^0,f,c
  9500   001B1A  3643               	rlcf	(___fldiv@b+1)^0,f,c
  9501   001B1C  3644               	rlcf	(___fldiv@b+2)^0,f,c
  9502   001B1E  3645               	rlcf	(___fldiv@b+3)^0,f,c
  9503   001B20                     
  9504                           ; BSR set to: 1
  9505   001B20  AF0A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9506   001B22  EF95  F00D         	goto	u5771
  9507   001B26  EF97  F00D         	goto	u5770
  9508   001B2A                     u5771:
  9509   001B2A  EF98  F00D         	goto	l1536
  9510   001B2E                     u5770:
  9511   001B2E                     
  9512                           ; BSR set to: 1
  9513   001B2E  8042               	bsf	___fldiv@b^0,0,c
  9514   001B30                     l1536:
  9515                           
  9516                           ; BSR set to: 1
  9517   001B30  90D8               	bcf	status,0,c
  9518   001B32  3707               	rlcf	___fldiv@grs& (0+255),f,b
  9519   001B34  3708               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9520   001B36  3709               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9521   001B38  370A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9522   001B3A  0705               	decf	___fldiv@new_exp& (0+255),f,b
  9523   001B3C  A0D8               	btfss	status,0,c
  9524   001B3E  0706               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9525   001B40                     l5792:
  9526                           
  9527                           ; BSR set to: 1
  9528   001B40  AE44               	btfss	(___fldiv@b+2)^0,7,c
  9529   001B42  EFA5  F00D         	goto	u5781
  9530   001B46  EFA7  F00D         	goto	u5780
  9531   001B4A                     u5781:
  9532   001B4A  EF8B  F00D         	goto	l5786
  9533   001B4E                     u5780:
  9534   001B4E                     
  9535                           ; BSR set to: 1
  9536   001B4E  6B0C               	clrf	___fldiv@aexp& (0+255),b
  9537   001B50  AF0A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9538   001B52  EFAD  F00D         	goto	u5791
  9539   001B56  EFAF  F00D         	goto	u5790
  9540   001B5A                     u5791:
  9541   001B5A  EFDB  F00D         	goto	l1538
  9542   001B5E                     u5790:
  9543   001B5E                     
  9544                           ; BSR set to: 1
  9545   001B5E  0EFF               	movlw	255
  9546   001B60  1507               	andwf	___fldiv@grs& (0+255),w,b
  9547   001B62  0100               	movlb	0	; () banked
  9548   001B64  6FFA               	movwf	??___fldiv& (0+255),b
  9549   001B66  0EFF               	movlw	255
  9550   001B68  0101               	movlb	1	; () banked
  9551   001B6A  1508               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9552   001B6C  0100               	movlb	0	; () banked
  9553   001B6E  6FFB               	movwf	(??___fldiv+1)& (0+255),b
  9554   001B70  0EFF               	movlw	255
  9555   001B72  0101               	movlb	1	; () banked
  9556   001B74  1509               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9557   001B76  0100               	movlb	0	; () banked
  9558   001B78  6FFC               	movwf	(??___fldiv+2)& (0+255),b
  9559   001B7A  0E7F               	movlw	127
  9560   001B7C  0101               	movlb	1	; () banked
  9561   001B7E  150A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9562   001B80  0100               	movlb	0	; () banked
  9563   001B82  6FFD               	movwf	(??___fldiv+3)& (0+255),b
  9564   001B84  51FA               	movf	??___fldiv& (0+255),w,b
  9565   001B86  11FB               	iorwf	(??___fldiv+1)& (0+255),w,b
  9566   001B88  11FC               	iorwf	(??___fldiv+2)& (0+255),w,b
  9567   001B8A  11FD               	iorwf	(??___fldiv+3)& (0+255),w,b
  9568   001B8C  B4D8               	btfsc	status,2,c
  9569   001B8E  EFCB  F00D         	goto	u5801
  9570   001B92  EFCD  F00D         	goto	u5800
  9571   001B96                     u5801:
  9572   001B96  EFD2  F00D         	goto	l1539
  9573   001B9A                     u5800:
  9574   001B9A                     l5796:
  9575                           
  9576                           ; BSR set to: 0
  9577   001B9A  0E01               	movlw	1
  9578   001B9C  0101               	movlb	1	; () banked
  9579   001B9E  6F0C               	movwf	___fldiv@aexp& (0+255),b
  9580   001BA0  EFDB  F00D         	goto	l1538
  9581   001BA4                     l1539:
  9582                           
  9583                           ; BSR set to: 0
  9584   001BA4  A042               	btfss	___fldiv@b^0,0,c
  9585   001BA6  EFD7  F00D         	goto	u5811
  9586   001BAA  EFD9  F00D         	goto	u5810
  9587   001BAE                     u5811:
  9588   001BAE  EFDB  F00D         	goto	l1538
  9589   001BB2                     u5810:
  9590   001BB2  EFCD  F00D         	goto	l5796
  9591   001BB6                     l1538:
  9592   001BB6  0101               	movlb	1	; () banked
  9593   001BB8  510C               	movf	___fldiv@aexp& (0+255),w,b
  9594   001BBA  B4D8               	btfsc	status,2,c
  9595   001BBC  EFE2  F00D         	goto	u5821
  9596   001BC0  EFE4  F00D         	goto	u5820
  9597   001BC4                     u5821:
  9598   001BC4  EF0A  F00E         	goto	l5808
  9599   001BC8                     u5820:
  9600   001BC8                     
  9601                           ; BSR set to: 1
  9602   001BC8  0E01               	movlw	1
  9603   001BCA  2642               	addwf	___fldiv@b^0,f,c
  9604   001BCC  0E00               	movlw	0
  9605   001BCE  2243               	addwfc	(___fldiv@b+1)^0,f,c
  9606   001BD0  2244               	addwfc	(___fldiv@b+2)^0,f,c
  9607   001BD2  2245               	addwfc	(___fldiv@b+3)^0,f,c
  9608   001BD4                     
  9609                           ; BSR set to: 1
  9610   001BD4  A045               	btfss	(___fldiv@b+3)^0,0,c
  9611   001BD6  EFEF  F00D         	goto	u5831
  9612   001BDA  EFF1  F00D         	goto	u5830
  9613   001BDE                     u5831:
  9614   001BDE  EF0A  F00E         	goto	l5808
  9615   001BE2                     u5830:
  9616   001BE2                     
  9617                           ; BSR set to: 1
  9618   001BE2  C042  F0FA         	movff	___fldiv@b,??___fldiv
  9619   001BE6  C043  F0FB         	movff	___fldiv@b+1,??___fldiv+1
  9620   001BEA  C044  F0FC         	movff	___fldiv@b+2,??___fldiv+2
  9621   001BEE  C045  F0FD         	movff	___fldiv@b+3,??___fldiv+3
  9622   001BF2  0100               	movlb	0	; () banked
  9623   001BF4  35FD               	rlcf	(??___fldiv+3)& (0+255),w,b
  9624   001BF6  33FD               	rrcf	(??___fldiv+3)& (0+255),f,b
  9625   001BF8  33FC               	rrcf	(??___fldiv+2)& (0+255),f,b
  9626   001BFA  33FB               	rrcf	(??___fldiv+1)& (0+255),f,b
  9627   001BFC  33FA               	rrcf	??___fldiv& (0+255),f,b
  9628   001BFE  C0FA  F042         	movff	??___fldiv,___fldiv@b
  9629   001C02  C0FB  F043         	movff	??___fldiv+1,___fldiv@b+1
  9630   001C06  C0FC  F044         	movff	??___fldiv+2,___fldiv@b+2
  9631   001C0A  C0FD  F045         	movff	??___fldiv+3,___fldiv@b+3
  9632   001C0E                     
  9633                           ; BSR set to: 0
  9634   001C0E  0101               	movlb	1	; () banked
  9635   001C10  4B05               	infsnz	___fldiv@new_exp& (0+255),f,b
  9636   001C12  2B06               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9637   001C14                     l5808:
  9638                           
  9639                           ; BSR set to: 1
  9640   001C14  BF06               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9641   001C16  EF15  F00E         	goto	u5841
  9642   001C1A  5106               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9643   001C1C  E108               	bnz	u5840
  9644   001C1E  2905               	incf	___fldiv@new_exp& (0+255),w,b
  9645   001C20  A0D8               	btfss	status,0,c
  9646   001C22  EF15  F00E         	goto	u5841
  9647   001C26  EF17  F00E         	goto	u5840
  9648   001C2A                     u5841:
  9649   001C2A  EF22  F00E         	goto	l5812
  9650   001C2E                     u5840:
  9651   001C2E                     
  9652                           ; BSR set to: 1
  9653   001C2E  0E00               	movlw	0
  9654   001C30  6F06               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9655   001C32  6905               	setf	___fldiv@new_exp& (0+255),b
  9656   001C34  0E00               	movlw	0
  9657   001C36  6E42               	movwf	___fldiv@b^0,c
  9658   001C38  0E00               	movlw	0
  9659   001C3A  6E43               	movwf	(___fldiv@b+1)^0,c
  9660   001C3C  0E00               	movlw	0
  9661   001C3E  6E44               	movwf	(___fldiv@b+2)^0,c
  9662   001C40  0E00               	movlw	0
  9663   001C42  6E45               	movwf	(___fldiv@b+3)^0,c
  9664   001C44                     l5812:
  9665                           
  9666                           ; BSR set to: 1
  9667   001C44  BF06               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9668   001C46  EF2F  F00E         	goto	u5850
  9669   001C4A  5106               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9670   001C4C  E106               	bnz	u5851
  9671   001C4E  0505               	decf	___fldiv@new_exp& (0+255),w,b
  9672   001C50  B0D8               	btfsc	status,0,c
  9673   001C52  EF2D  F00E         	goto	u5851
  9674   001C56  EF2F  F00E         	goto	u5850
  9675   001C5A                     u5851:
  9676   001C5A  EF3C  F00E         	goto	l5818
  9677   001C5E                     u5850:
  9678   001C5E                     
  9679                           ; BSR set to: 1
  9680   001C5E  0E00               	movlw	0
  9681   001C60  6F06               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9682   001C62  0E00               	movlw	0
  9683   001C64  6F05               	movwf	___fldiv@new_exp& (0+255),b
  9684   001C66  0E00               	movlw	0
  9685   001C68  6E42               	movwf	___fldiv@b^0,c
  9686   001C6A  0E00               	movlw	0
  9687   001C6C  6E43               	movwf	(___fldiv@b+1)^0,c
  9688   001C6E  0E00               	movlw	0
  9689   001C70  6E44               	movwf	(___fldiv@b+2)^0,c
  9690   001C72  0E00               	movlw	0
  9691   001C74  6E45               	movwf	(___fldiv@b+3)^0,c
  9692   001C76                     
  9693                           ; BSR set to: 1
  9694   001C76  6B04               	clrf	___fldiv@sign& (0+255),b
  9695   001C78                     l5818:
  9696                           
  9697                           ; BSR set to: 1
  9698   001C78  C105  F10B         	movff	___fldiv@new_exp,___fldiv@bexp
  9699   001C7C                     
  9700                           ; BSR set to: 1
  9701   001C7C  A10B               	btfss	___fldiv@bexp& (0+255),0,b
  9702   001C7E  EF43  F00E         	goto	u5861
  9703   001C82  EF45  F00E         	goto	u5860
  9704   001C86                     u5861:
  9705   001C86  EF48  F00E         	goto	l5824
  9706   001C8A                     u5860:
  9707   001C8A                     
  9708                           ; BSR set to: 1
  9709   001C8A  8E44               	bsf	(___fldiv@b+2)^0,7,c
  9710   001C8C  EF49  F00E         	goto	l5826
  9711   001C90                     l5824:
  9712                           
  9713                           ; BSR set to: 1
  9714   001C90  9E44               	bcf	(___fldiv@b+2)^0,7,c
  9715   001C92                     l5826:
  9716                           
  9717                           ; BSR set to: 1
  9718   001C92  90D8               	bcf	status,0,c
  9719   001C94  310B               	rrcf	___fldiv@bexp& (0+255),w,b
  9720   001C96  6E45               	movwf	(___fldiv@b+3)^0,c
  9721   001C98  EFF3  F00C         	goto	l5742
  9722   001C9C                     l1525:
  9723                           
  9724                           ; BSR set to: 1
  9725   001C9C  0012               	return		;funcret
  9726   001C9E                     __end_of___fldiv:
  9727                           	callstack 0
  9728                           
  9729 ;; *************** function _InterruptManaerHigh *****************
  9730 ;; Defined at:
  9731 ;;		line 50 in file "MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;		None
  9734 ;; Auto vars:     Size  Location     Type
  9735 ;;		None
  9736 ;; Return value:  Size  Location     Type
  9737 ;;                  1    wreg      void 
  9738 ;; Registers used:
  9739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  9740 ;; Tracked objects:
  9741 ;;		On entry : 0/0
  9742 ;;		On exit  : 0/0
  9743 ;;		Unchanged: 0/0
  9744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9747 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9748 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9749 ;;Total ram usage:        6 bytes
  9750 ;; Hardware stack levels used: 1
  9751 ;; Hardware stack levels required when called: 4
  9752 ;; This function calls:
  9753 ;;		_ADC_ISR
  9754 ;;		_EEPROM_ISR
  9755 ;;		_IN0_ISR
  9756 ;;		_RB4_F_ISR
  9757 ;;		_RB4_R_ISR
  9758 ;;		_RB5_F_ISR
  9759 ;;		_RB5_R_ISR
  9760 ;;		_RB6_F_ISR
  9761 ;;		_RB6_R_ISR
  9762 ;; This function is called by:
  9763 ;;		Interrupt level 2
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           	psect	intcode
  9768   000008                     __pintcode:
  9769                           	callstack 0
  9770   000008                     _InterruptManaerHigh:
  9771                           	callstack 20
  9772                           
  9773                           ; BSR set to: 1
  9774                           ;incstack = 0
  9775   000008  826E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9776   00000A  ED4F  F00E         	call	int_func,f	;refresh shadow registers
  9777                           
  9778                           	psect	intcode_body
  9779   001C9E                     __pintcode_body:
  9780                           	callstack 20
  9781   001C9E                     int_func:
  9782                           	callstack 20
  9783   001C9E  0006               	pop		; remove dummy address from shadow register refresh
  9784   001CA0  CFFA F00B          	movff	pclath,??_InterruptManaerHigh
  9785   001CA4  CFFB F00C          	movff	pclatu,??_InterruptManaerHigh+1
  9786   001CA8  CFD9 F00D          	movff	fsr2l,??_InterruptManaerHigh+2
  9787   001CAC  CFDA F00E          	movff	fsr2h,??_InterruptManaerHigh+3
  9788   001CB0  CFF3 F00F          	movff	prodl,??_InterruptManaerHigh+4
  9789   001CB4  CFF4 F010          	movff	prodh,??_InterruptManaerHigh+5
  9790   001CB8                     
  9791                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 55: if((INTCONbits.INT0E == 0x01) && (IN
      +                          TCONbits.INT0F == 0x01) ){
  9792   001CB8  A8F2               	btfss	242,4,c	;volatile
  9793   001CBA  EF61  F00E         	goto	i2u533_41
  9794   001CBE  EF63  F00E         	goto	i2u533_40
  9795   001CC2                     i2u533_41:
  9796   001CC2  EF6C  F00E         	goto	i2l5526
  9797   001CC6                     i2u533_40:
  9798   001CC6  A2F2               	btfss	242,1,c	;volatile
  9799   001CC8  EF68  F00E         	goto	i2u534_41
  9800   001CCC  EF6A  F00E         	goto	i2u534_40
  9801   001CD0                     i2u534_41:
  9802   001CD0  EF6C  F00E         	goto	i2l5526
  9803   001CD4                     i2u534_40:
  9804   001CD4                     
  9805                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 56:  IN0_ISR();
  9806   001CD4  EC88  F01A         	call	_IN0_ISR	;wreg free
  9807   001CD8                     i2l5526:
  9808                           
  9809                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 73: if((INTCONbits.RBIE == 0x01) && (INT
      +                          CONbits.RBIF == 0x01) && (PORTBbits.RB4 == RISSING_EDGE) && (RBflags[(4 -4)] == 0x01)){
  9810   001CD8  A6F2               	btfss	242,3,c	;volatile
  9811   001CDA  EF71  F00E         	goto	i2u535_41
  9812   001CDE  EF73  F00E         	goto	i2u535_40
  9813   001CE2                     i2u535_41:
  9814   001CE2  EF8C  F00E         	goto	i2l5538
  9815   001CE6                     i2u535_40:
  9816   001CE6  A0F2               	btfss	242,0,c	;volatile
  9817   001CE8  EF78  F00E         	goto	i2u536_41
  9818   001CEC  EF7A  F00E         	goto	i2u536_40
  9819   001CF0                     i2u536_41:
  9820   001CF0  EF8C  F00E         	goto	i2l5538
  9821   001CF4                     i2u536_40:
  9822   001CF4  A881               	btfss	129,4,c	;volatile
  9823   001CF6  EF7F  F00E         	goto	i2u537_41
  9824   001CFA  EF81  F00E         	goto	i2u537_40
  9825   001CFE                     i2u537_41:
  9826   001CFE  EF8C  F00E         	goto	i2l5538
  9827   001D02                     i2u537_40:
  9828   001D02  0467               	decf	_RBflags^0,w,c	;volatile
  9829   001D04  A4D8               	btfss	status,2,c
  9830   001D06  EF87  F00E         	goto	i2u538_41
  9831   001D0A  EF89  F00E         	goto	i2u538_40
  9832   001D0E                     i2u538_41:
  9833   001D0E  EF8C  F00E         	goto	i2l5538
  9834   001D12                     i2u538_40:
  9835   001D12                     
  9836                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 74: RBflags[(4 -4)] = 0x00;
  9837   001D12  6A67               	clrf	_RBflags^0,c	;volatile
  9838   001D14                     
  9839                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 75: RB4_R_ISR();
  9840   001D14  EC84  F01A         	call	_RB4_R_ISR	;wreg free
  9841   001D18                     i2l5538:
  9842                           
  9843                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 78: if((INTCONbits.RBIE == 0x01) && (INT
      +                          CONbits.RBIF == 0x01) && (PORTBbits.RB4 == FALLING_EDGE) && (RBflags[(4 -4)] == 0x00) ){
  9844   001D18  A6F2               	btfss	242,3,c	;volatile
  9845   001D1A  EF91  F00E         	goto	i2u539_41
  9846   001D1E  EF93  F00E         	goto	i2u539_40
  9847   001D22                     i2u539_41:
  9848   001D22  EFAD  F00E         	goto	i2l5550
  9849   001D26                     i2u539_40:
  9850   001D26  A0F2               	btfss	242,0,c	;volatile
  9851   001D28  EF98  F00E         	goto	i2u540_41
  9852   001D2C  EF9A  F00E         	goto	i2u540_40
  9853   001D30                     i2u540_41:
  9854   001D30  EFAD  F00E         	goto	i2l5550
  9855   001D34                     i2u540_40:
  9856   001D34  B881               	btfsc	129,4,c	;volatile
  9857   001D36  EF9F  F00E         	goto	i2u541_41
  9858   001D3A  EFA1  F00E         	goto	i2u541_40
  9859   001D3E                     i2u541_41:
  9860   001D3E  EFAD  F00E         	goto	i2l5550
  9861   001D42                     i2u541_40:
  9862   001D42  5067               	movf	_RBflags^0,w,c	;volatile
  9863   001D44  A4D8               	btfss	status,2,c
  9864   001D46  EFA7  F00E         	goto	i2u542_41
  9865   001D4A  EFA9  F00E         	goto	i2u542_40
  9866   001D4E                     i2u542_41:
  9867   001D4E  EFAD  F00E         	goto	i2l5550
  9868   001D52                     i2u542_40:
  9869   001D52                     
  9870                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 79: RBflags[(4 -4)] = 0x01;
  9871   001D52  0E01               	movlw	1
  9872   001D54  6E67               	movwf	_RBflags^0,c	;volatile
  9873   001D56                     
  9874                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 80: RB4_F_ISR();
  9875   001D56  EC86  F01A         	call	_RB4_F_ISR	;wreg free
  9876   001D5A                     i2l5550:
  9877                           
  9878                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 85: if((INTCONbits.RBIE == 0x01) && (INT
      +                          CONbits.RBIF == 0x01) && (PORTBbits.RB5 == RISSING_EDGE) && (RBflags[(5 -4)] == 0x01)){
  9879   001D5A  A6F2               	btfss	242,3,c	;volatile
  9880   001D5C  EFB2  F00E         	goto	i2u543_41
  9881   001D60  EFB4  F00E         	goto	i2u543_40
  9882   001D64                     i2u543_41:
  9883   001D64  EFCD  F00E         	goto	i2l5562
  9884   001D68                     i2u543_40:
  9885   001D68  A0F2               	btfss	242,0,c	;volatile
  9886   001D6A  EFB9  F00E         	goto	i2u544_41
  9887   001D6E  EFBB  F00E         	goto	i2u544_40
  9888   001D72                     i2u544_41:
  9889   001D72  EFCD  F00E         	goto	i2l5562
  9890   001D76                     i2u544_40:
  9891   001D76  AA81               	btfss	129,5,c	;volatile
  9892   001D78  EFC0  F00E         	goto	i2u545_41
  9893   001D7C  EFC2  F00E         	goto	i2u545_40
  9894   001D80                     i2u545_41:
  9895   001D80  EFCD  F00E         	goto	i2l5562
  9896   001D84                     i2u545_40:
  9897   001D84  0468               	decf	(_RBflags+1)^0,w,c	;volatile
  9898   001D86  A4D8               	btfss	status,2,c
  9899   001D88  EFC8  F00E         	goto	i2u546_41
  9900   001D8C  EFCA  F00E         	goto	i2u546_40
  9901   001D90                     i2u546_41:
  9902   001D90  EFCD  F00E         	goto	i2l5562
  9903   001D94                     i2u546_40:
  9904   001D94                     
  9905                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 86: RBflags[(5 -4)] = 0x00;
  9906   001D94  6A68               	clrf	(_RBflags+1)^0,c	;volatile
  9907   001D96                     
  9908                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 87: RB5_R_ISR();
  9909   001D96  EC80  F01A         	call	_RB5_R_ISR	;wreg free
  9910   001D9A                     i2l5562:
  9911                           
  9912                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 90: if((INTCONbits.RBIE == 0x01) && (INT
      +                          CONbits.RBIF == 0x01) && (PORTBbits.RB5 == FALLING_EDGE)&& (RBflags[(5 -4)] == 0x00)){
  9913   001D9A  A6F2               	btfss	242,3,c	;volatile
  9914   001D9C  EFD2  F00E         	goto	i2u547_41
  9915   001DA0  EFD4  F00E         	goto	i2u547_40
  9916   001DA4                     i2u547_41:
  9917   001DA4  EFEE  F00E         	goto	i2l5574
  9918   001DA8                     i2u547_40:
  9919   001DA8  A0F2               	btfss	242,0,c	;volatile
  9920   001DAA  EFD9  F00E         	goto	i2u548_41
  9921   001DAE  EFDB  F00E         	goto	i2u548_40
  9922   001DB2                     i2u548_41:
  9923   001DB2  EFEE  F00E         	goto	i2l5574
  9924   001DB6                     i2u548_40:
  9925   001DB6  BA81               	btfsc	129,5,c	;volatile
  9926   001DB8  EFE0  F00E         	goto	i2u549_41
  9927   001DBC  EFE2  F00E         	goto	i2u549_40
  9928   001DC0                     i2u549_41:
  9929   001DC0  EFEE  F00E         	goto	i2l5574
  9930   001DC4                     i2u549_40:
  9931   001DC4  5068               	movf	(_RBflags+1)^0,w,c	;volatile
  9932   001DC6  A4D8               	btfss	status,2,c
  9933   001DC8  EFE8  F00E         	goto	i2u550_41
  9934   001DCC  EFEA  F00E         	goto	i2u550_40
  9935   001DD0                     i2u550_41:
  9936   001DD0  EFEE  F00E         	goto	i2l5574
  9937   001DD4                     i2u550_40:
  9938   001DD4                     
  9939                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 91: RBflags[(5 -4)] = 0x01;
  9940   001DD4  0E01               	movlw	1
  9941   001DD6  6E68               	movwf	(_RBflags+1)^0,c	;volatile
  9942   001DD8                     
  9943                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 92: RB5_F_ISR();
  9944   001DD8  EC82  F01A         	call	_RB5_F_ISR	;wreg free
  9945   001DDC                     i2l5574:
  9946                           
  9947                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 97: if((INTCONbits.RBIE == 0x01) && (INT
      +                          CONbits.RBIF == 0x01) && (PORTBbits.RB6 == RISSING_EDGE) && (RBflags[(6 -4)] == 0x01)){
  9948   001DDC  A6F2               	btfss	242,3,c	;volatile
  9949   001DDE  EFF3  F00E         	goto	i2u551_41
  9950   001DE2  EFF5  F00E         	goto	i2u551_40
  9951   001DE6                     i2u551_41:
  9952   001DE6  EF0E  F00F         	goto	i2l5586
  9953   001DEA                     i2u551_40:
  9954   001DEA  A0F2               	btfss	242,0,c	;volatile
  9955   001DEC  EFFA  F00E         	goto	i2u552_41
  9956   001DF0  EFFC  F00E         	goto	i2u552_40
  9957   001DF4                     i2u552_41:
  9958   001DF4  EF0E  F00F         	goto	i2l5586
  9959   001DF8                     i2u552_40:
  9960   001DF8  AC81               	btfss	129,6,c	;volatile
  9961   001DFA  EF01  F00F         	goto	i2u553_41
  9962   001DFE  EF03  F00F         	goto	i2u553_40
  9963   001E02                     i2u553_41:
  9964   001E02  EF0E  F00F         	goto	i2l5586
  9965   001E06                     i2u553_40:
  9966   001E06  0469               	decf	(_RBflags+2)^0,w,c	;volatile
  9967   001E08  A4D8               	btfss	status,2,c
  9968   001E0A  EF09  F00F         	goto	i2u554_41
  9969   001E0E  EF0B  F00F         	goto	i2u554_40
  9970   001E12                     i2u554_41:
  9971   001E12  EF0E  F00F         	goto	i2l5586
  9972   001E16                     i2u554_40:
  9973   001E16                     
  9974                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 98: RBflags[(6 -4)] = 0x00;
  9975   001E16  6A69               	clrf	(_RBflags+2)^0,c	;volatile
  9976   001E18                     
  9977                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 99: RB6_R_ISR();
  9978   001E18  EC7C  F01A         	call	_RB6_R_ISR	;wreg free
  9979   001E1C                     i2l5586:
  9980                           
  9981                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 102: if((INTCONbits.RBIE == 0x01) && (IN
      +                          TCONbits.RBIF == 0x01) && (PORTBbits.RB6 == FALLING_EDGE) && (RBflags[(6 -4)] == 0x00) )
      +                          {
  9982   001E1C  A6F2               	btfss	242,3,c	;volatile
  9983   001E1E  EF13  F00F         	goto	i2u555_41
  9984   001E22  EF15  F00F         	goto	i2u555_40
  9985   001E26                     i2u555_41:
  9986   001E26  EF2F  F00F         	goto	i2l5598
  9987   001E2A                     i2u555_40:
  9988   001E2A  A0F2               	btfss	242,0,c	;volatile
  9989   001E2C  EF1A  F00F         	goto	i2u556_41
  9990   001E30  EF1C  F00F         	goto	i2u556_40
  9991   001E34                     i2u556_41:
  9992   001E34  EF2F  F00F         	goto	i2l5598
  9993   001E38                     i2u556_40:
  9994   001E38  BC81               	btfsc	129,6,c	;volatile
  9995   001E3A  EF21  F00F         	goto	i2u557_41
  9996   001E3E  EF23  F00F         	goto	i2u557_40
  9997   001E42                     i2u557_41:
  9998   001E42  EF2F  F00F         	goto	i2l5598
  9999   001E46                     i2u557_40:
 10000   001E46  5069               	movf	(_RBflags+2)^0,w,c	;volatile
 10001   001E48  A4D8               	btfss	status,2,c
 10002   001E4A  EF29  F00F         	goto	i2u558_41
 10003   001E4E  EF2B  F00F         	goto	i2u558_40
 10004   001E52                     i2u558_41:
 10005   001E52  EF2F  F00F         	goto	i2l5598
 10006   001E56                     i2u558_40:
 10007   001E56                     
 10008                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 103: RBflags[(6 -4)] = 0x01;
 10009   001E56  0E01               	movlw	1
 10010   001E58  6E69               	movwf	(_RBflags+2)^0,c	;volatile
 10011   001E5A                     
 10012                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 104: RB6_F_ISR();
 10013   001E5A  EC7E  F01A         	call	_RB6_F_ISR	;wreg free
 10014   001E5E                     i2l5598:
 10015                           
 10016                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 122:  if(((PIR2bits.EEIF) == 0x01) && ((
      +                          PIE2bits.EEIE) == 0x01)){
 10017   001E5E  A8A1               	btfss	161,4,c	;volatile
 10018   001E60  EF34  F00F         	goto	i2u559_41
 10019   001E64  EF36  F00F         	goto	i2u559_40
 10020   001E68                     i2u559_41:
 10021   001E68  EF3F  F00F         	goto	i2l5604
 10022   001E6C                     i2u559_40:
 10023   001E6C  A8A0               	btfss	160,4,c	;volatile
 10024   001E6E  EF3B  F00F         	goto	i2u560_41
 10025   001E72  EF3D  F00F         	goto	i2u560_40
 10026   001E76                     i2u560_41:
 10027   001E76  EF3F  F00F         	goto	i2l5604
 10028   001E7A                     i2u560_40:
 10029   001E7A                     
 10030                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 123:     EEPROM_ISR();
 10031   001E7A  EC6C  F01A         	call	_EEPROM_ISR	;wreg free
 10032   001E7E                     i2l5604:
 10033                           
 10034                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 128:    if(((PIR1bits.ADIF) == 0x01) && 
      +                          ((PIE1bits.ADIE) == 0x01)){
 10035   001E7E  AC9E               	btfss	158,6,c	;volatile
 10036   001E80  EF44  F00F         	goto	i2u561_41
 10037   001E84  EF46  F00F         	goto	i2u561_40
 10038   001E88                     i2u561_41:
 10039   001E88  EF4F  F00F         	goto	i2l729
 10040   001E8C                     i2u561_40:
 10041   001E8C  AC9D               	btfss	157,6,c	;volatile
 10042   001E8E  EF4B  F00F         	goto	i2u562_41
 10043   001E92  EF4D  F00F         	goto	i2u562_40
 10044   001E96                     i2u562_41:
 10045   001E96  EF4F  F00F         	goto	i2l729
 10046   001E9A                     i2u562_40:
 10047   001E9A                     
 10048                           ;MCAL_Layer/INTERRUPT/mcal_interrupt_manager.c: 129:     ADC_ISR();
 10049   001E9A  ECD8  F019         	call	_ADC_ISR	;wreg free
 10050   001E9E                     i2l729:
 10051   001E9E  C010  FFF4         	movff	??_InterruptManaerHigh+5,prodh
 10052   001EA2  C00F  FFF3         	movff	??_InterruptManaerHigh+4,prodl
 10053   001EA6  C00E  FFDA         	movff	??_InterruptManaerHigh+3,fsr2h
 10054   001EAA  C00D  FFD9         	movff	??_InterruptManaerHigh+2,fsr2l
 10055   001EAE  C00C  FFFB         	movff	??_InterruptManaerHigh+1,pclatu
 10056   001EB2  C00B  FFFA         	movff	??_InterruptManaerHigh,pclath
 10057   001EB6  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10058   001EB8  0011               	retfie		f
 10059   001EBA                     __end_of_InterruptManaerHigh:
 10060                           	callstack 0
 10061                           
 10062 ;; *************** function _RB6_R_ISR *****************
 10063 ;; Defined at:
 10064 ;;		line 422 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
 10065 ;; Parameters:    Size  Location     Type
 10066 ;;		None
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;		None
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  1    wreg      void 
 10071 ;; Registers used:
 10072 ;;		None
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10082 ;;Total ram usage:        0 bytes
 10083 ;; Hardware stack levels used: 1
 10084 ;; This function calls:
 10085 ;;		Nothing
 10086 ;; This function is called by:
 10087 ;;		_InterruptManaerHigh
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091                           	psect	text47
 10092   0034F8                     __ptext47:
 10093                           	callstack 0
 10094   0034F8                     _RB6_R_ISR:
 10095                           	callstack 23
 10096   0034F8                     
 10097                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 423:     (INTCONbits.RBIF = 0);
 10098   0034F8  90F2               	bcf	242,0,c	;volatile
 10099   0034FA  0012               	return		;funcret
 10100   0034FC                     __end_of_RB6_R_ISR:
 10101                           	callstack 0
 10102                           
 10103 ;; *************** function _RB6_F_ISR *****************
 10104 ;; Defined at:
 10105 ;;		line 429 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;		None
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;		None
 10110 ;; Return value:  Size  Location     Type
 10111 ;;                  1    wreg      void 
 10112 ;; Registers used:
 10113 ;;		None
 10114 ;; Tracked objects:
 10115 ;;		On entry : 0/0
 10116 ;;		On exit  : 0/0
 10117 ;;		Unchanged: 0/0
 10118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10123 ;;Total ram usage:        0 bytes
 10124 ;; Hardware stack levels used: 1
 10125 ;; This function calls:
 10126 ;;		Nothing
 10127 ;; This function is called by:
 10128 ;;		_InterruptManaerHigh
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132                           	psect	text48
 10133   0034FC                     __ptext48:
 10134                           	callstack 0
 10135   0034FC                     _RB6_F_ISR:
 10136                           	callstack 23
 10137   0034FC                     
 10138                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 430:     (INTCONbits.RBIF = 0);
 10139   0034FC  90F2               	bcf	242,0,c	;volatile
 10140   0034FE  0012               	return		;funcret
 10141   003500                     __end_of_RB6_F_ISR:
 10142                           	callstack 0
 10143                           
 10144 ;; *************** function _RB5_R_ISR *****************
 10145 ;; Defined at:
 10146 ;;		line 404 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
 10147 ;; Parameters:    Size  Location     Type
 10148 ;;		None
 10149 ;; Auto vars:     Size  Location     Type
 10150 ;;		None
 10151 ;; Return value:  Size  Location     Type
 10152 ;;                  1    wreg      void 
 10153 ;; Registers used:
 10154 ;;		None
 10155 ;; Tracked objects:
 10156 ;;		On entry : 0/0
 10157 ;;		On exit  : 0/0
 10158 ;;		Unchanged: 0/0
 10159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10164 ;;Total ram usage:        0 bytes
 10165 ;; Hardware stack levels used: 1
 10166 ;; This function calls:
 10167 ;;		Nothing
 10168 ;; This function is called by:
 10169 ;;		_InterruptManaerHigh
 10170 ;; This function uses a non-reentrant model
 10171 ;;
 10172                           
 10173                           	psect	text49
 10174   003500                     __ptext49:
 10175                           	callstack 0
 10176   003500                     _RB5_R_ISR:
 10177                           	callstack 23
 10178   003500                     
 10179                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 405:     (INTCONbits.RBIF = 0);
 10180   003500  90F2               	bcf	242,0,c	;volatile
 10181   003502  0012               	return		;funcret
 10182   003504                     __end_of_RB5_R_ISR:
 10183                           	callstack 0
 10184                           
 10185 ;; *************** function _RB5_F_ISR *****************
 10186 ;; Defined at:
 10187 ;;		line 411 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
 10188 ;; Parameters:    Size  Location     Type
 10189 ;;		None
 10190 ;; Auto vars:     Size  Location     Type
 10191 ;;		None
 10192 ;; Return value:  Size  Location     Type
 10193 ;;                  1    wreg      void 
 10194 ;; Registers used:
 10195 ;;		None
 10196 ;; Tracked objects:
 10197 ;;		On entry : 0/0
 10198 ;;		On exit  : 0/0
 10199 ;;		Unchanged: 0/0
 10200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10205 ;;Total ram usage:        0 bytes
 10206 ;; Hardware stack levels used: 1
 10207 ;; This function calls:
 10208 ;;		Nothing
 10209 ;; This function is called by:
 10210 ;;		_InterruptManaerHigh
 10211 ;; This function uses a non-reentrant model
 10212 ;;
 10213                           
 10214                           	psect	text50
 10215   003504                     __ptext50:
 10216                           	callstack 0
 10217   003504                     _RB5_F_ISR:
 10218                           	callstack 23
 10219   003504                     
 10220                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 412:     (INTCONbits.RBIF = 0);
 10221   003504  90F2               	bcf	242,0,c	;volatile
 10222   003506  0012               	return		;funcret
 10223   003508                     __end_of_RB5_F_ISR:
 10224                           	callstack 0
 10225                           
 10226 ;; *************** function _RB4_R_ISR *****************
 10227 ;; Defined at:
 10228 ;;		line 387 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
 10229 ;; Parameters:    Size  Location     Type
 10230 ;;		None
 10231 ;; Auto vars:     Size  Location     Type
 10232 ;;		None
 10233 ;; Return value:  Size  Location     Type
 10234 ;;                  1    wreg      void 
 10235 ;; Registers used:
 10236 ;;		None
 10237 ;; Tracked objects:
 10238 ;;		On entry : 0/0
 10239 ;;		On exit  : 0/0
 10240 ;;		Unchanged: 0/0
 10241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10246 ;;Total ram usage:        0 bytes
 10247 ;; Hardware stack levels used: 1
 10248 ;; This function calls:
 10249 ;;		Nothing
 10250 ;; This function is called by:
 10251 ;;		_InterruptManaerHigh
 10252 ;; This function uses a non-reentrant model
 10253 ;;
 10254                           
 10255                           	psect	text51
 10256   003508                     __ptext51:
 10257                           	callstack 0
 10258   003508                     _RB4_R_ISR:
 10259                           	callstack 23
 10260   003508                     
 10261                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 388:     (INTCONbits.RBIF = 0);
 10262   003508  90F2               	bcf	242,0,c	;volatile
 10263   00350A  0012               	return		;funcret
 10264   00350C                     __end_of_RB4_R_ISR:
 10265                           	callstack 0
 10266                           
 10267 ;; *************** function _RB4_F_ISR *****************
 10268 ;; Defined at:
 10269 ;;		line 394 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;		None
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;		None
 10274 ;; Return value:  Size  Location     Type
 10275 ;;                  1    wreg      void 
 10276 ;; Registers used:
 10277 ;;		None
 10278 ;; Tracked objects:
 10279 ;;		On entry : 0/0
 10280 ;;		On exit  : 0/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10287 ;;Total ram usage:        0 bytes
 10288 ;; Hardware stack levels used: 1
 10289 ;; This function calls:
 10290 ;;		Nothing
 10291 ;; This function is called by:
 10292 ;;		_InterruptManaerHigh
 10293 ;; This function uses a non-reentrant model
 10294 ;;
 10295                           
 10296                           	psect	text52
 10297   00350C                     __ptext52:
 10298                           	callstack 0
 10299   00350C                     _RB4_F_ISR:
 10300                           	callstack 23
 10301   00350C                     
 10302                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 395:     (INTCONbits.RBIF = 0);
 10303   00350C  90F2               	bcf	242,0,c	;volatile
 10304   00350E  0012               	return		;funcret
 10305   003510                     __end_of_RB4_F_ISR:
 10306                           	callstack 0
 10307                           
 10308 ;; *************** function _IN0_ISR *****************
 10309 ;; Defined at:
 10310 ;;		line 355 in file "MCAL_Layer/INTERRUPT/mcal_external_interrupt.c"
 10311 ;; Parameters:    Size  Location     Type
 10312 ;;		None
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;		None
 10315 ;; Return value:  Size  Location     Type
 10316 ;;                  1    wreg      void 
 10317 ;; Registers used:
 10318 ;;		None
 10319 ;; Tracked objects:
 10320 ;;		On entry : 0/0
 10321 ;;		On exit  : 0/0
 10322 ;;		Unchanged: 0/0
 10323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10328 ;;Total ram usage:        0 bytes
 10329 ;; Hardware stack levels used: 1
 10330 ;; This function calls:
 10331 ;;		Nothing
 10332 ;; This function is called by:
 10333 ;;		_InterruptManaerHigh
 10334 ;; This function uses a non-reentrant model
 10335 ;;
 10336                           
 10337                           	psect	text53
 10338   003510                     __ptext53:
 10339                           	callstack 0
 10340   003510                     _IN0_ISR:
 10341                           	callstack 23
 10342   003510                     
 10343                           ;MCAL_Layer/INTERRUPT/mcal_external_interrupt.c: 356:     (INTCONbits.INT0F = 0);
 10344   003510  92F2               	bcf	242,1,c	;volatile
 10345   003512  0012               	return		;funcret
 10346   003514                     __end_of_IN0_ISR:
 10347                           	callstack 0
 10348                           
 10349 ;; *************** function _EEPROM_ISR *****************
 10350 ;; Defined at:
 10351 ;;		line 137 in file "MCAL_Layer/INTERRUPT/mcal_internal_interrupt.c"
 10352 ;; Parameters:    Size  Location     Type
 10353 ;;		None
 10354 ;; Auto vars:     Size  Location     Type
 10355 ;;		None
 10356 ;; Return value:  Size  Location     Type
 10357 ;;                  1    wreg      void 
 10358 ;; Registers used:
 10359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10360 ;; Tracked objects:
 10361 ;;		On entry : 0/0
 10362 ;;		On exit  : 0/0
 10363 ;;		Unchanged: 0/0
 10364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10369 ;;Total ram usage:        0 bytes
 10370 ;; Hardware stack levels used: 1
 10371 ;; Hardware stack levels required when called: 1
 10372 ;; This function calls:
 10373 ;;		i2_Module_INTERRUPT_ClEAR_FLAG
 10374 ;; This function is called by:
 10375 ;;		_InterruptManaerHigh
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379                           	psect	text54
 10380   0034D8                     __ptext54:
 10381                           	callstack 0
 10382   0034D8                     _EEPROM_ISR:
 10383                           	callstack 22
 10384   0034D8                     
 10385                           ;MCAL_Layer/INTERRUPT/mcal_internal_interrupt.c: 139:    EEPROM_InterruptHandler();
 10386   0034D8  0E04               	movlw	4
 10387   0034DA  6E01               	movwf	i2Module_INTERRUPT_ClEAR_FLAG@bit_pos^0,c
 10388   0034DC  0E00               	movlw	0
 10389   0034DE  ECD6  F018         	call	i2_Module_INTERRUPT_ClEAR_FLAG
 10390   0034E2  0012               	return		;funcret
 10391   0034E4                     __end_of_EEPROM_ISR:
 10392                           	callstack 0
 10393                           
 10394 ;; *************** function _ADC_ISR *****************
 10395 ;; Defined at:
 10396 ;;		line 179 in file "MCAL_Layer/ADC/hal_adc.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;		None
 10399 ;; Auto vars:     Size  Location     Type
 10400 ;;		None
 10401 ;; Return value:  Size  Location     Type
 10402 ;;                  1    wreg      void 
 10403 ;; Registers used:
 10404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 10405 ;; Tracked objects:
 10406 ;;		On entry : 0/0
 10407 ;;		On exit  : 0/0
 10408 ;;		Unchanged: 0/0
 10409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10414 ;;Total ram usage:        0 bytes
 10415 ;; Hardware stack levels used: 1
 10416 ;; Hardware stack levels required when called: 3
 10417 ;; This function calls:
 10418 ;;		NULL
 10419 ;;		_my_adc_isr
 10420 ;;		i2_Module_INTERRUPT_ClEAR_FLAG
 10421 ;; This function is called by:
 10422 ;;		_InterruptManaerHigh
 10423 ;; This function uses a non-reentrant model
 10424 ;;
 10425                           
 10426                           	psect	text55
 10427   0033B0                     __ptext55:
 10428                           	callstack 0
 10429   0033B0                     _ADC_ISR:
 10430                           	callstack 20
 10431   0033B0                     
 10432                           ;MCAL_Layer/ADC/hal_adc.c: 180:    Module_INTERRUPT_ClEAR_FLAG(0x01,0X06);
 10433   0033B0  0E06               	movlw	6
 10434   0033B2  6E01               	movwf	i2Module_INTERRUPT_ClEAR_FLAG@bit_pos^0,c
 10435   0033B4  0E01               	movlw	1
 10436   0033B6  ECD6  F018         	call	i2_Module_INTERRUPT_ClEAR_FLAG
 10437   0033BA                     
 10438                           ;MCAL_Layer/ADC/hal_adc.c: 181:    ADC_InterruptHandler();
 10439   0033BA  D802               	call	i2u410_48
 10440   0033BC  EFEA  F019         	goto	i2u410_49
 10441   0033C0                     i2u410_48:
 10442   0033C0  0005               	push	
 10443   0033C2  6EFA               	movwf	pclath,c
 10444   0033C4  0100               	movlb	0	; () banked
 10445   0033C6  51F6               	movf	_ADC_InterruptHandler& (0+255),w,b
 10446   0033C8  6EFD               	movwf	tosl,c
 10447   0033CA  51F7               	movf	(_ADC_InterruptHandler+1)& (0+255),w,b
 10448   0033CC  6EFE               	movwf	tosh,c
 10449   0033CE  6AFF               	clrf	tosu,c
 10450   0033D0  50FA               	movf	pclath,w,c
 10451   0033D2  0012               	return		;indir
 10452   0033D4                     i2u410_49:
 10453   0033D4  0012               	return		;funcret
 10454   0033D6                     __end_of_ADC_ISR:
 10455                           	callstack 0
 10456                           
 10457 ;; *************** function i2_Module_INTERRUPT_ClEAR_FLAG *****************
 10458 ;; Defined at:
 10459 ;;		line 67 in file "MCAL_Layer/INTERRUPT/mcal_internal_interrupt.c"
 10460 ;; Parameters:    Size  Location     Type
 10461 ;;  Reg             1    wreg     unsigned char 
 10462 ;;  bit_pos         1    0[COMRAM] unsigned char 
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;  Reg             1    6[COMRAM] unsigned char 
 10465 ;;  ret             1    0        unsigned char 
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  1    wreg      unsigned char 
 10468 ;; Registers used:
 10469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10470 ;; Tracked objects:
 10471 ;;		On entry : 0/0
 10472 ;;		On exit  : 0/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10475 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10477 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10478 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;Total ram usage:        7 bytes
 10480 ;; Hardware stack levels used: 1
 10481 ;; This function calls:
 10482 ;;		Nothing
 10483 ;; This function is called by:
 10484 ;;		_EEPROM_ISR
 10485 ;;		_ADC_ISR
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           	psect	text56
 10490   0031AC                     __ptext56:
 10491                           	callstack 0
 10492   0031AC                     i2_Module_INTERRUPT_ClEAR_FLAG:
 10493                           	callstack 22
 10494                           
 10495                           ;incstack = 0
 10496                           ;i2Module_INTERRUPT_ClEAR_FLAG@Reg stored from wreg
 10497   0031AC  6E07               	movwf	i2Module_INTERRUPT_ClEAR_FLAG@Reg^0,c
 10498   0031AE                     
 10499                           ;MCAL_Layer/INTERRUPT/mcal_internal_interrupt.c: 72:    ((*(F_Reg[Reg])) &= ~((uint8)0x0
      +                          1 << (bit_pos)));
 10500   0031AE  C001  F002         	movff	i2Module_INTERRUPT_ClEAR_FLAG@bit_pos,??i2_Module_INTERRUPT_ClEAR_FLAG
 10501   0031B2  0E01               	movlw	1
 10502   0031B4  6E03               	movwf	(??i2_Module_INTERRUPT_ClEAR_FLAG+1)^0,c
 10503   0031B6  2A02               	incf	??i2_Module_INTERRUPT_ClEAR_FLAG^0,f,c
 10504   0031B8  EFE0  F018         	goto	i2u395_44
 10505   0031BC                     i2u395_45:
 10506   0031BC  90D8               	bcf	status,0,c
 10507   0031BE  3603               	rlcf	(??i2_Module_INTERRUPT_ClEAR_FLAG+1)^0,f,c
 10508   0031C0                     i2u395_44:
 10509   0031C0  2E02               	decfsz	??i2_Module_INTERRUPT_ClEAR_FLAG^0,f,c
 10510   0031C2  EFDE  F018         	goto	i2u395_45
 10511   0031C6  5003               	movf	(??i2_Module_INTERRUPT_ClEAR_FLAG+1)^0,w,c
 10512   0031C8  0AFF               	xorlw	255
 10513   0031CA  6E04               	movwf	(??i2_Module_INTERRUPT_ClEAR_FLAG+2)^0,c
 10514   0031CC  5007               	movf	i2Module_INTERRUPT_ClEAR_FLAG@Reg^0,w,c
 10515   0031CE  0D02               	mullw	2
 10516   0031D0  50F3               	movf	243,w,c
 10517   0031D2  0FB2               	addlw	low _F_Reg
 10518   0031D4  6ED9               	movwf	fsr2l,c
 10519   0031D6  6ADA               	clrf	fsr2h,c
 10520   0031D8  CFDE F005          	movff	postinc2,??i2_Module_INTERRUPT_ClEAR_FLAG+3
 10521   0031DC  CFDD F006          	movff	postdec2,??i2_Module_INTERRUPT_ClEAR_FLAG+4
 10522   0031E0  C005  FFD9         	movff	??i2_Module_INTERRUPT_ClEAR_FLAG+3,fsr2l
 10523   0031E4  C006  FFDA         	movff	??i2_Module_INTERRUPT_ClEAR_FLAG+4,fsr2h
 10524   0031E8  5004               	movf	(??i2_Module_INTERRUPT_ClEAR_FLAG+2)^0,w,c
 10525   0031EA  16DF               	andwf	indf2,f,c
 10526   0031EC  0012               	return		;funcret
 10527   0031EE                     __end_ofi2_Module_INTERRUPT_ClEAR_FLAG:
 10528                           	callstack 0
 10529                           
 10530 ;; *************** function _my_adc_isr *****************
 10531 ;; Defined at:
 10532 ;;		line 22 in file "app.c"
 10533 ;; Parameters:    Size  Location     Type
 10534 ;;		None
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;		None
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  1    wreg      void 
 10539 ;; Registers used:
 10540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10541 ;; Tracked objects:
 10542 ;;		On entry : 0/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10548 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10549 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10550 ;;Total ram usage:        2 bytes
 10551 ;; Hardware stack levels used: 1
 10552 ;; Hardware stack levels required when called: 2
 10553 ;; This function calls:
 10554 ;;		_led_turn_toggle
 10555 ;; This function is called by:
 10556 ;;		_ADC_ISR
 10557 ;; This function uses a non-reentrant model
 10558 ;;
 10559                           
 10560                           	psect	text57
 10561   003462                     __ptext57:
 10562                           	callstack 0
 10563   003462                     _my_adc_isr:
 10564                           	callstack 20
 10565   003462                     
 10566                           ;app.c: 23: led_turn_toggle(&(led1));
 10567   003462  0E6D               	movlw	low _led1
 10568   003464  6E06               	movwf	led_turn_toggle@led_config^0,c
 10569   003466  ECA0  F016         	call	_led_turn_toggle	;wreg free
 10570   00346A                     
 10571                           ;app.c: 24: _delay((unsigned long)((1000)*(8000000UL/4000.0)));
 10572   00346A  0E0B               	movlw	11
 10573   00346C  6E0A               	movwf	(??_my_adc_isr+1)^0,c
 10574   00346E  0E26               	movlw	38
 10575   003470  6E09               	movwf	??_my_adc_isr^0,c
 10576   003472  0E5E               	movlw	94
 10577   003474                     i2u592_47:
 10578   003474  2EE8               	decfsz	wreg,f,c
 10579   003476  D7FE               	bra	i2u592_47
 10580   003478  2E09               	decfsz	??_my_adc_isr^0,f,c
 10581   00347A  D7FC               	bra	i2u592_47
 10582   00347C  2E0A               	decfsz	(??_my_adc_isr+1)^0,f,c
 10583   00347E  D7FA               	bra	i2u592_47
 10584   003480  0012               	return		;funcret
 10585   003482                     __end_of_my_adc_isr:
 10586                           	callstack 0
 10587                           
 10588 ;; *************** function _led_turn_toggle *****************
 10589 ;; Defined at:
 10590 ;;		line 94 in file "ECU_Layer/led/led.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;  led_config      1    5[COMRAM] PTR const struct .
 10593 ;;		 -> led1(1), 
 10594 ;; Auto vars:     Size  Location     Type
 10595 ;;  led             1    7[COMRAM] struct .
 10596 ;;  ret             1    0        unsigned char 
 10597 ;; Return value:  Size  Location     Type
 10598 ;;                  1    wreg      unsigned char 
 10599 ;; Registers used:
 10600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10601 ;; Tracked objects:
 10602 ;;		On entry : 0/0
 10603 ;;		On exit  : 0/0
 10604 ;;		Unchanged: 0/0
 10605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10606 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10608 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10609 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10610 ;;Total ram usage:        3 bytes
 10611 ;; Hardware stack levels used: 1
 10612 ;; Hardware stack levels required when called: 1
 10613 ;; This function calls:
 10614 ;;		_gpio_pin_Toggle_logic
 10615 ;; This function is called by:
 10616 ;;		_my_adc_isr
 10617 ;; This function uses a non-reentrant model
 10618 ;;
 10619                           
 10620                           	psect	text58
 10621   002D40                     __ptext58:
 10622                           	callstack 0
 10623   002D40                     _led_turn_toggle:
 10624                           	callstack 20
 10625   002D40                     
 10626                           ;ECU_Layer/led/led.c: 97:   pin_config_t led = {.port = led_config->port,
 10627   002D40  C060  F008         	movff	led_turn_toggle@F3095,led_turn_toggle@led
 10628   002D44  5006               	movf	led_turn_toggle@led_config^0,w,c
 10629   002D46  6ED9               	movwf	fsr2l,c
 10630   002D48  6ADA               	clrf	fsr2h,c
 10631   002D4A  50DF               	movf	223,w,c
 10632   002D4C  0B07               	andlw	7
 10633   002D4E  6E07               	movwf	??_led_turn_toggle^0,c
 10634   002D50  5008               	movf	led_turn_toggle@led^0,w,c
 10635   002D52  1807               	xorwf	??_led_turn_toggle^0,w,c
 10636   002D54  0BF8               	andlw	-8
 10637   002D56  1807               	xorwf	??_led_turn_toggle^0,w,c
 10638   002D58  6E08               	movwf	led_turn_toggle@led^0,c
 10639   002D5A  5006               	movf	led_turn_toggle@led_config^0,w,c
 10640   002D5C  6ED9               	movwf	fsr2l,c
 10641   002D5E  6ADA               	clrf	fsr2h,c
 10642   002D60  30DF               	rrcf	223,w,c
 10643   002D62  32E8               	rrcf	wreg,f,c
 10644   002D64  32E8               	rrcf	wreg,f,c
 10645   002D66  0B07               	andlw	7
 10646   002D68  6E07               	movwf	??_led_turn_toggle^0,c
 10647   002D6A  4607               	rlncf	??_led_turn_toggle^0,f,c
 10648   002D6C  4607               	rlncf	??_led_turn_toggle^0,f,c
 10649   002D6E  4607               	rlncf	??_led_turn_toggle^0,f,c
 10650   002D70  5008               	movf	led_turn_toggle@led^0,w,c
 10651   002D72  1807               	xorwf	??_led_turn_toggle^0,w,c
 10652   002D74  0BC7               	andlw	-57
 10653   002D76  1807               	xorwf	??_led_turn_toggle^0,w,c
 10654   002D78  6E08               	movwf	led_turn_toggle@led^0,c
 10655   002D7A  9C08               	bcf	led_turn_toggle@led^0,6,c
 10656   002D7C  5006               	movf	led_turn_toggle@led_config^0,w,c
 10657   002D7E  6ED9               	movwf	fsr2l,c
 10658   002D80  6ADA               	clrf	fsr2h,c
 10659   002D82  ACDF               	btfss	indf2,6,c
 10660   002D84  D002               	bra	i2u340_45
 10661   002D86  8E08               	bsf	led_turn_toggle@led^0,7,c
 10662   002D88  D001               	bra	i2u340_47
 10663   002D8A                     i2u340_45:
 10664   002D8A  9E08               	bcf	led_turn_toggle@led^0,7,c
 10665   002D8C                     i2u340_47:
 10666   002D8C                     
 10667                           ;ECU_Layer/led/led.c: 102:   if (led_config == ((void*)0)) {
 10668   002D8C  5006               	movf	led_turn_toggle@led_config^0,w,c
 10669   002D8E  A4D8               	btfss	status,2,c
 10670   002D90  EFCC  F016         	goto	i2u341_41
 10671   002D94  EFCE  F016         	goto	i2u341_40
 10672   002D98                     i2u341_41:
 10673   002D98  EFD0  F016         	goto	i2l4228
 10674   002D9C                     i2u341_40:
 10675   002D9C                     
 10676                           ;ECU_Layer/led/led.c: 104:   } else {
 10677   002D9C  EFD4  F016         	goto	i2l271
 10678   002DA0                     i2l4228:
 10679                           
 10680                           ;ECU_Layer/led/led.c: 106:     gpio_pin_Toggle_logic(&led);
 10681   002DA0  0E08               	movlw	low led_turn_toggle@led
 10682   002DA2  6E01               	movwf	gpio_pin_Toggle_logic@_pin_config^0,c
 10683   002DA4  EC38  F017         	call	_gpio_pin_Toggle_logic	;wreg free
 10684   002DA8                     i2l271:
 10685   002DA8  0012               	return		;funcret
 10686   002DAA                     __end_of_led_turn_toggle:
 10687                           	callstack 0
 10688                           
 10689 ;; *************** function _gpio_pin_Toggle_logic *****************
 10690 ;; Defined at:
 10691 ;;		line 163 in file "MCAL_Layer/GPIO/hal_gpio.c"
 10692 ;; Parameters:    Size  Location     Type
 10693 ;;  _pin_config     1    0[COMRAM] PTR const struct .
 10694 ;;		 -> led_turn_toggle@led(1), 
 10695 ;; Auto vars:     Size  Location     Type
 10696 ;;  ret             1    0        unsigned char 
 10697 ;; Return value:  Size  Location     Type
 10698 ;;                  1    wreg      unsigned char 
 10699 ;; Registers used:
 10700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/0
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10706 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10708 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10709 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10710 ;;Total ram usage:        5 bytes
 10711 ;; Hardware stack levels used: 1
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_led_turn_toggle
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           	psect	text59
 10720   002E70                     __ptext59:
 10721                           	callstack 0
 10722   002E70                     _gpio_pin_Toggle_logic:
 10723                           	callstack 20
 10724   002E70                     
 10725                           ;MCAL_Layer/GPIO/hal_gpio.c: 165:     if (_pin_config == ((void*)0)) {
 10726   002E70  5001               	movf	gpio_pin_Toggle_logic@_pin_config^0,w,c
 10727   002E72  A4D8               	btfss	status,2,c
 10728   002E74  EF3E  F017         	goto	i2u321_41
 10729   002E78  EF40  F017         	goto	i2u321_40
 10730   002E7C                     i2u321_41:
 10731   002E7C  EF42  F017         	goto	i2l4006
 10732   002E80                     i2u321_40:
 10733   002E80                     
 10734                           ;MCAL_Layer/GPIO/hal_gpio.c: 167:     } else {
 10735   002E80  EF68  F017         	goto	i2l444
 10736   002E84                     i2l4006:
 10737                           
 10738                           ;MCAL_Layer/GPIO/hal_gpio.c: 168:         ((*lat_register[_pin_config->port]) ^= ((uint8
      +                          )0x01 << (_pin_config->pin)));
 10739   002E84  5001               	movf	gpio_pin_Toggle_logic@_pin_config^0,w,c
 10740   002E86  6ED9               	movwf	fsr2l,c
 10741   002E88  6ADA               	clrf	fsr2h,c
 10742   002E8A  30DF               	rrcf	223,w,c
 10743   002E8C  32E8               	rrcf	wreg,f,c
 10744   002E8E  32E8               	rrcf	wreg,f,c
 10745   002E90  0B07               	andlw	7
 10746   002E92  6E02               	movwf	??_gpio_pin_Toggle_logic^0,c
 10747   002E94  0E01               	movlw	1
 10748   002E96  6E03               	movwf	(??_gpio_pin_Toggle_logic+1)^0,c
 10749   002E98  2A02               	incf	??_gpio_pin_Toggle_logic^0,f,c
 10750   002E9A  EF51  F017         	goto	i2u322_44
 10751   002E9E                     i2u322_45:
 10752   002E9E  90D8               	bcf	status,0,c
 10753   002EA0  3603               	rlcf	(??_gpio_pin_Toggle_logic+1)^0,f,c
 10754   002EA2                     i2u322_44:
 10755   002EA2  2E02               	decfsz	??_gpio_pin_Toggle_logic^0,f,c
 10756   002EA4  EF4F  F017         	goto	i2u322_45
 10757   002EA8  5001               	movf	gpio_pin_Toggle_logic@_pin_config^0,w,c
 10758   002EAA  6ED9               	movwf	fsr2l,c
 10759   002EAC  6ADA               	clrf	fsr2h,c
 10760   002EAE  50DF               	movf	223,w,c
 10761   002EB0  0B07               	andlw	7
 10762   002EB2  0D02               	mullw	2
 10763   002EB4  50F3               	movf	243,w,c
 10764   002EB6  0F9A               	addlw	low _lat_register
 10765   002EB8  6ED9               	movwf	fsr2l,c
 10766   002EBA  6ADA               	clrf	fsr2h,c
 10767   002EBC  CFDE F004          	movff	postinc2,??_gpio_pin_Toggle_logic+2
 10768   002EC0  CFDD F005          	movff	postdec2,??_gpio_pin_Toggle_logic+3
 10769   002EC4  C004  FFD9         	movff	??_gpio_pin_Toggle_logic+2,fsr2l
 10770   002EC8  C005  FFDA         	movff	??_gpio_pin_Toggle_logic+3,fsr2h
 10771   002ECC  5003               	movf	(??_gpio_pin_Toggle_logic+1)^0,w,c
 10772   002ECE  1ADF               	xorwf	indf2,f,c
 10773   002ED0                     i2l444:
 10774   002ED0  0012               	return		;funcret
 10775   002ED2                     __end_of_gpio_pin_Toggle_logic:
 10776                           	callstack 0
 10777                           
 10778                           	psect	rparam
 10779   000001                     ___rparam_used  equ	1
 10780   000000                     ___param_bank   equ	0
 10781   000000                     __Lparam        equ	__Lrparam
 10782   000000                     __Hparam        equ	__Hrparam
 10783                           
 10784                           	psect	temp
 10785   00006E                     btemp:
 10786                           	callstack 0
 10787   00006E                     	ds	1
 10788   00006E                     int$flags       set	btemp
 10789   00006F                     wtemp8          set	btemp+1
 10790   00006F                     ttemp5          set	btemp+1
 10791   000072                     ttemp6          set	btemp+4
 10792   000076                     ttemp7          set	btemp+8
 10793                           
 10794                           	psect	idloc
 10795                           
 10796                           ;Config register IDLOC0 @ 0x200000
 10797                           ;	unspecified, using default values
 10798   200000                     	org	2097152
 10799   200000  FF                 	db	255
 10800                           
 10801                           ;Config register IDLOC1 @ 0x200001
 10802                           ;	unspecified, using default values
 10803   200001                     	org	2097153
 10804   200001  FF                 	db	255
 10805                           
 10806                           ;Config register IDLOC2 @ 0x200002
 10807                           ;	unspecified, using default values
 10808   200002                     	org	2097154
 10809   200002  FF                 	db	255
 10810                           
 10811                           ;Config register IDLOC3 @ 0x200003
 10812                           ;	unspecified, using default values
 10813   200003                     	org	2097155
 10814   200003  FF                 	db	255
 10815                           
 10816                           ;Config register IDLOC4 @ 0x200004
 10817                           ;	unspecified, using default values
 10818   200004                     	org	2097156
 10819   200004  FF                 	db	255
 10820                           
 10821                           ;Config register IDLOC5 @ 0x200005
 10822                           ;	unspecified, using default values
 10823   200005                     	org	2097157
 10824   200005  FF                 	db	255
 10825                           
 10826                           ;Config register IDLOC6 @ 0x200006
 10827                           ;	unspecified, using default values
 10828   200006                     	org	2097158
 10829   200006  FF                 	db	255
 10830                           
 10831                           ;Config register IDLOC7 @ 0x200007
 10832                           ;	unspecified, using default values
 10833   200007                     	org	2097159
 10834   200007  FF                 	db	255
 10835                           
 10836                           	psect	config
 10837                           
 10838                           ; Padding undefined space
 10839   300000                     	org	3145728
 10840   300000  FF                 	db	255
 10841                           
 10842                           ;Config register CONFIG1H @ 0x300001
 10843                           ;	Oscillator Selection bits
 10844                           ;	OSC = HS, HS oscillator
 10845                           ;	Fail-Safe Clock Monitor Enable bit
 10846                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10847                           ;	Internal/External Oscillator Switchover bit
 10848                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10849   300001                     	org	3145729
 10850   300001  02                 	db	2
 10851                           
 10852                           ;Config register CONFIG2L @ 0x300002
 10853                           ;	Power-up Timer Enable bit
 10854                           ;	PWRT = OFF, PWRT disabled
 10855                           ;	Brown-out Reset Enable bits
 10856                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 10857                           ;	Brown Out Reset Voltage bits
 10858                           ;	BORV = 1, 
 10859   300002                     	org	3145730
 10860   300002  09                 	db	9
 10861                           
 10862                           ;Config register CONFIG2H @ 0x300003
 10863                           ;	Watchdog Timer Enable bit
 10864                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10865                           ;	Watchdog Timer Postscale Select bits
 10866                           ;	WDTPS = 32768, 1:32768
 10867   300003                     	org	3145731
 10868   300003  1E                 	db	30
 10869                           
 10870                           ; Padding undefined space
 10871   300004                     	org	3145732
 10872   300004  FF                 	db	255
 10873                           
 10874                           ;Config register CONFIG3H @ 0x300005
 10875                           ;	CCP2 MUX bit
 10876                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10877                           ;	PORTB A/D Enable bit
 10878                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10879                           ;	Low-Power Timer1 Oscillator Enable bit
 10880                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10881                           ;	MCLR Pin Enable bit
 10882                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10883   300005                     	org	3145733
 10884   300005  81                 	db	129
 10885                           
 10886                           ;Config register CONFIG4L @ 0x300006
 10887                           ;	Stack Full/Underflow Reset Enable bit
 10888                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10889                           ;	Single-Supply ICSP Enable bit
 10890                           ;	LVP = OFF, Single-Supply ICSP disabled
 10891                           ;	Extended Instruction Set Enable bit
 10892                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10893                           ;	Background Debugger Enable bit
 10894                           ;	DEBUG = 0x1, unprogrammed default
 10895   300006                     	org	3145734
 10896   300006  81                 	db	129
 10897                           
 10898                           ; Padding undefined space
 10899   300007                     	org	3145735
 10900   300007  FF                 	db	255
 10901                           
 10902                           ;Config register CONFIG5L @ 0x300008
 10903                           ;	Code Protection bit
 10904                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 10905                           ;	Code Protection bit
 10906                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 10907                           ;	Code Protection bit
 10908                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 10909                           ;	Code Protection bit
 10910                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 10911   300008                     	org	3145736
 10912   300008  0F                 	db	15
 10913                           
 10914                           ;Config register CONFIG5H @ 0x300009
 10915                           ;	Boot Block Code Protection bit
 10916                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10917                           ;	Data EEPROM Code Protection bit
 10918                           ;	CPD = OFF, Data EEPROM not code-protected
 10919   300009                     	org	3145737
 10920   300009  C0                 	db	192
 10921                           
 10922                           ;Config register CONFIG6L @ 0x30000A
 10923                           ;	Write Protection bit
 10924                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 10925                           ;	Write Protection bit
 10926                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 10927                           ;	Write Protection bit
 10928                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 10929                           ;	Write Protection bit
 10930                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 10931   30000A                     	org	3145738
 10932   30000A  0F                 	db	15
 10933                           
 10934                           ;Config register CONFIG6H @ 0x30000B
 10935                           ;	Configuration Register Write Protection bit
 10936                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10937                           ;	Boot Block Write Protection bit
 10938                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 10939                           ;	Data EEPROM Write Protection bit
 10940                           ;	WRTD = OFF, Data EEPROM not write-protected
 10941   30000B                     	org	3145739
 10942   30000B  E0                 	db	224
 10943                           
 10944                           ;Config register CONFIG7L @ 0x30000C
 10945                           ;	Table Read Protection bit
 10946                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 10947                           ;	Table Read Protection bit
 10948                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10949                           ;	Table Read Protection bit
 10950                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 10951                           ;	Table Read Protection bit
 10952                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 10953   30000C                     	org	3145740
 10954   30000C  0F                 	db	15
 10955                           
 10956                           ;Config register CONFIG7H @ 0x30000D
 10957                           ;	Boot Block Table Read Protection bit
 10958                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10959   30000D                     	org	3145741
 10960   30000D  40                 	db	64
 10961                           tosu	equ	0xFFF
 10962                           tosh	equ	0xFFE
 10963                           tosl	equ	0xFFD
 10964                           stkptr	equ	0xFFC
 10965                           pclatu	equ	0xFFB
 10966                           pclath	equ	0xFFA
 10967                           pcl	equ	0xFF9
 10968                           tblptru	equ	0xFF8
 10969                           tblptrh	equ	0xFF7
 10970                           tblptrl	equ	0xFF6
 10971                           tablat	equ	0xFF5
 10972                           prodh	equ	0xFF4
 10973                           prodl	equ	0xFF3
 10974                           indf0	equ	0xFEF
 10975                           postinc0	equ	0xFEE
 10976                           postdec0	equ	0xFED
 10977                           preinc0	equ	0xFEC
 10978                           plusw0	equ	0xFEB
 10979                           fsr0h	equ	0xFEA
 10980                           fsr0l	equ	0xFE9
 10981                           wreg	equ	0xFE8
 10982                           indf1	equ	0xFE7
 10983                           postinc1	equ	0xFE6
 10984                           postdec1	equ	0xFE5
 10985                           preinc1	equ	0xFE4
 10986                           plusw1	equ	0xFE3
 10987                           fsr1h	equ	0xFE2
 10988                           fsr1l	equ	0xFE1
 10989                           bsr	equ	0xFE0
 10990                           indf2	equ	0xFDF
 10991                           postinc2	equ	0xFDE
 10992                           postdec2	equ	0xFDD
 10993                           preinc2	equ	0xFDC
 10994                           plusw2	equ	0xFDB
 10995                           fsr2h	equ	0xFDA
 10996                           fsr2l	equ	0xFD9
 10997                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        81
    BSS         75
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     75     109
    BANK0           128      6     128
    BANK1           256     13      13
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    adc_1$ADC_IN_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> my_adc_isr(), 

    ADC_choose_IN_Hdnler@ADC	PTR const struct . size(1) Largest target is 6
		 -> adc_1(BANK0[6]), 

    ADC_choose_IN_Hdnler@ADC$ADC_IN_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> my_adc_isr(), 

    ADC_choose_port_cfg@ADC	PTR const struct . size(1) Largest target is 6
		 -> adc_1(BANK0[6]), 

    ADC_choose_port_cfg@ADC$ADC_IN_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> my_adc_isr(), 

    ADC_get_value_from_reg@AnalogValue	PTR unsigned short  size(1) Largest target is 2
		 -> Value(COMRAM[2]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_adc_isr(), NULL(), 

    ADC_select_acquisition_time@ADC	PTR const struct . size(1) Largest target is 6
		 -> adc_1(BANK0[6]), 

    ADC_select_acquisition_time@ADC$ADC_IN_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> my_adc_isr(), 

    ADC_select_Chx@ADC$ADC_IN_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> my_adc_isr(), 

    ADC_select_Clk_Conversion@ADC	PTR const struct . size(1) Largest target is 6
		 -> adc_1(BANK0[6]), 

    ADC_select_Clk_Conversion@ADC$ADC_IN_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> my_adc_isr(), 

    ADC_Voltage_source@ADC	PTR const struct . size(1) Largest target is 6
		 -> adc_1(BANK0[6]), 

    ADC_Voltage_source@ADC$ADC_IN_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> my_adc_isr(), 

    convert_uint8_to_str@str	PTR unsigned char  size(1) Largest target is 0
		 -> pa(COMRAM[0]), pb(COMRAM[0]), 

    E_Reg	PTR volatile unsigned char [2] size(2) Largest target is 1
		 -> PIE1(BIGSFR[1]), PIE2(BIGSFR[1]), 

    EEPROM_INTERRUPT_INIT@EEPROM$EEPROM_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EEPROM_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0
		 -> pa(COMRAM[0]), pb(COMRAM[0]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    F_Reg	PTR volatile unsigned char [2] size(2) Largest target is 1
		 -> PIR1(BIGSFR[1]), PIR2(BIGSFR[1]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> snprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0
		 -> pa(COMRAM[0]), pb(COMRAM[0]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 1
		 -> led_initialize@led(COMRAM[1]), relay_intialize@pin_config(COMRAM[1]), 

    gpio_pin_Toggle_logic@_pin_config	PTR const struct . size(1) Largest target is 1
		 -> led_turn_toggle@led(COMRAM[1]), 

    gpio_pin_write_direction@pin_config	PTR const struct . size(1) Largest target is 10
		 -> view(BANK0[10]), view$data_bus(BANK0[8]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> led_initialize@led(COMRAM[1]), led_turn_off@led(COMRAM[1]), led_turn_on@led(COMRAM[1]), relay_turn_off@pin_config(COMRAM[1]), 
		 -> relay_turn_on@pin_config(COMRAM[1]), view(BANK0[10]), view$data_bus(BANK0[8]), 

    hal_adc_init@ADC	PTR const struct . size(1) Largest target is 6
		 -> adc_1(BANK0[6]), 

    hal_adc_read_analog_pin@ADC	PTR const struct . size(1) Largest target is 6
		 -> adc_1(BANK0[6]), 

    hal_adc_read_analog_pin@AnalogValue	PTR unsigned short  size(1) Largest target is 2
		 -> Value(COMRAM[2]), 

    IN0_InterruotHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    interrupt_INx_CallBack@INx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INx_clear_bit@INx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INx_disable@INx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INx_EdgeTrigger_init@INx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INx_enable@INx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_CallBack@RBx$EXT_InterruptHandler_FallingEdge	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_CallBack@RBx$EXT_InterruptHandler_RissingEdge	PTR FTN()void  size(2) Largest target is 0

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BIGSFR[1]), LATB(BIGSFR[1]), LATC(BIGSFR[1]), LATD(BIGSFR[1]), 
		 -> LATE(BIGSFR[1]), 

    lcd_clear_display@lcd	PTR const struct . size(1) Largest target is 10
		 -> view(BANK0[10]), 

    lcd_inintialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> view(BANK0[10]), 

    lcd_print_chr@lcd	PTR const struct . size(1) Largest target is 10
		 -> view(BANK0[10]), 

    lcd_print_string@lcd	PTR const struct . size(1) Largest target is 10
		 -> view(BANK0[10]), 

    lcd_print_string@string	PTR unsigned char  size(2) Largest target is 12
		 -> pa(COMRAM[0]), pb(COMRAM[0]), STR_4(CODE[12]), 

    lcd_print_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> view(BANK0[10]), 

    lcd_print_string_pos@string	PTR unsigned char  size(1) Largest target is 12
		 -> STR_4(CODE[12]), 

    lcd_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> view(BANK0[10]), 

    lcd_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> view(BANK0[10]), 

    led_initialize@led_config	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    led_turn_toggle@led_config	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    P_Reg	PTR volatile unsigned char [2] size(2) Largest target is 1
		 -> IPR1(BIGSFR[1]), IPR2(BIGSFR[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BIGSFR[1]), PORTB(BIGSFR[1]), PORTC(BIGSFR[1]), PORTD(BIGSFR[1]), 
		 -> PORTE(BIGSFR[1]), 

    RB4_InterruotHandlerFalling	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruotHandlerRissing	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruotHandlerFalling	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruotHandlerRissing	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruotHandlerFalling	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruotHandlerRissing	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1091$EEPROM_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S160$ADC_IN_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> my_adc_isr(), 

    S2340$buffer	PTR unsigned char  size(1) Largest target is 0
		 -> pa(COMRAM[0]), pb(COMRAM[0]), 

    S2340$source	PTR const unsigned char  size(2) Largest target is 0

    S890$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S963$EXT_InterruptHandler_FallingEdge	PTR FTN()void  size(2) Largest target is 0

    S963$EXT_InterruptHandler_RissingEdge	PTR FTN()void  size(2) Largest target is 0

    send_byte@lcd	PTR const struct . size(1) Largest target is 10
		 -> view(BANK0[10]), 

    send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> view(BANK0[10]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), 

    snprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    snprintf@s	PTR unsigned char  size(1) Largest target is 0
		 -> pa(COMRAM[0]), pb(COMRAM[0]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BIGSFR[1]), TRISB(BIGSFR[1]), TRISC(BIGSFR[1]), TRISD(BIGSFR[1]), 
		 -> TRISE(BIGSFR[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> snprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> snprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _lcd_print_string_pos->_lcd_print_string
    _lcd_print_string_pos->_lcd_set_cursor
    _lcd_set_cursor->_lcd_send_command
    _lcd_print_string->_lcd_print_chr
    _lcd_print_chr->_send_byte
    _lcd_clear_display->_lcd_send_command
    _hal_adc_read_analog_pin->_ADC_Pin_Input_switch
    _hal_adc_read_analog_pin->_ADC_get_value_from_reg
    _convert_uint8_to_str->_snprintf
    _snprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _application_instiallize->_ecu_layer_initialize
    _mcal_layer_initialize->_hal_adc_init
    _ADC_INTERRUPT_INIT->_Module_INTERRUPT_ClEAR_FLAG
    _ecu_layer_initialize->_lcd_inintialize
    _led_initialize->_gpio_pin_write_logic
    _lcd_inintialize->_lcd_send_command
    _lcd_send_command->_send_byte
    _send_enable_signal->_gpio_pin_write_logic
    _send_byte->_gpio_pin_write_logic
    ___fltol->___flmul
    ___flsub->___fladd
    ___flmul->___flsub
    ___fldiv->___flmul

Critical Paths under _InterruptManaerHigh in COMRAM

    _EEPROM_ISR->i2_Module_INTERRUPT_ClEAR_FLAG
    _ADC_ISR->_my_adc_isr
    _my_adc_isr->_led_turn_toggle
    _led_turn_toggle->_gpio_pin_Toggle_logic

Critical Paths under _main in BANK0

    _main->___fldiv

Critical Paths under _InterruptManaerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___fldiv

Critical Paths under _InterruptManaerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManaerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManaerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManaerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManaerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManaerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManaerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManaerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManaerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManaerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManaerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManaerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManaerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManaerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManaerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   16963
                                              4 BANK0      2     2      0
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
            _application_instiallize
               _convert_uint8_to_str
            _hal_adc_read_analog_pin
                  _lcd_clear_display
                      _lcd_print_chr
                   _lcd_print_string
               _lcd_print_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_print_string_pos                                 5     1      4    2750
                                             37 COMRAM     4     0      4
                   _lcd_print_string
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       4     1      3    1368
                                             33 COMRAM     4     1      3
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_print_string                                     4     1      3    1192
                                             33 COMRAM     4     1      3
                      _lcd_print_chr
 ---------------------------------------------------------------------------------
 (3) _lcd_print_chr                                        3     1      2    1051
                                             30 COMRAM     3     1      2
               _gpio_pin_write_logic
                          _send_byte
                 _send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _lcd_clear_display                                    2     1      1    1123
                                             33 COMRAM     1     0      1
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (1) _hal_adc_read_analog_pin                              5     2      3     173
                                             19 COMRAM     4     1      3
               _ADC_Pin_Input_switch
             _ADC_get_value_from_reg
 ---------------------------------------------------------------------------------
 (2) _ADC_get_value_from_reg                               3     2      1      23
                                             16 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _ADC_Pin_Input_switch                                 3     3      0      29
                                             16 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _convert_uint8_to_str                                 3     2      1    1690
                                             65 COMRAM     2     1      1
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            25    19      6    1607
                                             40 COMRAM    25    19      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    1152
                                             36 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    1027
                                             24 COMRAM    12     9      3
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     230
                                             16 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     161
                                             16 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     164
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _application_instiallize                              0     0      0    3223
               _ecu_layer_initialize
              _mcal_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _mcal_layer_initialize                                1     1      0     682
                       _hal_adc_init
 ---------------------------------------------------------------------------------
 (3) _hal_adc_init                                         4     3      1     659
                                             23 COMRAM     2     1      1
                 _ADC_INTERRUPT_INIT
                 _ADC_Voltage_source
               _ADC_choose_IN_Hdnler
                _ADC_choose_port_cfg
          _ADC_select_Clk_Conversion
        _ADC_select_acquisition_time
      _GLOBAL_INTERRUPT_RETURN_STATE
            _GLOBAL_INTERUPT_DISABLE
 ---------------------------------------------------------------------------------
 (4) _GLOBAL_INTERRUPT_RETURN_STATE                        2     2      0      53
                                             16 COMRAM     1     1      0
            _GLOBAL_INTERUPT_DISABLE
             _GLOBAL_INTERUPT_ENABLE
 ---------------------------------------------------------------------------------
 (4) _ADC_select_acquisition_time                          3     2      1      53
                                             16 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _ADC_select_Clk_Conversion                            3     2      1      53
                                             16 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _ADC_choose_port_cfg                                  4     3      1      53
                                             16 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (4) _ADC_choose_IN_Hdnler                                 2     1      1      53
                                             16 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (4) _ADC_Voltage_source                                   2     1      1      54
                                             16 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (4) _ADC_INTERRUPT_INIT                                   1     1      0     154
            _GLOBAL_INTERUPT_DISABLE
             _GLOBAL_INTERUPT_ENABLE
        _Module_INTERRUPT_ClEAR_FLAG
            _Module_INTERRUPT_ENABLE
 ---------------------------------------------------------------------------------
 (5) _Module_INTERRUPT_ENABLE                              7     6      1      77
                                             16 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (5) _Module_INTERRUPT_ClEAR_FLAG                          8     7      1      77
                                             16 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (5) _GLOBAL_INTERUPT_ENABLE                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _GLOBAL_INTERUPT_DISABLE                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0    2541
                                             37 COMRAM     1     1      0
                    _lcd_inintialize
                     _led_initialize
 ---------------------------------------------------------------------------------
 (3) _led_initialize                                       5     4      1     633
                                             24 COMRAM     5     4      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     206
                                             16 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (3) _lcd_inintialize                                      4     3      1    1883
                                             33 COMRAM     4     3      1
           _gpio_pin_write_direction
               _gpio_pin_write_logic
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_send_command                                     3     1      2    1069
                                             30 COMRAM     3     1      2
               _gpio_pin_write_logic
                          _send_byte
                 _send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _send_enable_signal                                   2     1      1     303
                                             24 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _send_byte                                            6     4      2     394
                                             24 COMRAM     6     4      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2     209
                                             16 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_direction                             8     6      2     169
                                             16 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     338
                                             16 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     231
                                             65 COMRAM    10     6      4
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    2033
                                             32 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    1986
                                             16 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1470
                                             40 COMRAM    25    17      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1689
                                             65 COMRAM     8     0      8
                                              0 BANK0      4     4      0
                                              0 BANK1     13    13      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManaerHigh                                  6     6      0     323
                                             10 COMRAM     6     6      0
                            _ADC_ISR
                         _EEPROM_ISR
                            _IN0_ISR
                          _RB4_F_ISR
                          _RB4_R_ISR
                          _RB5_F_ISR
                          _RB5_R_ISR
                          _RB6_F_ISR
                          _RB6_R_ISR
 ---------------------------------------------------------------------------------
 (8) _RB6_R_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB6_F_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB5_R_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB5_F_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB4_R_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB4_F_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _IN0_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EEPROM_ISR                                           0     0      0      61
      i2_Module_INTERRUPT_ClEAR_FLAG
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0     262
                                NULL *
                         _my_adc_isr *
      i2_Module_INTERRUPT_ClEAR_FLAG
 ---------------------------------------------------------------------------------
 (9) i2_Module_INTERRUPT_ClEAR_FLAG                        8     7      1      61
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (9) _my_adc_isr                                           2     2      0     201
                                              8 COMRAM     2     2      0
                    _led_turn_toggle
 ---------------------------------------------------------------------------------
 (10) _led_turn_toggle                                     4     3      1     201
                                              5 COMRAM     3     2      1
              _gpio_pin_Toggle_logic
 ---------------------------------------------------------------------------------
 (11) _gpio_pin_Toggle_logic                               6     5      1      75
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___flsub
   ___fltol
     ___flmul (ARG)
     ___flsub (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _application_instiallize
     _ecu_layer_initialize
       _lcd_inintialize
         _gpio_pin_write_direction
         _gpio_pin_write_logic
         _lcd_send_command
           _gpio_pin_write_logic
           _send_byte
             _gpio_pin_write_logic
           _send_enable_signal
             _gpio_pin_write_logic
       _led_initialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
     _mcal_layer_initialize
       _hal_adc_init
         _ADC_INTERRUPT_INIT
           _GLOBAL_INTERUPT_DISABLE
           _GLOBAL_INTERUPT_ENABLE
           _Module_INTERRUPT_ClEAR_FLAG
           _Module_INTERRUPT_ENABLE
         _ADC_Voltage_source
         _ADC_choose_IN_Hdnler
         _ADC_choose_port_cfg
         _ADC_select_Clk_Conversion
         _ADC_select_acquisition_time
         _GLOBAL_INTERRUPT_RETURN_STATE
           _GLOBAL_INTERUPT_DISABLE
           _GLOBAL_INTERUPT_ENABLE
         _GLOBAL_INTERUPT_DISABLE
   _convert_uint8_to_str
     _snprintf
       _vfprintf
         _vfpfcnvrt
           ___lwdiv
           ___lwmod
           _fputc
             _putch
   _hal_adc_read_analog_pin
     _ADC_Pin_Input_switch
     _ADC_get_value_from_reg
   _lcd_clear_display
     _lcd_send_command
   _lcd_print_chr
     _gpio_pin_write_logic
     _send_byte
     _send_enable_signal
   _lcd_print_string
     _lcd_print_chr
   _lcd_print_string_pos
     _lcd_print_string
     _lcd_set_cursor
       _lcd_send_command

 _InterruptManaerHigh (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _my_adc_isr *
       _led_turn_toggle
         _gpio_pin_Toggle_logic
     i2_Module_INTERRUPT_ClEAR_FLAG *
   _EEPROM_ISR
     i2_Module_INTERRUPT_ClEAR_FLAG
   _IN0_ISR
   _RB4_F_ISR
   _RB4_R_ISR
   _RB5_F_ISR
   _RB5_R_ISR
   _RB6_F_ISR
   _RB6_R_ISR

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3967      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256     13      13      5.1%
BITBANK15          128      0       0      0.0%
BANK15             128      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      6     128    100.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     75     109     86.5%
BITBIGSFRlh         64      0       0      0.0%
BITBIGSFRh          61      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     248      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Aug 31 06:12:07 2025

           __end_of_ADC_Pin_Input_switch 2A5C                             ___fldiv@aexp 010C  
                           ___fldiv@bexp 010B                             ___fldiv@sign 0104  
                                     l33 34F0                                       l43 3460  
                                     l36 34F6                                       l52 34D6  
                  ??_InterruptManaerHigh 000B                                       _pa 0067  
                                     _pb 0067          ADC_Pin_Input_switch@UsedChannel 0013  
                      ??_led_turn_toggle 0007                    ADC_Voltage_source@ADC 0011  
                                    l141 25C8                                      l214 2F42  
                                    l223 32E6                                      l151 343E  
                                    l218 2F84                                      l146 326C  
                                    l250 2CCA                                      l156 322C  
                                    l228 2A8C                                      l180 2F2A  
                                    l405 24B4                                      l173 2C44  
                                    l237 2B0A                                      l415 2982  
                                    l432 27BC                                      l168 2BDA  
                                    l194 3380                                      l178 2F02  
                                    l357 34BA                                      l398 23DA  
                                    l646 32AA                                      l831 34CA  
                                    l666 31AA                                      l922 30D6  
                                    l932 2FA6                                      l677 349E  
                                    l917 2A5A                                      l934 2FC4  
                                    l871 3030                                      l864 2FF0  
                                    l881 331A                                      l937 2FDA  
                                    l891 341C                                      l868 2FF8  
                                    l886 33AE                                      l896 334E  
                                    l899 33F8                     _lcd_print_string_pos 2ED2  
                        __end_of_ADC_ISR 33D6                                      _ret 006B  
                    led_initialize@F3079 0063                                      tosl 0FFD  
                                    wreg 0FE8                           ?_lcd_print_chr 001F  
                           ___flmul@aexp 003A                             ___flmul@bexp 003B  
                           ___flmul@sign 0035                             ___flmul@temp 0040  
                           ___flmul@prod 003C                          __end_of_IN0_ISR 3514  
                        ?_lcd_set_cursor 0022                led_turn_toggle@led_config 0006  
                           ___fltol@exp1 004B                                     l1240 26CE  
                                   l1504 148A                                     l1513 3166  
                                   l1601 206C                                     l1441 2D3E  
                                   l1530 1AAE                                     l4010 3482  
                                   l1434 2D36                                     l1451 2E0C  
                                   l1612 2004                                     l4012 3486  
                                   l4020 3000                                     l1444 2E04  
                                   l4100 21D8                                     l1525 1C9C  
                                   l1605 1FA8                                     l4014 3490  
                                   l4030 3382                                     l4022 32E8  
                                   l4110 3086                                     l4102 21F8  
                                   l1527 1AEA                                     l1471 11FA  
                                   l1536 1B30                                     l1480 14C6  
                                   l1472 11E8                                     l5000 1F52  
                                   l4200 2C96                                     l4016 2FDC  
                                   l4040 340A                                     l4032 3392  
                                   l4024 32F8                                     l4120 30AE  
                                   l4112 3096                                     l1704 3514  
                                   l4104 2200                                     l1624 28A8  
                                   l1537 1B4E                                     l1561 18EC  
                                   l1473 11AE                                     l1538 1BB6  
                                   l5010 1FDA                                     l5002 1F5E  
                                   l4202 2C9E                                     l4018 2FEC  
                                   l4042 340E                                     l4050 3330  
                                   l4034 3396                                     l4026 32FC  
                                   l4130 30C8                                     l4122 30B6  
                                   l4114 309A                                     l1539 1BA4  
                                   l1564 1782                                     l5020 2018  
                                   l5012 1FE6                                     l5004 1F90  
                                   l4140 24D0                                     l4204 2CAE  
                                   l4132 30D0                                     l4124 30BE  
                                   l4116 309E                                     l4108 3086  
                                   l4060 20A2                                     l4300 283C  
                                   l1565 17A0                                     l1557 158C  
                                   l1485 13A2                                     l1629 2896  
                                   l1574 18AE                                     l1566 17F8  
                                   l5022 203C                                     l5014 1FF4  
                                   l5006 1F92                                     l4150 252E  
                                   l4142 2508                                     l4206 2CB4  
                                   l4038 33FA                                     l4046 331C  
                                   l4126 30C0                                     l4118 30A6  
                                   l4070 20F4                                     l4062 20B0  
                                   l4054 206E                                     l4302 284E  
                                   l1567 17E6                                     l1671 219E  
                                   l1488 1314                                     l4400 10D8  
                                   l5024 204C                                     l5016 2012  
                                   l5008 1F9E                                     l4160 257A  
                                   l4152 2530                                     l4136 24B6  
                                   l4208 2CC8                                     l4312 34A0  
                                   l4048 332C                                     l4128 30C2  
                                   l4240 34CC                                     l1672 2208  
                                   l4080 214A                                     l4072 2102  
                                   l4064 20B4                                     l4056 2076  
                                   l4232 3032                                     l4304 285C  
                                   l1497 13E2                                     l1498 13D0  
                                   l4410 1112                                     l4402 10DE  
                                   l5026 205A                                     l5018 2014  
                                   l4170 25B8                                     l4162 2580  
                                   l4154 2540                                     l4138 24CA  
                                   l4314 34A4                                     l4242 34CC  
                                   l4082 215C                                     l4074 2106  
                                   l4066 20BE                                     l4058 209A  
                                   l4234 3036                                     l4306 2886  
                                   l4330 2990                                     l4250 2A6C  
                                   l4420 1126                                     l4412 1116  
                                   l4404 10EE                                     l5028 205C  
                                   l4164 258E                                     l4156 2550  
                                   l4148 250A                                     l4172 25C6  
                                   l4316 34AE                                     l4244 34D4  
                                   l4084 2170                                     l4076 212A  
                                   l4092 21AA                                     l4068 20DC  
                                   l4236 3044                                     l4308 289E  
                                   l4340 29AE                                     l4332 2996  
                                   l4324 33D6                                     l4180 31FE  
                                   l4260 2ACE                                     l4252 2A7C  
                                   l1693 2BB4                                     l4510 1376  
                                   l4502 134E                                     l4430 113A  
                                   l4422 112A                                     l4414 111A  
                                   l4406 1100                                     l1598 1F10  
                                   l4166 259C                                     l4158 255E  
                                   l4190 2C4A                                     l4086 218A  
                                   l4078 2146                                     l4094 21C4  
                                   l1678 307C                                     l4238 305E  
                                   l4350 29CC                                     l4342 29B4  
                                   l4334 299C                                     l4326 2986  
                                   l4182 3204                                     l4270 2BB8  
                                   l4254 2A92                                     l4262 2AE2  
                                   l1679 3084                                     l4520 13B2  
                                   l4512 137E                                     l4504 1358  
                                   l4432 113E                                     l4424 112E  
                                   l4416 111E                                     l4408 110E  
                                   l4440 114E                                     l4168 25AA  
                                   l4192 2C4E                                     l4096 21CC  
                                   l4088 218C                                     l4600 3352  
                                   l4352 29D2                                     l4344 29BA  
                                   l4336 29A2                                     l4328 298A  
                                   l4184 322A                                     l4176 31EE  
                                   l4280 2C42                                     l4272 2BC8  
                                   l4256 2AA6                                     l4264 2B08  
                                   l4248 2A5C                                     l4530 140C  
                                   l4522 13C8                                     l4514 1382  
                                   l4506 1366                                     l4450 11C8  
                                   l4442 117A                                     l4434 1142  
                                   l4426 1132                                     l4418 1122  
                                   l4370 103E                                     l4362 1012  
                                   l4194 2C64                                     l4290 27DE  
                                   l4602 3352                                     l4346 29C0  
                                   l4338 29A8                                     l4178 31EE  
                                   l4274 2BE0                                     l4258 2ABA  
                                   l4540 1488                                     l4532 1446  
                                   l4516 1392                                     l4508 1368  
                                   l4460 1208                                     l4452 11CC  
                                   l4444 1196                                     l4436 1146  
                                   l4428 1136                                     l4380 1076  
                                   l4372 104E                                     l4364 101E  
                                   l3820 26EA                                     l4196 2C84  
                                   l4188 2C46                                     l3900 2CEE  
                                   l4292 27FC                                     l4284 27BE  
                                   l4604 3362                                     l4348 29C6  
                                   l4356 29D8                                     l4276 2C0C  
                                   l4268 2BB6                                     l4550 14B4  
                                   l4542 1498                                     l4526 13F2  
                                   l4534 1448                                     l4518 1394  
                                   l4470 124A                                     l4462 1218  
                                   l4454 11DA                                     l4446 11A6  
                                   l4438 114A                                     l4390 10A4  
                                   l4382 107C                                     l4374 105E  
                                   l4366 102C                                     l3822 2740  
                                   l4198 2C86                                     l3910 2D28  
                                   l3902 2CF6                                     l4294 2808  
                                   l4286 27D0                                     l4606 3366  
                                   l4278 2C10                                     l4552 14B6  
                                   l4544 149E                                     l4536 1458  
                                   l4528 13FE                                     l4480 1278  
                                   l4472 1258                                     l4456 11DC  
                                   l4448 11BC                                     l4392 10A6  
                                   l4384 108E                                     l4376 1060  
                                   l4368 102E                                     l3824 2790  
                                   l3816 26D0                                     l3840 2F2C  
                                   l3912 2D2A                                     l3904 2D04  
                                   l3920 2DC4                                     l4296 2814  
                                   l4810 14D4                                     l4546 14A0  
                                   l4538 1468                                     l4490 12E4  
                                   l4482 1282                                     l4474 1264  
                                   l4466 122C                                     l4458 11E6  
                                   l4394 10B6                                     l4386 1090  
                                   l4378 1066                                     l3826 27BA  
                                   l3818 26E4                                     l3850 2F70  
                                   l3842 2F3C                                     l3834 34EC  
                                   l3914 2D30                                     l3906 2D0A  
                                   l3930 2DFE                                     l3922 2DCC  
                                   l4298 2824                                     l4570 3432  
                                   l5700 18FC                                     l4900 17DE  
                                   l4820 1514                                     l4812 14E2  
                                   l4548 14A6                                     l4492 12F4  
                                   l4476 1268                                     l4468 123C  
                                   l4484 1288                                     l4396 10C6  
                                   l4388 1096                                     l3852 2F72  
                                   l3860 32AC                                     l3836 34F2  
                                   l4652 34BC                                     l3908 2D20  
                                   l3924 2DDA                                     l3916 2DAA  
                                   l3940 2B52                                     l3932 2B0C  
                                   l4660 2F96                                     l4564 341E  
                                   l5710 193C                                     l5702 190A  
                                   l4910 184C                                     l4830 1544  
                                   l4822 151A                                     l4814 14E4  
                                   l4486 12AE                                     l4494 1304  
                                   l4478 1276                                     l4398 10D6  
                                   l3950 28C4                                     l3854 2F82  
                                   l3838 2F2C                                     l3870 32E4  
                                   l3862 32BC                                     l4654 34C8  
                                   l3926 2DF0                                     l3918 2DBC  
                                   l3942 2B84                                     l3934 2B1C  
                                   l4662 2FAA                                     l4566 341E  
                                   l4590 2EE2                                     l5800 1BC8  
                                   l5720 1960                                     l5712 193E  
                                   l5704 190C                                     l4920 18A8  
                                   l4904 1808                                     l4912 1850  
                                   l4840 157C                                     l4832 1546  
                                   l4824 152A                                     l4816 14F4  
                                   l4808 14C8                                     l4496 132A  
                                   l4488 12E2                                     l3952 291A  
                                   l3848 2F44                                     l3864 32C2  
                                   l3880 32A8                                     l3960 3442  
                                   l3928 2DF8                                     l3936 2B2C  
                                   l4664 2FBC                                     l4568 342E  
                                   l4592 2EF2                                     l5810 1C2E  
                                   l5802 1BD4                                     l5730 19A0  
                                   l5722 196E                                     l5706 191C  
                                   l5714 1944                                     l4922 18B2  
                                   l4930 18D8                                     l4914 186A  
                                   l4906 1814                                     l4850 15CC  
                                   l4842 159C                                     l4834 1556  
                                   l4826 1530                                     l4818 1504  
                                   l4498 133A                                     l3954 296A  
                                   l3946 28AA                                     l3866 32CE  
                                   l3858 32AC                                     l3890 31A8  
                                   l3874 3270                                     l3970 345E  
                                   l3938 2B36                                     l4666 2FC2  
                                   l4658 2F86                                     l4594 2F06  
                                   l5820 1C7C                                     l5812 1C44  
                                   l5804 1BE2                                     l5740 19DE  
                                   l5732 19A2                                     l5724 1970  
                                   l5716 1954                                     l5708 192C  
                                   l4932 18DC                                     l4924 18C2  
                                   l4916 187E                                     l4908 1822  
                                   l4860 161C                                     l4852 15D6  
                                   l4844 15AC                                     l4836 1566  
                                   l4828 1536                                     l3956 2980  
                                   l3948 28BE                                     l5900 27A4  
                                   l3868 32D6                                     l3980 23E0  
                                   l3884 316A                                     l3964 3442  
                                   l4668 2FD2                                     l4596 2F16  
                                   l4588 2ED2                                     l5822 1C8A  
                                   l5814 1C5E                                     l5806 1C0E  
                                   l5750 1A0E                                     l5742 19E6  
                                   l5726 1980                                     l5734 19A8  
                                   l5718 195A                                     l4926 18D0  
                                   l4918 1898                                     l4870 165E  
                                   l4862 1628                                     l4854 15EC  
                                   l4838 1576                                     l4950 261E  
                                   l4942 25CA                                     l3990 322E  
                                   l3982 2436                                     l3974 238A  
                                   l3878 3270                                     l3966 3452  
                                   l3894 2CCC                                     l5824 1C90  
                                   l5816 1C76                                     l5808 1C14  
                                   l5760 1A54                                     l5752 1A0E  
                                   l5744 19EA                                     l5736 19B8  
                                   l5728 1990                                     l4928 18D2  
                                   l4880 16C0                                     l4872 166E  
                                   l4864 1636                                     l4856 15F8  
                                   l4848 15C0                                     l4936 3122  
                                   l4952 2620                                     l4944 25E0  
                                   l3992 322E                                     l3984 2486  
                                   l3976 239E                                     l3888 316A  
                                   l3968 345A                                     l3896 2CD4  
                                   l5840 22A2                                     l5826 1C92  
                                   l5818 1C78                                     l5770 1A9E  
                                   l5762 1A64                                     l5738 19CE  
                                   l4890 1768                                     l4882 16DC  
                                   l4874 1688                                     l4866 1642  
                                   l4858 1610                                     l4938 3132  
                                   l4954 2630                                     l3994 323E  
                                   l3986 24B2                                     l3978 23BE  
                                   l3898 2CE6                                     l5850 234A  
                                   l5842 2312                                     l5834 220A  
                                   l5780 1AE8                                     l5772 1AAC  
                                   l5764 1A74                                     l5756 1A22  
                                   l5748 19FE                                     l4892 1772  
                                   l4884 1706                                     l4876 1698  
                                   l4868 1652                                     l4980 26AE  
                                   l4964 265A                                     l4956 2634  
                                   l4948 25F4                                     l3996 3244  
                                   l5852 2354                                     l5844 2326  
                                   l5836 2210                                     l5790 1B2E  
                                   l5782 1AFA                                     l5774 1AB8  
                                   l5766 1A7A                                     l5758 1A44  
                                   l4894 1780                                     l4886 173C  
                                   l4878 16B4                                     l4982 26BE  
                                   l4974 2682                                     l4966 2664  
                                   l4958 2642                                     l4990 1EDA  
                                   l3998 326A                                     l5854 2362  
                                   l5846 2330                                     l5838 2220  
                                   l5784 1B10                                     l5792 1B40  
                                   l5776 1AD6                                     l5768 1A8A  
                                   l4896 1792                                     l4888 174A  
                                   l4976 268E                                     l4968 266E  
                                   l4992 1F20                                     l5856 237A  
                                   l5848 233E                                     l5794 1B5E  
                                   l5786 1B16                                     l5778 1AD8  
                                   l5698 18EE                                     l4898 17B0  
                                   l4978 269E                                     l4994 1F36  
                                   l4986 1EBC                                     l5796 1B9A  
                                   l5788 1B20                                     l4988 1ECC  
                                   l4998 1F4A                                     l5898 29EC  
                                   STR_1 100D                                     STR_4 1001  
                                   u3000 2CE6                                     u3001 2CE2  
                                   u3010 2D04                                     u3011 2D00  
                                   u3100 28BE                                     u3020 2D20  
                                   u3101 28BA                                     u3021 2D1C  
                                   _LATA 0F89                                     u3030 2DBC  
                                   _LATB 0F8A                                     u3031 2DB8  
                                   _LATC 0F8B                                     u3200 323E  
                                   u3040 2DDA                                     u4000 2EE2  
                                   _LATD 0F8C                                     u3201 323A  
                                   u3041 2DD6                                     u4001 2EDE  
                                   _LATE 0F8D                                     u3114 28E2  
                                   u3130 3452                                     u3050 2DF0  
                                   u4010 2EF2                                     u3115 28DE  
                                   u3131 344E                                     u3051 2DEC  
                                   u4011 2EEE                                     u3124 2938  
                                   u3140 239E                                     u3060 2B1C  
                                   u3300 20DC                                     u4020 2F02  
                                   u3125 2934                                     u3141 239A  
                                   u3061 2B18                                     u3301 20D8  
                                   u4021 2EFE                                     u3150 23BE  
                                   u3230 2FEC                                     u3070 2B2C  
                                   u3310 215C                                     u4030 3362  
                                   u4110 2F96                                     u3151 23BA  
                                   u3231 2FE8                                     u3071 2B28  
                                   u3311 2158                                     u4031 335E  
                                   u4111 2F92                                     u3160 23DA  
                                   u3240 301A                                     u3080 2B52  
                                   u3320 216C                                     u4120 2FA6  
                                   u3161 23D6                                     u3241 3014  
                                   u3081 2B4E                                     u3321 2168  
                                   u4121 2FA2                                     u3250 32F8  
                                   u3090 2B84                                     u3330 219E  
                                   u4130 2FD2                                     u3251 32F4  
                                   u3091 2B80                                     u3331 219A  
                                   u4131 2FCE                                     u3260 3392  
                                   u3340 3096                                     u3420 307C  
                                   u3500 2C42                                     u3261 338E  
                                   u3341 3092                                     u3421 3078  
                                   u3501 2C3E                                     _IPR1 0F9F  
                                   u3350 24CA                                     u3190 249C  
                                   u3174 23FE                                     u3246 301C  
                                   u3270 340A                                     u3510 27D0  
                                   u3430 2A6C                                     _IPR2 0FA2  
                                   u3351 24C6                                     u3191 2496  
                                   u3175 23FA                                     u3271 3406  
                                   u3511 27CC                                     u3431 2A68  
                                   _PIE1 0F9D                                     u4400 1544  
                                   u3600 10A4                                     u3360 2540  
                                   u3184 2454                                     u3280 332C  
                                   u3520 27FC                                     u3440 2A7C  
                                   _PIE2 0FA0                                     u4401 1540  
                                   u3601 10A0                                     u3361 253C  
                                   u3185 2450                                     u3281 3328  
                                   u3521 27F8                                     u3441 2A78  
                                   u4410 1556                                     u3610 10B6  
                                   u3290 209A                                     u3530 284E  
                                   u3370 31FE                                     u3450 2A8C  
                                   u4411 1552                                     u3611 10B2  
                                   u3291 2096                                     u3531 284A  
                                   u3371 31FA                                     u3451 2A88  
                                   u4500 17F4                                     u4420 1566  
                                   u3700 11FA                                     u3620 10C6  
                                   u3196 249E                                     u3540 285C  
                                   u3460 2BC8                                     u4501 17F0  
                                   u4421 1562                                     u3701 11F6  
                                   u3621 10C2                                     u3541 2858  
                                   u3461 2BC4                                     u4510 1808  
                                   u4430 159C                                     u3710 1208  
                                   u3630 1100                                     u2910 26E4  
                                   u3390 2CAE                                     u3550 2886  
                                   u3470 2BDA                                     u4511 1804  
                                   u4431 1598                                     u3711 1204  
                                   u3631 10FC                                     u2911 26E0  
                                   u3391 2CAA                                     u3551 2882  
                                   u3471 2BD6                                     u4520 1822  
                                   u4440 15AC                                     u3800 1366  
                                   u3720 1218                                     u3640 110E  
                                   u3560 102C                                     u4600 267E  
                                   u3480 2C06                                     u4521 181E  
                                   u4441 15A8                                     u3801 1362  
                                   u3721 1214                                     u3641 110A  
                                   u3561 1028                                     u4601 267A  
                                   u3385 2C94                                     u4530 186A  
                                   u4450 1726                                     u4370 14E2  
                                   u3810 1376                                     u3730 124A  
                                   u3650 117A                                     u3570 103E  
                                   u4610 269E                                     u3490 2C32  
                                   u4531 1866                                     u4371 14DE  
                                   u3811 1372                                     u3731 1246  
                                   u3651 1176                                     u3571 103A  
                                   u4611 269A                                     u3387 2C96  
                                   u4540 1898                                     u4460 1780  
                                   u4380 14F4                                     u3900 1458  
                                   u3820 1392                                     u3740 1258  
                                   u3660 1192                                     u3580 104E  
                                   u4620 26AE                                     u4700 2012  
                                   u2924 2708                                     u2940 2F3C  
                                   u4541 1894                                     u4461 177C  
                                   u4381 14F0                                     u3901 1454  
                                   u3821 138E                                     u3741 1254  
                                   u3661 118C                                     u3581 104A  
                                   u4621 26AA                                     u4701 200E  
                                   u2925 2704                                     u2941 2F38  
                                   u4550 18D0                                     u4470 17A0  
                                   u4390 1504                                     u3910 1468  
                                   u3830 13A2                                     u3750 1276  
                                   u3670 1194                                     u3590 108E  
                                   u4710 204C                                     u4630 1ECC  
                                   u2934 275E                                     u4551 18CC  
                                   u4471 179C                                     u4455 171C  
                                   u4391 1500                                     u3911 1464  
                                   u3831 139E                                     u3751 1272  
                                   u3591 108A                                     u4711 2048  
                                   u4631 1EC8                                     u2935 275A  
                                   u3487 2BFC                                     u4480 17B0  
                                   u3920 1488                                     u3840 13B2  
                                   u3760 12AE                                     u3680 11BC  
                                   u4560 25E0                                     u4720 205A  
                                   u4640 1EDA                                     u2960 2F82  
                                   u4481 17AC                                     u3921 1484  
                                   u3841 13AE                                     u3761 12AA  
                                   u3681 11B8                                     u4561 25DC  
                                   u4721 2056                                     u4641 1ED6  
                                   u2961 2F7E                                     u3497 2C28  
                                   u4490 17DE                                     u3930 1498  
                                   u3850 13C8                                     u3770 12F4  
                                   u3690 11DA                                     u4570 2614  
                                   u4650 1F36                                     u2954 2F5E  
                                   u2970 32BC                                     u4491 17DA  
                                   u3931 1494                                     u3851 13C4  
                                   u3771 12F0                                     u3691 11D6  
                                   u4651 1F32                                     u2955 2F5A  
                                   u2971 32B8                                     u5700 19CE  
                                   u3940 14B4                                     u3860 13DE  
                                   u3780 132A                                     u4580 2642  
                                   u4660 1F8C                                     u5701 19CA  
                                   u3941 14B0                                     u3861 13DA  
                                   u3781 1326                                     u4581 263E  
                                   u4661 1F88                                     u5710 1A0E  
                                   u3870 13F2                                     u3790 133A  
                                   u4590 2656                                     u4670 1FD6  
                                   u5711 1A0A                                     u3871 13EE  
                                   u3791 1336                                     u4591 2652  
                                   u4575 260A                                     u4671 1FD2  
                                   u5800 1B9A                                     u5720 1A8A  
                                   u5640 190A                                     u3880 140C  
                                   u4680 1FF4                                     u2984 3282  
                                   u3960 342E                                     u5801 1B96  
                                   u5721 1A86                                     u5641 1906  
                                   u3881 1408                                     u4681 1FF0  
                                   u2985 327E                                     u3961 342A  
                                   _PIR1 0F9E                                     u5810 1BB2  
                                   u5730 1AAC                                     u5650 191C  
                                   u3890 1446                                     u4690 2004  
                                   u2994 317C                                     _PIR2 0FA1  
                                   u5811 1BAE                                     u5731 1AA8  
                                   u5651 1918                                     u3891 1442  
                                   u4691 2000                                     u2995 3178  
                                   u5820 1BC8                                     u5740 1AD6  
                                   u5660 192C                                     u5821 1BC4  
                                   u5741 1AD2                                     u5661 1928  
                                   u5830 1BE2                                     u5750 1AFA  
                                   u5670 196E                                     u5831 1BDE  
                                   u5751 1AF6                                     u5671 196A  
                                   u5840 1C2E                                     u5760 1B10  
                                   u5680 1980                                     u5841 1C2A  
                                   u5761 1B0C                                     u5681 197C  
                                   u5850 1C5E                                     u5770 1B2E  
                                   u5690 1990                                     u5851 1C5A  
                                   u5771 1B2A                                     u5691 198C  
                                   u5907 257C                                     u5860 1C8A  
                                   u5780 1B4E                                     u5861 1C86  
                                   u5781 1B4A                                     u5917 32D0  
                                   u5790 1B5E                                     u5791 1B5A  
                                   u5877 236E                                     u5887 2546  
                                   u5897 2564            __end_of_mcal_layer_initialize 34D8  
                                   _led1 006D                                     _dbuf 00CA  
                                   _main 220A                                     _prec 00F2  
                                   _nout 00EE                                     _view 00BA  
                                   fsr0h 0FEA                                     fsr1h 0FE2  
                                   indf0 0FEF                                     fsr2h 0FDA  
                                   fsr0l 0FE9                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   btemp 006E                   __end_of_led_initialize 2CCC  
                convert_uint8_to_str@str 0042                                     prodh 0FF4  
                                   prodl 0FF3                                     start 000E  
  __end_of_GLOBAL_INTERRUPT_RETURN_STATE 3462            _GLOBAL_INTERRUPT_RETURN_STATE 3440  
                        ___fldiv@new_exp 0105                             ___param_bank 0000  
           __end_of_ADC_choose_IN_Hdnler 341E                     _gpio_pin_write_logic 26D0  
                          ___fltol@sign1 004A                          __end_of___fladd 14C8  
                                  ?_main 0001                          __end_of___fldiv 1C9E  
                                  _EEADR 0FA9                    ?_lcd_print_string_pos 0026  
                        __end_of___flmul 18EE                          __end_of___flsub 3168  
                        __end_of___fltol 26D0                          __end_of___lwdiv 2D40  
                        __end_of___lwmod 2E0E                                    i2l271 2DA8  
                                  i2l601 350E                                    i2l444 2ED0  
                                  i2l605 3502                                    i2l613 34FA  
                                  i2l609 3506                                    i2l617 34FE  
                                  i2l820 3480                                    i2l593 3512  
                                  i2l729 1E9E                                    i2l666 31EC  
                                  i2l683 34E2                                    i2l940 33D4  
                                  i2l597 350A                        ?_lcd_send_command 001F  
                    relay_turn_off@F3087 005D                             vfpfcnvrt@cnt 001D  
                           vfpfcnvrt@fmt 001A                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                   __end_of_hal_adc_init 30D8                                    _E_Reg 00B6  
                                  _F_Reg 00B2                                    _TRISA 0F92  
                                  _TRISB 0F93                                    _TRISC 0F94  
                                  _TRISD 0F95                                    _TRISE 0F96  
                                  _P_Reg 00AE                       ??_lcd_send_command 0021  
                                  _Value 0065                                    _adc_1 00C4  
                                  _flags 005A                                    _errno 00F4  
                                  _fputc 2B0C                                    _width 00F0  
                                  _putch 3514                                    pclath 0FFA  
                                  pclatu 0FFB                                    tablat 0FF5  
                          _snprintf$2377 0032                                    ttemp5 006F  
                                  ttemp6 0072                                    ttemp7 0076  
                                  status 0FD8                                    wtemp8 006F  
                 _GLOBAL_INTERUPT_ENABLE 34EC                          ?_led_initialize 0019  
                _Module_INTERRUPT_ENABLE 326E                          __initialization 2E0E  
                           __end_of_main 238A                 ??_ADC_get_value_from_reg 0012  
                  ?_gpio_pin_write_logic 0011                                ??_ADC_ISR 000B  
     hal_adc_read_analog_pin@UsedChannel 0015                                   ??_main 00FE  
                              ??_IN0_ISR 0001                     _convert_uint8_to_str 3350  
                          __activetblptr 0003                          ??_lcd_print_chr 0021  
                      __end_of_RB4_F_ISR 3510                         led_turn_on@F3085 0062  
            _RB5_InterruotHandlerFalling 0050                        __end_of_RB5_F_ISR 3508  
                      __end_of_RB6_F_ISR 3500                        __end_of_RB4_R_ISR 350C  
                      __end_of_RB5_R_ISR 3504                        __end_of_RB6_R_ISR 34FC  
                ecu_layer_initialize@ret 0026                                   ?_fputc 0011  
                                 _ADRESH 0FC4                                   _EEADRH 0FAA  
                                 _ADRESL 0FC3                                   _EEDATA 0FA8  
                                 _EECON2 0FA7                     _ADC_Pin_Input_switch 2984  
                                 ?_putch 0001              _RB5_InterruotHandlerRissing 0052  
               _gpio_pin_write_direction 28AA                                   i2l4002 2E70  
                                 i2l4004 2E80                                   i2l4006 2E84  
                                 i2l4220 2D7A                                   i2l4212 2D40  
                                 i2l4222 2D7C                                   i2l4214 2D40  
                                 i2l4224 2D8C                                   i2l4216 2D44  
                                 i2l4320 3462                                   i2l4226 2D9C  
                                 i2l4218 2D5A                                   i2l4322 346A  
                                 i2l4228 2DA0                                   i2l2662 3510  
                                 i2l2670 350C                                   i2l2666 3508  
                                 i2l2674 3500                                   i2l2682 34F8  
                                 i2l2678 3504                                   i2l2686 34FC  
                                 i2l4560 31AE                                   i2l5600 1E6C  
                                 i2l5520 1CB8                                   i2l4650 33BA  
                                 i2l5602 1E7A                                   i2l5530 1CF4  
                                 i2l5522 1CC6                                   i2l4556 31AE  
                                 i2l5604 1E7E                                   i2l5540 1D26  
                                 i2l5532 1D02                                   i2l5524 1CD4  
                                 i2l4646 34D8                                   i2l5606 1E8C  
                                 i2l5542 1D34                                   i2l5550 1D5A  
                                 i2l5534 1D12                                   i2l5526 1CD8  
                                 i2l4648 33B0                                   i2l5608 1E9A  
                                 i2l5560 1D96                                   i2l5552 1D68  
                                 i2l5544 1D42                                   i2l5536 1D14  
                                 i2l5528 1CE6                                   i2l5570 1DD4  
                                 i2l5554 1D76                                   i2l5562 1D9A  
                                 i2l5546 1D52                                   i2l5538 1D18  
                                 i2l5580 1E06                                   i2l5572 1DD8  
                                 i2l5564 1DA8                                   i2l5556 1D84  
                                 i2l5548 1D56                                   i2l5590 1E38  
                                 i2l5582 1E16                                   i2l5566 1DB6  
                                 i2l5574 1DDC                                   i2l5558 1D94  
                                 i2l5592 1E46                                   i2l5584 1E18  
                                 i2l5576 1DEA                                   i2l5568 1DC4  
                                 i2l5594 1E56                                   i2l5578 1DF8  
                                 i2l5586 1E1C                                   i2l5596 1E5A  
                                 i2l5588 1E2A                                   i2l5598 1E5E  
                       __end_of___xxtofl 206E      __end_of_Module_INTERRUPT_ClEAR_FLAG 31AC  
         ?i2_Module_INTERRUPT_ClEAR_FLAG 0001              _Module_INTERRUPT_ClEAR_FLAG 3168  
      ADC_get_value_from_reg@AnalogValue 0011                            _tris_register 00A4  
               ?_application_instiallize 0001                         send_byte@command 001A  
                     lcd_inintialize@lcd 0022                       lcd_inintialize@ret 0025  
                           vfprintf@cfmt 0028                                ??___fladd 0019  
                              ??___fldiv 00FA                                ??___flmul 0031  
                              ??___flsub 0029                                ??___fltol 0046  
                              ??___lwdiv 0015                                ??___lwmod 0015  
                      _lcd_clear_display 341E                                   clear_0 2E54  
                                 clear_1 2E60                   ??_lcd_print_string_pos 002A  
                                 isa$std 0001           ADC_select_acquisition_time@ADC 0011  
                  ?_convert_uint8_to_str 0042                       ?_lcd_clear_display 0022  
gpio_pin_direction_intialize@_pin_config 0011                             ??_EEPROM_ISR 0008  
                                 fputc@c 0011                             __pdataCOMRAM 0067  
                           __mediumconst 1000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                                 putch@c 0001                      ??_lcd_clear_display 0023  
                       __end_of_vfprintf 3086                    ?_ADC_Pin_Input_switch 0001  
                       __end_of_snprintf 28AA                  ??_gpio_pin_Toggle_logic 0002  
                _GLOBAL_INTERUPT_DISABLE 34F2                     _ADC_choose_IN_Hdnler 33FA  
                           ___xxtofl@arg 001B                             ___xxtofl@exp 001A  
                           ___xxtofl@val 0011           ADC_INTERRUPT_INIT@adc_priority 0001  
                             __accesstop 0080                  __end_of__initialization 2E66  
                      ?_lcd_print_string 0022                ??_Module_INTERRUPT_ENABLE 0012  
                          ___rparam_used 0001                               ___fltol@f1 0042  
                    _ADC_choose_port_cfg 331C                        led_initialize@led 001D  
                        _led_turn_toggle 2D40                       ??_lcd_print_string 0025  
                      led_initialize@ret 001C               lcd_print_string_pos@string 0029  
                     __end_of_EEPROM_ISR 34E4                   ??_gpio_pin_write_logic 0013  
                         __pcstackCOMRAM 0001                __end_of_lcd_clear_display 3440  
                           __pidataBANK0 30D8                            __end_of_fputc 2BB6  
                          __end_of_putch 3516                         ??_lcd_set_cursor 0025  
                   ?_ADC_choose_port_cfg 0011                      lcd_print_string@lcd 0022  
                    lcd_print_string@ret 0025                                  ??_fputc 0014  
                                ??_putch 0011                    ?_ADC_choose_IN_Hdnler 0011  
                             __pbssBANK0 00CA                          hal_adc_init@ADC 0018  
                   relay_intialize@F3077 005F                             _hal_adc_init 3086  
       gpio_pin_write_logic@logic_status 0012              __end_of_InterruptManaerHigh 1EBA  
                _hal_adc_read_analog_pin 2F86                        led_turn_off@F3090 0061  
                                _ADC_ISR 33B0               ?_ADC_select_Clk_Conversion 0011  
                 ??_convert_uint8_to_str 0043                                  _IN0_ISR 3510  
                  ??_ADC_choose_port_cfg 0012                                ?___xxtofl 0011  
                          _keypad_values 0080                     led_turn_toggle@F3095 0060  
                 ??_ADC_Pin_Input_switch 0011                ??_GLOBAL_INTERUPT_DISABLE 0011  
                 _ADC_get_value_from_reg 33D6                         ??_led_initialize 001A  
                                _RBflags 0067                  ?_GLOBAL_INTERUPT_ENABLE 0001  
                __end_of_led_turn_toggle 2DAA               __end_of_ADC_Voltage_source 3032  
                  _mcal_layer_initialize 34CC                     _ADC_InterruptHandler 00F6  
                                __Hparam 0000             ?_ADC_select_acquisition_time 0011  
                                __Lparam 0000                      lcd_inintialize@wire 0024  
                                ___fladd 1012                                  ___fldiv 18EE  
                                ___flmul 14C8                                  ___flsub 3122  
                                ___fltol 25CA                                  ___lwdiv 2CCC  
                                ___lwmod 2DAA                                ?_vfprintf 0025  
                           __psmallconst 1000                                ?_snprintf 0029  
                                __pcinit 2E0E                                  __ramtop 1000  
      __end_of_ADC_select_Clk_Conversion 33B0                                  __ptext0 220A  
                                __ptext1 2ED2                                  __ptext2 2A5C  
                                __ptext3 2BB6                                  __ptext4 31EE  
                                __ptext5 341E                                  __ptext6 2F86  
                                __ptext7 33D6                                  __ptext8 2984  
                                __ptext9 3350              gpio_pin_write_direction@ret 0018  
             ??_gpio_pin_write_direction 0013                               ??___xxtofl 0015  
             __end_of_send_enable_signal 32E8                                _RB4_F_ISR 350C  
         __end_of_GLOBAL_INTERUPT_ENABLE 34F2                   ??_ADC_choose_IN_Hdnler 0012  
                              _RB5_F_ISR 3504                                _RB6_F_ISR 34FC  
                 lcd_print_string@string 0023                                _RB4_R_ISR 3508  
                                _voltage 00EA                                _RB5_R_ISR 3500  
                         __pintcode_body 1C9E                                _RB6_R_ISR 34F8  
                   end_of_initialization 2E66                   ADC_choose_port_cfg@ADC 0011  
                      __end_of_send_byte 2F86                                  fputc@fp 0013  
                             _my_adc_isr 3462                                  int_func 1C9E  
              ??_hal_adc_read_analog_pin 0017                        __end_of_vfpfcnvrt 220A  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc1 0FE6  
                                postinc2 0FDE                         vfpfcnvrt@convarg 001F  
                             ??_vfprintf 0028                        ??_lcd_inintialize 0023  
                             ??_snprintf 002F          ??i2_Module_INTERRUPT_ClEAR_FLAG 0002  
                              _PORTBbits 0F81               __end_of_ADC_INTERRUPT_INIT 34A0  
                            ___fladd@grs 0020     __end_of_gpio_pin_direction_intialize 24B6  
           _gpio_pin_direction_intialize 238A                    __end_of_lcd_print_chr 322E  
                          ___xxtofl@sign 0019              _RB6_InterruotHandlerFalling 004C  
                ADC_choose_IN_Hdnler@ADC 0011                              ___fldiv@grs 0107  
                            ___fldiv@rem 0100                               ?_RB4_F_ISR 0001  
                             ?_RB5_F_ISR 0001                               ?_RB6_F_ISR 0001  
                             ?_RB4_R_ISR 0001                               ?_RB5_R_ISR 0001  
                             ?_RB6_R_ISR 0001                         ?_led_turn_toggle 0006  
          __end_of_gpio_pin_Toggle_logic 2ED2                              ___flmul@grs 0036  
                 ?_mcal_layer_initialize 0001                            _seg_off_logic 0064  
            _RB6_InterruotHandlerRissing 004E                            send_byte@wire 001E  
                   hal_adc_init@priority 0019                       relay_turn_on@F3082 005E  
                            vfpfcnvrt@ap 001B                              vfpfcnvrt@cp 0023  
                            vfpfcnvrt@fp 0019                            __pidataCOMRAM 34E4  
        __end_of_hal_adc_read_analog_pin 2FDC                      start_initialization 2E0E  
          ?_gpio_pin_direction_intialize 0011                             _lat_register 009A  
                            ?_my_adc_isr 0001                   lcd_print_chr@character 0020  
                       _lcd_send_command 322E       gpio_pin_write_direction@pin_config 0011  
                            vfprintf@fmt 0026                              __pdataBANK0 0080  
                               ?_ADC_ISR 0001              ??_ADC_select_Clk_Conversion 0012  
           __end_of_ecu_layer_initialize 34BC           ?_GLOBAL_INTERRUPT_RETURN_STATE 0001  
                               ?_IN0_ISR 0001         __end_of_gpio_pin_write_direction 2984  
                              ___fladd@a 0015                                ___fladd@b 0011  
                              ___fldiv@a 0046                                ___fldiv@b 0042  
                ?_ADC_get_value_from_reg 0011                                ___flmul@a 002D  
                              ___flmul@b 0029                              __pbssCOMRAM 004C  
                              ___flsub@a 0025                                ___flsub@b 0021  
  __end_ofi2_Module_INTERRUPT_ClEAR_FLAG 31EE            i2_Module_INTERRUPT_ClEAR_FLAG 31AC  
                          __pcstackBANK0 00FA                            __pcstackBANK1 0100  
                       lcd_print_chr@lcd 001F                              snprintf@cnt 0035  
                            snprintf@fmt 002C                         lcd_print_chr@ret 0021  
                            ??_RB4_F_ISR 0001                              ??_RB5_F_ISR 0001  
                            ??_RB6_F_ISR 0001                                _adc_value 0065  
                            ??_RB4_R_ISR 0001                              ??_RB5_R_ISR 0001  
                            ??_RB6_R_ISR 0001                 ?_Module_INTERRUPT_ENABLE 0011  
               led_initialize@led_config 0019          gpio_pin_direction_intialize@ret 0017  
                       ___lwdiv@dividend 0011                                __pintcode 0008  
                               ?___fladd 0011          gpio_pin_write_logic@_pin_config 0011  
                               ?___fldiv 0042                                 ?___flmul 0029  
                               ?___flsub 0021                                 ?___fltol 0042  
            __end_of_ADC_choose_port_cfg 3350                                 ?___lwdiv 0011  
                               ?___lwmod 0011             ADC_select_Clk_Conversion@ADC 0011  
                     _ADC_Voltage_source 2FDC                      lcd_send_command@lcd 001F  
                _application_instiallize 34BC                      lcd_send_command@ret 0021  
             hal_adc_read_analog_pin@ADC 0014           __end_of_ADC_get_value_from_reg 33FA  
                            __smallconst 1000                      ?_ADC_Voltage_source 0011  
                       ___lwdiv@quotient 0015                _ADC_select_Clk_Conversion 3382  
         ??_gpio_pin_direction_intialize 0012                          _lcd_inintialize 24B6  
                               _PIE1bits 0F9D             ?_Module_INTERRUPT_ClEAR_FLAG 0011  
                               _PIE2bits 0FA0                                _send_byte 2F2C  
                     _send_enable_signal 32AC                     ??_ADC_Voltage_source 0012  
       gpio_pin_Toggle_logic@_pin_config 0001                                 i2u321_40 2E80  
                               i2u321_41 2E7C                                 i2u322_44 2EA2  
                               i2u322_45 2E9E                                 i2u410_48 33C0  
                               i2u410_49 33D4                                 i2u340_45 2D8A  
                               i2u340_47 2D8C                                 i2u341_40 2D9C  
                               i2u341_41 2D98                                 _PIR1bits 0F9E  
                               _PIR2bits 0FA1                                 i2u540_40 1D34  
                               i2u540_41 1D30                                 i2u541_40 1D42  
                               i2u533_40 1CC6                                 i2u541_41 1D3E  
                               i2u533_41 1CC2                                 i2u550_40 1DD4  
                               i2u542_40 1D52                                 i2u534_40 1CD4  
                               i2u550_41 1DD0                                 i2u542_41 1D4E  
                               i2u534_41 1CD0                                 i2u551_40 1DEA  
                               i2u543_40 1D68                                 i2u535_40 1CE6  
                               i2u551_41 1DE6                                 i2u543_41 1D64  
                               i2u535_41 1CE2                                 i2u560_40 1E7A  
                               i2u552_40 1DF8                                 i2u544_40 1D76  
                               i2u536_40 1CF4                                 i2u560_41 1E76  
                               i2u552_41 1DF4                                 i2u544_41 1D72  
                               i2u536_41 1CF0                                 i2u561_40 1E8C  
                               i2u553_40 1E06                                 i2u545_40 1D84  
                               i2u537_40 1D02                                 i2u561_41 1E88  
                               i2u553_41 1E02                                 i2u545_41 1D80  
                               i2u537_41 1CFE                                 i2u562_40 1E9A  
                               i2u554_40 1E16                                 i2u546_40 1D94  
                               i2u538_40 1D12                                 i2u562_41 1E96  
                               i2u554_41 1E12                                 i2u546_41 1D90  
                               i2u538_41 1D0E                                 i2u555_40 1E2A  
                               i2u547_40 1DA8                                 i2u539_40 1D26  
                               i2u555_41 1E26                                 i2u547_41 1DA4  
                               i2u539_41 1D22                                 i2u395_44 31C0  
                               i2u395_45 31BC                                 i2u556_40 1E38  
                               i2u548_40 1DB6                                 i2u556_41 1E34  
                               i2u548_41 1DB2                                 i2u557_40 1E46  
                               i2u549_40 1DC4                                 i2u557_41 1E42  
                               i2u549_41 1DC0                                 i2u558_40 1E56  
                               i2u558_41 1E52                                 i2u559_40 1E6C  
                               i2u559_41 1E68                                 i2u592_47 3474  
                    ?_send_enable_signal 0019                                _vfpfcnvrt 206E  
                       _lcd_print_string 2BB6                               _ADCON0bits 0FC2  
                             _ADCON1bits 0FC1                               _ADCON2bits 0FC0  
               ?_GLOBAL_INTERUPT_DISABLE 0001                             send_byte@lcd 0019  
                           send_byte@ret 001D          __end_of_Module_INTERRUPT_ENABLE 32AC  
                              _voltage_a 005C                                _voltage_b 005B  
                           _seg_on_logic 006C                               vfpfcnvrt@c 0024  
                ??_mcal_layer_initialize 001A                  gpio_pin_write_logic@ret 0018  
                            _INTCON2bits 0FF1                                copy_data0 2E22  
                              copy_data1 2E42                     ??_send_enable_signal 001A  
                     _ADC_INTERRUPT_INIT 3482                     _ecu_layer_initialize 34A0  
                  send_enable_signal@lcd 0019                    send_enable_signal@ret 001A  
                             _EECON1bits 0FA6                ?_gpio_pin_write_direction 0011  
                             ?_send_byte 0019               Module_INTERRUPT_ENABLE@Reg 0016  
                               __Hrparam 0000                      ?_ADC_INTERRUPT_INIT 0001  
          ??_Module_INTERRUPT_ClEAR_FLAG 0012                               vfprintf@ap 0027  
                               __Lrparam 0000                               vfprintf@fp 0025  
              ??_application_instiallize 0027       hal_adc_read_analog_pin@AnalogValue 0016  
                             ?_vfpfcnvrt 0019                               snprintf@ap 0034  
            _RB4_InterruotHandlerFalling 0054                convert_uint8_to_str@value 0043  
               __end_of_lcd_send_command 326E                               _EEPROM_ISR 34D8  
                               ___xxtofl 1EBA                     ??_ADC_INTERRUPT_INIT 0018  
                        ___lwdiv@divisor 0013                          ___lwdiv@counter 0017  
            _RB4_InterruotHandlerRissing 0056                                 __ptext10 27BE  
                               __ptext11 3032                                 __ptext20 3440  
                               __ptext12 206E                                 __ptext21 32E8  
                               __ptext13 2B0C                                 __ptext30 34F2  
                               __ptext22 3382                                 __ptext14 3514  
                               __ptext31 34A0                                 __ptext23 331C  
                               __ptext15 2DAA                                 __ptext40 1EBA  
                               __ptext32 2C46                                 __ptext24 33FA  
                               __ptext16 2CCC                                 __ptext41 25CA  
                               __ptext33 238A                                 __ptext25 2FDC  
                               __ptext17 34BC                                 __ptext50 3504  
                               __ptext42 3122                                 __ptext34 24B6  
                               __ptext26 3482                                 __ptext18 34CC  
                               __ptext51 3508                                 __ptext43 1012  
                               __ptext35 322E                                 __ptext27 326E  
                               __ptext19 3086                                 __ptext52 350C  
                               __ptext44 14C8                                 __ptext36 32AC  
                               __ptext28 3168                                 __ptext53 3510  
                               __ptext45 18EE                                 __ptext37 2F2C  
                               __ptext29 34EC                                 __ptext54 34D8  
                               __ptext38 26D0                                 __ptext55 33B0  
                               __ptext47 34F8                                 __ptext39 28AA  
                               __ptext56 31AC                                 __ptext48 34FC  
                               __ptext57 3462                                 __ptext49 3500  
                               __ptext58 2D40                                 __ptext59 2E70  
                __end_of_lcd_inintialize 25CA                       led_turn_toggle@led 0008  
               ?_hal_adc_read_analog_pin 0014                             ??_my_adc_isr 0009  
                  ?_ecu_layer_initialize 0001             __end_of_lcd_print_string_pos 2F2C  
                  _gpio_pin_Toggle_logic 2E70      __end_of_ADC_select_acquisition_time 331C  
            _ADC_select_acquisition_time 32E8                            ?_hal_adc_init 0018  
                               isa$xinst 0000                                 int$flags 006E  
        __end_of_GLOBAL_INTERUPT_DISABLE 34F8                                 _vfprintf 3032  
                               _snprintf 27BE            ??_ADC_select_acquisition_time 0012  
               ??_GLOBAL_INTERUPT_ENABLE 0011       Module_INTERRUPT_ClEAR_FLAG@bit_pos 0011  
   i2Module_INTERRUPT_ClEAR_FLAG@bit_pos 0001                       __end_of_my_adc_isr 3482  
                   _IN0_InterruotHandler 0058                               _INTCONbits 0FF2  
                lcd_send_command@command 0020          __end_of_application_instiallize 34CC  
           __end_of_gpio_pin_write_logic 27BE   GLOBAL_INTERRUPT_RETURN_STATE@PrevState 0011  
                              snprintf@f 0037                                snprintf@n 002A  
                              snprintf@s 0029                                 intlevel2 0000  
                         _lcd_set_cursor 2A5C                        lcd_set_cursor@col 0024  
                      lcd_set_cursor@lcd 0022          ??_GLOBAL_INTERRUPT_RETURN_STATE 0011  
                      lcd_set_cursor@ret 0025                        lcd_set_cursor@row 0023  
                    _InterruptManaerHigh 0008                         ___lwmod@dividend 0011  
                         ??_hal_adc_init 0019                              ??_send_byte 001B  
                lcd_print_string_pos@col 0028                  lcd_print_string_pos@lcd 0026  
                lcd_print_string_pos@row 0027                              ??_vfpfcnvrt 001C  
                   ?_InterruptManaerHigh 0001                              ?_EEPROM_ISR 0001  
      gpio_pin_write_direction@direction 0012                          ___lwmod@divisor 0013  
                        ___lwmod@counter 0015                            _lcd_print_chr 31EE  
                 __end_of_lcd_set_cursor 2B0C                     lcd_clear_display@lcd 0022  
                          ___fladd@signs 001D                         ?_lcd_inintialize 0022  
                 ??_ecu_layer_initialize 0026                            _port_register 0090  
         Module_INTERRUPT_ClEAR_FLAG@Reg 0017         i2Module_INTERRUPT_ClEAR_FLAG@Reg 0007  
           __end_of_convert_uint8_to_str 3382                             ___fladd@aexp 001E  
                           ___fladd@bexp 001F                 __end_of_lcd_print_string 2C46  
                 ?_gpio_pin_Toggle_logic 0001                  _EEPROM_InterruptHandler 00F8  
         Module_INTERRUPT_ENABLE@bit_pos 0011                led_initialize@logic_state 001B  
                         _led_initialize 2C46  
